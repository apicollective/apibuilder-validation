{
  "apidoc": {
    "version": "0.12.8"
  },
  "name": "API Internal",
  "organization": {
    "key": "flow"
  },
  "application": {
    "key": "api-internal"
  },
  "namespace": "io.flow.internal.v0",
  "version": "0.1.88",
  "info": {},
  "headers": [],
  "imports": [
    {
      "uri": "https://app.apibuilder.io/flow/billing/latest/service.json",
      "namespace": "io.flow.billing.v0",
      "organization": {
        "key": "flow"
      },
      "application": {
        "key": "billing"
      },
      "version": "0.1.88",
      "enums": [
        "billing_statement_attachment_key",
        "billing_transaction_status",
        "billing_transaction_type",
        "subscription_frequency"
      ],
      "unions": [
        "repeat_schedule"
      ],
      "models": [
        "account",
        "account_reference",
        "account_statistics",
        "billing_statement",
        "billing_statement_attachment",
        "billing_statement_reference",
        "billing_statement_totals",
        "billing_transaction",
        "email_form",
        "next_billing_statement",
        "repeat_daily",
        "repeat_monthly",
        "repeat_weekly",
        "subscription"
      ]
    },
    {
      "uri": "https://app.apibuilder.io/flow/common/latest/service.json",
      "namespace": "io.flow.common.v0",
      "organization": {
        "key": "flow"
      },
      "application": {
        "key": "common"
      },
      "version": "0.3.28",
      "enums": [
        "calendar",
        "capability",
        "change_type",
        "day_of_week",
        "delivered_duty",
        "environment",
        "exception_type",
        "holiday_calendar",
        "margin_type",
        "measurement_system",
        "role",
        "rounding_method",
        "rounding_type",
        "schedule_exception_status",
        "sort_direction",
        "unit_of_measurement",
        "unit_of_time",
        "user_status",
        "value_added_service",
        "visibility"
      ],
      "unions": [
        "expandable_organization",
        "expandable_user"
      ],
      "models": [
        "address",
        "catalog_item_summary",
        "contact",
        "customer",
        "datetime_range",
        "dimension",
        "dimensions",
        "exception",
        "experience_summary",
        "line_item",
        "line_item_form",
        "margin",
        "measurement",
        "money",
        "name",
        "organization",
        "organization_reference",
        "organization_summary",
        "price",
        "price_form",
        "price_with_base",
        "rounding",
        "schedule",
        "user",
        "user_reference",
        "zone"
      ]
    },
    {
      "uri": "https://app.apibuilder.io/flow/error/latest/service.json",
      "namespace": "io.flow.error.v0",
      "organization": {
        "key": "flow"
      },
      "application": {
        "key": "error"
      },
      "version": "0.3.36",
      "enums": [
        "generic_error_code"
      ],
      "unions": [],
      "models": [
        "generic_error"
      ]
    },
    {
      "uri": "https://app.apibuilder.io/flow/common/latest/service.json",
      "namespace": "io.flow.common.v0",
      "organization": {
        "key": "flow"
      },
      "application": {
        "key": "common"
      },
      "version": "0.3.28",
      "enums": [
        "calendar",
        "capability",
        "change_type",
        "day_of_week",
        "delivered_duty",
        "environment",
        "exception_type",
        "holiday_calendar",
        "margin_type",
        "measurement_system",
        "role",
        "rounding_method",
        "rounding_type",
        "schedule_exception_status",
        "sort_direction",
        "unit_of_measurement",
        "unit_of_time",
        "user_status",
        "value_added_service",
        "visibility"
      ],
      "unions": [
        "expandable_organization",
        "expandable_user"
      ],
      "models": [
        "address",
        "catalog_item_summary",
        "contact",
        "customer",
        "datetime_range",
        "dimension",
        "dimensions",
        "exception",
        "experience_summary",
        "line_item",
        "line_item_form",
        "margin",
        "measurement",
        "money",
        "name",
        "organization",
        "organization_reference",
        "organization_summary",
        "price",
        "price_form",
        "price_with_base",
        "rounding",
        "schedule",
        "user",
        "user_reference",
        "zone"
      ]
    },
    {
      "uri": "https://app.apibuilder.io/flow/error/latest/service.json",
      "namespace": "io.flow.error.v0",
      "organization": {
        "key": "flow"
      },
      "application": {
        "key": "error"
      },
      "version": "0.3.36",
      "enums": [
        "generic_error_code"
      ],
      "unions": [],
      "models": [
        "generic_error"
      ]
    },
    {
      "uri": "https://app.apibuilder.io/flow/payment/latest/service.json",
      "namespace": "io.flow.payment.v0",
      "organization": {
        "key": "flow"
      },
      "application": {
        "key": "payment"
      },
      "version": "0.3.47",
      "enums": [
        "authorization_decline_code",
        "authorization_delete_error_code",
        "authorization_option",
        "authorization_status",
        "avs_code",
        "capture_decline_code",
        "card_error_code",
        "card_type",
        "cvv_code",
        "payment_error_code",
        "refund_decline_code"
      ],
      "unions": [
        "authorization",
        "authorization_form",
        "expandable_card",
        "expandable_payment",
        "payment",
        "payment_form"
      ],
      "models": [
        "authorization_delete_error",
        "authorization_order_reference",
        "authorization_reference",
        "authorization_result",
        "authorization_version",
        "avs",
        "capture",
        "capture_form",
        "capture_version",
        "card",
        "card_authorization",
        "card_error",
        "card_form",
        "card_nonce_form",
        "card_reference",
        "card_version",
        "cvv",
        "direct_authorization_form",
        "expiration",
        "merchant_of_record_authorization_form",
        "merchant_of_record_payment_form",
        "online_authorization",
        "payment_error",
        "payment_paypal",
        "payment_paypal_data",
        "payment_reference",
        "payment_version",
        "paypal_authorization_form",
        "public_key",
        "refund",
        "refund_capture",
        "refund_form",
        "refund_order_summary",
        "refund_order_summary_amounts",
        "refund_version"
      ]
    },
    {
      "uri": "https://app.apibuilder.io/flow/reference/latest/service.json",
      "namespace": "io.flow.reference.v0",
      "organization": {
        "key": "flow"
      },
      "application": {
        "key": "reference"
      },
      "version": "0.3.30",
      "enums": [
        "payment_method_type",
        "province_type"
      ],
      "unions": [],
      "models": [
        "country",
        "currency",
        "currency_symbols",
        "language",
        "locale",
        "locale_numbers",
        "payment_method",
        "payment_method_image",
        "payment_method_images",
        "province",
        "region",
        "timezone"
      ]
    },
    {
      "uri": "https://app.apibuilder.io/flow/common/latest/service.json",
      "namespace": "io.flow.common.v0",
      "organization": {
        "key": "flow"
      },
      "application": {
        "key": "common"
      },
      "version": "0.3.28",
      "enums": [
        "calendar",
        "capability",
        "change_type",
        "day_of_week",
        "delivered_duty",
        "environment",
        "exception_type",
        "holiday_calendar",
        "margin_type",
        "measurement_system",
        "role",
        "rounding_method",
        "rounding_type",
        "schedule_exception_status",
        "sort_direction",
        "unit_of_measurement",
        "unit_of_time",
        "user_status",
        "value_added_service",
        "visibility"
      ],
      "unions": [
        "expandable_organization",
        "expandable_user"
      ],
      "models": [
        "address",
        "catalog_item_summary",
        "contact",
        "customer",
        "datetime_range",
        "dimension",
        "dimensions",
        "exception",
        "experience_summary",
        "line_item",
        "line_item_form",
        "margin",
        "measurement",
        "money",
        "name",
        "organization",
        "organization_reference",
        "organization_summary",
        "price",
        "price_form",
        "price_with_base",
        "rounding",
        "schedule",
        "user",
        "user_reference",
        "zone"
      ]
    },
    {
      "uri": "https://app.apibuilder.io/flow/error/latest/service.json",
      "namespace": "io.flow.error.v0",
      "organization": {
        "key": "flow"
      },
      "application": {
        "key": "error"
      },
      "version": "0.3.36",
      "enums": [
        "generic_error_code"
      ],
      "unions": [],
      "models": [
        "generic_error"
      ]
    },
    {
      "uri": "https://app.apibuilder.io/flow/reference/latest/service.json",
      "namespace": "io.flow.reference.v0",
      "organization": {
        "key": "flow"
      },
      "application": {
        "key": "reference"
      },
      "version": "0.3.30",
      "enums": [
        "payment_method_type",
        "province_type"
      ],
      "unions": [],
      "models": [
        "country",
        "currency",
        "currency_symbols",
        "language",
        "locale",
        "locale_numbers",
        "payment_method",
        "payment_method_image",
        "payment_method_images",
        "province",
        "region",
        "timezone"
      ]
    },
    {
      "uri": "https://app.apibuilder.io/flow/error/latest/service.json",
      "namespace": "io.flow.error.v0",
      "organization": {
        "key": "flow"
      },
      "application": {
        "key": "error"
      },
      "version": "0.3.36",
      "enums": [
        "generic_error_code"
      ],
      "unions": [],
      "models": [
        "generic_error"
      ]
    },
    {
      "uri": "https://app.apibuilder.io/flow/common/latest/service.json",
      "namespace": "io.flow.common.v0",
      "organization": {
        "key": "flow"
      },
      "application": {
        "key": "common"
      },
      "version": "0.3.28",
      "enums": [
        "calendar",
        "capability",
        "change_type",
        "day_of_week",
        "delivered_duty",
        "environment",
        "exception_type",
        "holiday_calendar",
        "margin_type",
        "measurement_system",
        "role",
        "rounding_method",
        "rounding_type",
        "schedule_exception_status",
        "sort_direction",
        "unit_of_measurement",
        "unit_of_time",
        "user_status",
        "value_added_service",
        "visibility"
      ],
      "unions": [
        "expandable_organization",
        "expandable_user"
      ],
      "models": [
        "address",
        "catalog_item_summary",
        "contact",
        "customer",
        "datetime_range",
        "dimension",
        "dimensions",
        "exception",
        "experience_summary",
        "line_item",
        "line_item_form",
        "margin",
        "measurement",
        "money",
        "name",
        "organization",
        "organization_reference",
        "organization_summary",
        "price",
        "price_form",
        "price_with_base",
        "rounding",
        "schedule",
        "user",
        "user_reference",
        "zone"
      ]
    },
    {
      "uri": "https://app.apibuilder.io/flow/currency/latest/service.json",
      "namespace": "io.flow.currency.v0",
      "organization": {
        "key": "flow"
      },
      "application": {
        "key": "currency"
      },
      "version": "0.3.47",
      "enums": [],
      "unions": [],
      "models": [
        "duration",
        "organization_currency_setting",
        "organization_currency_setting_form",
        "organization_currency_setting_version",
        "rate",
        "rate_form",
        "rate_version"
      ]
    },
    {
      "uri": "https://app.apibuilder.io/flow/error/latest/service.json",
      "namespace": "io.flow.error.v0",
      "organization": {
        "key": "flow"
      },
      "application": {
        "key": "error"
      },
      "version": "0.3.36",
      "enums": [
        "generic_error_code"
      ],
      "unions": [],
      "models": [
        "generic_error"
      ]
    },
    {
      "uri": "https://app.apibuilder.io/flow/common/latest/service.json",
      "namespace": "io.flow.common.v0",
      "organization": {
        "key": "flow"
      },
      "application": {
        "key": "common"
      },
      "version": "0.3.28",
      "enums": [
        "calendar",
        "capability",
        "change_type",
        "day_of_week",
        "delivered_duty",
        "environment",
        "exception_type",
        "holiday_calendar",
        "margin_type",
        "measurement_system",
        "role",
        "rounding_method",
        "rounding_type",
        "schedule_exception_status",
        "sort_direction",
        "unit_of_measurement",
        "unit_of_time",
        "user_status",
        "value_added_service",
        "visibility"
      ],
      "unions": [
        "expandable_organization",
        "expandable_user"
      ],
      "models": [
        "address",
        "catalog_item_summary",
        "contact",
        "customer",
        "datetime_range",
        "dimension",
        "dimensions",
        "exception",
        "experience_summary",
        "line_item",
        "line_item_form",
        "margin",
        "measurement",
        "money",
        "name",
        "organization",
        "organization_reference",
        "organization_summary",
        "price",
        "price_form",
        "price_with_base",
        "rounding",
        "schedule",
        "user",
        "user_reference",
        "zone"
      ]
    },
    {
      "uri": "https://app.apibuilder.io/flow/error/latest/service.json",
      "namespace": "io.flow.error.v0",
      "organization": {
        "key": "flow"
      },
      "application": {
        "key": "error"
      },
      "version": "0.3.36",
      "enums": [
        "generic_error_code"
      ],
      "unions": [],
      "models": [
        "generic_error"
      ]
    },
    {
      "uri": "https://app.apibuilder.io/flow/common/latest/service.json",
      "namespace": "io.flow.common.v0",
      "organization": {
        "key": "flow"
      },
      "application": {
        "key": "common"
      },
      "version": "0.3.28",
      "enums": [
        "calendar",
        "capability",
        "change_type",
        "day_of_week",
        "delivered_duty",
        "environment",
        "exception_type",
        "holiday_calendar",
        "margin_type",
        "measurement_system",
        "role",
        "rounding_method",
        "rounding_type",
        "schedule_exception_status",
        "sort_direction",
        "unit_of_measurement",
        "unit_of_time",
        "user_status",
        "value_added_service",
        "visibility"
      ],
      "unions": [
        "expandable_organization",
        "expandable_user"
      ],
      "models": [
        "address",
        "catalog_item_summary",
        "contact",
        "customer",
        "datetime_range",
        "dimension",
        "dimensions",
        "exception",
        "experience_summary",
        "line_item",
        "line_item_form",
        "margin",
        "measurement",
        "money",
        "name",
        "organization",
        "organization_reference",
        "organization_summary",
        "price",
        "price_form",
        "price_with_base",
        "rounding",
        "schedule",
        "user",
        "user_reference",
        "zone"
      ]
    },
    {
      "uri": "https://app.apibuilder.io/flow/error/latest/service.json",
      "namespace": "io.flow.error.v0",
      "organization": {
        "key": "flow"
      },
      "application": {
        "key": "error"
      },
      "version": "0.3.36",
      "enums": [
        "generic_error_code"
      ],
      "unions": [],
      "models": [
        "generic_error"
      ]
    },
    {
      "uri": "https://app.apibuilder.io/flow/experience/latest/service.json",
      "namespace": "io.flow.experience.v0",
      "organization": {
        "key": "flow"
      },
      "application": {
        "key": "experience"
      },
      "version": "0.3.47",
      "enums": [
        "credit_payment_error_code",
        "experience_payment_method_tag",
        "order_error_code",
        "order_payment_type",
        "order_price_detail_component_key",
        "order_price_detail_key",
        "order_status",
        "organization_payment_method_tag",
        "promotion_trigger_type"
      ],
      "unions": [
        "allocation_component",
        "allocation_detail",
        "expandable_experience",
        "expandable_order",
        "payment_method_tag",
        "promotion"
      ],
      "models": [
        "allocation",
        "allocation_detail_component",
        "allocation_levy_component",
        "allocation_line_detail",
        "allocation_order_detail",
        "credit_payment",
        "credit_payment_error",
        "credit_payment_form",
        "credit_payment_put_form",
        "credit_payment_version",
        "delivered_duty_setting",
        "experience",
        "experience_defaults",
        "experience_form",
        "experience_geo",
        "experience_payment_method_rule_form",
        "experience_reference",
        "experience_settings",
        "experience_version",
        "ference",
        "free_shipping",
        "item_margin",
        "item_margin_post_form",
        "item_margin_put_form",
        "item_margin_version",
        "line",
        "localized_line_item",
        "order",
        "order_address",
        "order_error",
        "order_estimate",
        "order_estimate_form",
        "order_form",
        "order_identifier",
        "order_identifier_form",
        "order_identifier_put_form",
        "order_identifier_version",
        "order_payment",
        "order_price_detail",
        "order_price_detail_component",
        "order_put_form",
        "order_reference",
        "order_version",
        "payment_method_rule",
        "promotion_trigger",
        "promotions",
        "region_reference"
      ]
    },
    {
      "uri": "https://app.apibuilder.io/flow/price-internal/latest/service.json",
      "namespace": "io.flow.price.internal.v0",
      "organization": {
        "key": "flow"
      },
      "application": {
        "key": "price-internal"
      },
      "version": "0.0.78",
      "enums": [
        "deminimis_adjustment_type",
        "label_format",
        "simple_rounding_strategy"
      ],
      "unions": [],
      "models": [
        "label_format_form"
      ]
    },
    {
      "uri": "https://app.apibuilder.io/flow/common/latest/service.json",
      "namespace": "io.flow.common.v0",
      "organization": {
        "key": "flow"
      },
      "application": {
        "key": "common"
      },
      "version": "0.3.28",
      "enums": [
        "calendar",
        "capability",
        "change_type",
        "day_of_week",
        "delivered_duty",
        "environment",
        "exception_type",
        "holiday_calendar",
        "margin_type",
        "measurement_system",
        "role",
        "rounding_method",
        "rounding_type",
        "schedule_exception_status",
        "sort_direction",
        "unit_of_measurement",
        "unit_of_time",
        "user_status",
        "value_added_service",
        "visibility"
      ],
      "unions": [
        "expandable_organization",
        "expandable_user"
      ],
      "models": [
        "address",
        "catalog_item_summary",
        "contact",
        "customer",
        "datetime_range",
        "dimension",
        "dimensions",
        "exception",
        "experience_summary",
        "line_item",
        "line_item_form",
        "margin",
        "measurement",
        "money",
        "name",
        "organization",
        "organization_reference",
        "organization_summary",
        "price",
        "price_form",
        "price_with_base",
        "rounding",
        "schedule",
        "user",
        "user_reference",
        "zone"
      ]
    },
    {
      "uri": "https://app.apibuilder.io/flow/error/latest/service.json",
      "namespace": "io.flow.error.v0",
      "organization": {
        "key": "flow"
      },
      "application": {
        "key": "error"
      },
      "version": "0.3.36",
      "enums": [
        "generic_error_code"
      ],
      "unions": [],
      "models": [
        "generic_error"
      ]
    },
    {
      "uri": "https://app.apibuilder.io/flow/fulfillment/latest/service.json",
      "namespace": "io.flow.fulfillment.v0",
      "organization": {
        "key": "flow"
      },
      "application": {
        "key": "fulfillment"
      },
      "version": "0.3.47",
      "enums": [
        "quote_error_code",
        "shipment_integration_type",
        "strategy",
        "tier_direction",
        "tier_strategy"
      ],
      "unions": [
        "delivery",
        "tier_rule_outcome",
        "tier_rule_outcome_form"
      ],
      "models": [
        "amount_margin",
        "amount_margin_form",
        "at_cost",
        "available_service",
        "carrier",
        "carrier_reference",
        "center",
        "center_form",
        "center_summary",
        "center_version",
        "delivery_option",
        "delivery_option_form",
        "delivery_option_reference",
        "delivery_option_summary",
        "delivery_option_version",
        "delivery_summary",
        "delivery_version",
        "delivery_window",
        "digital_delivery",
        "estimated_window",
        "flat_rate",
        "flat_rate_form",
        "fulfillment_experience_reference",
        "number_range",
        "option_weight_estimates",
        "packaging",
        "percent_margin",
        "physical_delivery",
        "quote",
        "quote_error",
        "quote_form",
        "quote_summary",
        "quote_version",
        "scheduled_pickup",
        "service",
        "service_reference",
        "service_summary",
        "shipping_address",
        "tier",
        "tier_default",
        "tier_default_form",
        "tier_default_version",
        "tier_form",
        "tier_reference",
        "tier_rule",
        "tier_rule_form",
        "tier_rule_version",
        "tier_summary",
        "tier_version"
      ]
    },
    {
      "uri": "http://www.apidoc.me/flow/error/latest/service.json",
      "namespace": "io.flow.error.v0",
      "organization": {
        "key": "flow"
      },
      "application": {
        "key": "error"
      },
      "version": "0.3.36",
      "enums": [
        "generic_error_code"
      ],
      "unions": [],
      "models": [
        "generic_error"
      ]
    },
    {
      "uri": "http://www.apidoc.me/flow/harmonization/latest/service.json",
      "namespace": "io.flow.harmonization.v0",
      "organization": {
        "key": "flow"
      },
      "application": {
        "key": "harmonization"
      },
      "version": "0.3.47",
      "enums": [],
      "unions": [
        "hint_form"
      ],
      "models": [
        "harmonization_settings",
        "harmonization_settings_form",
        "harmonized_category",
        "harmonized_category_reference",
        "harmonized_item",
        "harmonized_item_duty",
        "harmonized_item_duty_form",
        "harmonized_item_duty_version",
        "harmonized_item_form",
        "harmonized_item_put_form",
        "harmonized_item_reference",
        "harmonized_item_version",
        "harmonized_landed_cost",
        "harmonized_landed_cost_form",
        "harmonized_landed_cost_item",
        "hint_result",
        "hs10",
        "hs10_code",
        "hs10_version",
        "hs6",
        "hs6_version",
        "hs_code",
        "phrase_hint",
        "phrase_hint_form"
      ]
    },
    {
      "uri": "https://app.apibuilder.io/flow/common/latest/service.json",
      "namespace": "io.flow.common.v0",
      "organization": {
        "key": "flow"
      },
      "application": {
        "key": "common"
      },
      "version": "0.3.28",
      "enums": [
        "calendar",
        "capability",
        "change_type",
        "day_of_week",
        "delivered_duty",
        "environment",
        "exception_type",
        "holiday_calendar",
        "margin_type",
        "measurement_system",
        "role",
        "rounding_method",
        "rounding_type",
        "schedule_exception_status",
        "sort_direction",
        "unit_of_measurement",
        "unit_of_time",
        "user_status",
        "value_added_service",
        "visibility"
      ],
      "unions": [
        "expandable_organization",
        "expandable_user"
      ],
      "models": [
        "address",
        "catalog_item_summary",
        "contact",
        "customer",
        "datetime_range",
        "dimension",
        "dimensions",
        "exception",
        "experience_summary",
        "line_item",
        "line_item_form",
        "margin",
        "measurement",
        "money",
        "name",
        "organization",
        "organization_reference",
        "organization_summary",
        "price",
        "price_form",
        "price_with_base",
        "rounding",
        "schedule",
        "user",
        "user_reference",
        "zone"
      ]
    },
    {
      "uri": "https://app.apibuilder.io/flow/error/latest/service.json",
      "namespace": "io.flow.error.v0",
      "organization": {
        "key": "flow"
      },
      "application": {
        "key": "error"
      },
      "version": "0.3.36",
      "enums": [
        "generic_error_code"
      ],
      "unions": [],
      "models": [
        "generic_error"
      ]
    },
    {
      "uri": "https://app.apibuilder.io/flow/common/latest/service.json",
      "namespace": "io.flow.common.v0",
      "organization": {
        "key": "flow"
      },
      "application": {
        "key": "common"
      },
      "version": "0.3.28",
      "enums": [
        "calendar",
        "capability",
        "change_type",
        "day_of_week",
        "delivered_duty",
        "environment",
        "exception_type",
        "holiday_calendar",
        "margin_type",
        "measurement_system",
        "role",
        "rounding_method",
        "rounding_type",
        "schedule_exception_status",
        "sort_direction",
        "unit_of_measurement",
        "unit_of_time",
        "user_status",
        "value_added_service",
        "visibility"
      ],
      "unions": [
        "expandable_organization",
        "expandable_user"
      ],
      "models": [
        "address",
        "catalog_item_summary",
        "contact",
        "customer",
        "datetime_range",
        "dimension",
        "dimensions",
        "exception",
        "experience_summary",
        "line_item",
        "line_item_form",
        "margin",
        "measurement",
        "money",
        "name",
        "organization",
        "organization_reference",
        "organization_summary",
        "price",
        "price_form",
        "price_with_base",
        "rounding",
        "schedule",
        "user",
        "user_reference",
        "zone"
      ]
    },
    {
      "uri": "https://app.apibuilder.io/flow/error/latest/service.json",
      "namespace": "io.flow.error.v0",
      "organization": {
        "key": "flow"
      },
      "application": {
        "key": "error"
      },
      "version": "0.3.36",
      "enums": [
        "generic_error_code"
      ],
      "unions": [],
      "models": [
        "generic_error"
      ]
    },
    {
      "uri": "https://app.apibuilder.io/flow/error/latest/service.json",
      "namespace": "io.flow.error.v0",
      "organization": {
        "key": "flow"
      },
      "application": {
        "key": "error"
      },
      "version": "0.3.36",
      "enums": [
        "generic_error_code"
      ],
      "unions": [],
      "models": [
        "generic_error"
      ]
    },
    {
      "uri": "https://app.apibuilder.io/flow/payment/latest/service.json",
      "namespace": "io.flow.payment.v0",
      "organization": {
        "key": "flow"
      },
      "application": {
        "key": "payment"
      },
      "version": "0.3.47",
      "enums": [
        "authorization_decline_code",
        "authorization_delete_error_code",
        "authorization_option",
        "authorization_status",
        "avs_code",
        "capture_decline_code",
        "card_error_code",
        "card_type",
        "cvv_code",
        "payment_error_code",
        "refund_decline_code"
      ],
      "unions": [
        "authorization",
        "authorization_form",
        "expandable_card",
        "expandable_payment",
        "payment",
        "payment_form"
      ],
      "models": [
        "authorization_delete_error",
        "authorization_order_reference",
        "authorization_reference",
        "authorization_result",
        "authorization_version",
        "avs",
        "capture",
        "capture_form",
        "capture_version",
        "card",
        "card_authorization",
        "card_error",
        "card_form",
        "card_nonce_form",
        "card_reference",
        "card_version",
        "cvv",
        "direct_authorization_form",
        "expiration",
        "merchant_of_record_authorization_form",
        "merchant_of_record_payment_form",
        "online_authorization",
        "payment_error",
        "payment_paypal",
        "payment_paypal_data",
        "payment_reference",
        "payment_version",
        "paypal_authorization_form",
        "public_key",
        "refund",
        "refund_capture",
        "refund_form",
        "refund_order_summary",
        "refund_order_summary_amounts",
        "refund_version"
      ]
    },
    {
      "uri": "https://app.apibuilder.io/flow/paypal/latest/service.json",
      "namespace": "io.flow.external.paypal.v1",
      "organization": {
        "key": "flow"
      },
      "application": {
        "key": "paypal"
      },
      "version": "0.0.6",
      "enums": [
        "allowed_payment_method",
        "failure_reason",
        "intent",
        "payment_method",
        "refund_state",
        "state"
      ],
      "unions": [],
      "models": [
        "error",
        "error_validation_detail",
        "execute_request",
        "item",
        "item_list",
        "link",
        "payer",
        "payer_info",
        "payment_options",
        "payment_request",
        "payment_response",
        "redirect_urls",
        "refund",
        "refund_amount",
        "refund_request",
        "shipping_address",
        "token",
        "transaction",
        "transaction_amount",
        "transaction_details",
        "webhook_event"
      ]
    },
    {
      "uri": "https://app.apibuilder.io/flow/common/latest/service.json",
      "namespace": "io.flow.common.v0",
      "organization": {
        "key": "flow"
      },
      "application": {
        "key": "common"
      },
      "version": "0.3.28",
      "enums": [
        "calendar",
        "capability",
        "change_type",
        "day_of_week",
        "delivered_duty",
        "environment",
        "exception_type",
        "holiday_calendar",
        "margin_type",
        "measurement_system",
        "role",
        "rounding_method",
        "rounding_type",
        "schedule_exception_status",
        "sort_direction",
        "unit_of_measurement",
        "unit_of_time",
        "user_status",
        "value_added_service",
        "visibility"
      ],
      "unions": [
        "expandable_organization",
        "expandable_user"
      ],
      "models": [
        "address",
        "catalog_item_summary",
        "contact",
        "customer",
        "datetime_range",
        "dimension",
        "dimensions",
        "exception",
        "experience_summary",
        "line_item",
        "line_item_form",
        "margin",
        "measurement",
        "money",
        "name",
        "organization",
        "organization_reference",
        "organization_summary",
        "price",
        "price_form",
        "price_with_base",
        "rounding",
        "schedule",
        "user",
        "user_reference",
        "zone"
      ]
    },
    {
      "uri": "https://app.apibuilder.io/flow/error/latest/service.json",
      "namespace": "io.flow.error.v0",
      "organization": {
        "key": "flow"
      },
      "application": {
        "key": "error"
      },
      "version": "0.3.36",
      "enums": [
        "generic_error_code"
      ],
      "unions": [],
      "models": [
        "generic_error"
      ]
    },
    {
      "uri": "https://app.apibuilder.io/flow/label/latest/service.json",
      "namespace": "io.flow.label.v0",
      "organization": {
        "key": "flow"
      },
      "application": {
        "key": "label"
      },
      "version": "0.3.47",
      "enums": [
        "direction",
        "manifest_type",
        "tracking_number_type"
      ],
      "unions": [],
      "models": [
        "label_order_summary",
        "manifest",
        "manifest_form",
        "shipping_label",
        "shipping_label_form",
        "shipping_label_package",
        "shipping_label_summary",
        "shipping_label_version",
        "shipping_notification",
        "shipping_notification_form",
        "shipping_notification_version"
      ]
    },
    {
      "uri": "https://app.apibuilder.io/flow/common/latest/service.json",
      "namespace": "io.flow.common.v0",
      "organization": {
        "key": "flow"
      },
      "application": {
        "key": "common"
      },
      "version": "0.3.28",
      "enums": [
        "calendar",
        "capability",
        "change_type",
        "day_of_week",
        "delivered_duty",
        "environment",
        "exception_type",
        "holiday_calendar",
        "margin_type",
        "measurement_system",
        "role",
        "rounding_method",
        "rounding_type",
        "schedule_exception_status",
        "sort_direction",
        "unit_of_measurement",
        "unit_of_time",
        "user_status",
        "value_added_service",
        "visibility"
      ],
      "unions": [
        "expandable_organization",
        "expandable_user"
      ],
      "models": [
        "address",
        "catalog_item_summary",
        "contact",
        "customer",
        "datetime_range",
        "dimension",
        "dimensions",
        "exception",
        "experience_summary",
        "line_item",
        "line_item_form",
        "margin",
        "measurement",
        "money",
        "name",
        "organization",
        "organization_reference",
        "organization_summary",
        "price",
        "price_form",
        "price_with_base",
        "rounding",
        "schedule",
        "user",
        "user_reference",
        "zone"
      ]
    },
    {
      "uri": "https://app.apibuilder.io/flow/error/latest/service.json",
      "namespace": "io.flow.error.v0",
      "organization": {
        "key": "flow"
      },
      "application": {
        "key": "error"
      },
      "version": "0.3.36",
      "enums": [
        "generic_error_code"
      ],
      "unions": [],
      "models": [
        "generic_error"
      ]
    },
    {
      "uri": "https://app.apibuilder.io/flow/common/latest/service.json",
      "namespace": "io.flow.common.v0",
      "organization": {
        "key": "flow"
      },
      "application": {
        "key": "common"
      },
      "version": "0.3.28",
      "enums": [
        "calendar",
        "capability",
        "change_type",
        "day_of_week",
        "delivered_duty",
        "environment",
        "exception_type",
        "holiday_calendar",
        "margin_type",
        "measurement_system",
        "role",
        "rounding_method",
        "rounding_type",
        "schedule_exception_status",
        "sort_direction",
        "unit_of_measurement",
        "unit_of_time",
        "user_status",
        "value_added_service",
        "visibility"
      ],
      "unions": [
        "expandable_organization",
        "expandable_user"
      ],
      "models": [
        "address",
        "catalog_item_summary",
        "contact",
        "customer",
        "datetime_range",
        "dimension",
        "dimensions",
        "exception",
        "experience_summary",
        "line_item",
        "line_item_form",
        "margin",
        "measurement",
        "money",
        "name",
        "organization",
        "organization_reference",
        "organization_summary",
        "price",
        "price_form",
        "price_with_base",
        "rounding",
        "schedule",
        "user",
        "user_reference",
        "zone"
      ]
    },
    {
      "uri": "https://app.apibuilder.io/flow/experience/latest/service.json",
      "namespace": "io.flow.experience.v0",
      "organization": {
        "key": "flow"
      },
      "application": {
        "key": "experience"
      },
      "version": "0.3.47",
      "enums": [
        "credit_payment_error_code",
        "experience_payment_method_tag",
        "order_error_code",
        "order_payment_type",
        "order_price_detail_component_key",
        "order_price_detail_key",
        "order_status",
        "organization_payment_method_tag",
        "promotion_trigger_type"
      ],
      "unions": [
        "allocation_component",
        "allocation_detail",
        "expandable_experience",
        "expandable_order",
        "payment_method_tag",
        "promotion"
      ],
      "models": [
        "allocation",
        "allocation_detail_component",
        "allocation_levy_component",
        "allocation_line_detail",
        "allocation_order_detail",
        "credit_payment",
        "credit_payment_error",
        "credit_payment_form",
        "credit_payment_put_form",
        "credit_payment_version",
        "delivered_duty_setting",
        "experience",
        "experience_defaults",
        "experience_form",
        "experience_geo",
        "experience_payment_method_rule_form",
        "experience_reference",
        "experience_settings",
        "experience_version",
        "ference",
        "free_shipping",
        "item_margin",
        "item_margin_post_form",
        "item_margin_put_form",
        "item_margin_version",
        "line",
        "localized_line_item",
        "order",
        "order_address",
        "order_error",
        "order_estimate",
        "order_estimate_form",
        "order_form",
        "order_identifier",
        "order_identifier_form",
        "order_identifier_put_form",
        "order_identifier_version",
        "order_payment",
        "order_price_detail",
        "order_price_detail_component",
        "order_put_form",
        "order_reference",
        "order_version",
        "payment_method_rule",
        "promotion_trigger",
        "promotions",
        "region_reference"
      ]
    },
    {
      "uri": "https://app.apibuilder.io/flow/reference/latest/service.json",
      "namespace": "io.flow.reference.v0",
      "organization": {
        "key": "flow"
      },
      "application": {
        "key": "reference"
      },
      "version": "0.3.30",
      "enums": [
        "payment_method_type",
        "province_type"
      ],
      "unions": [],
      "models": [
        "country",
        "currency",
        "currency_symbols",
        "language",
        "locale",
        "locale_numbers",
        "payment_method",
        "payment_method_image",
        "payment_method_images",
        "province",
        "region",
        "timezone"
      ]
    },
    {
      "uri": "https://app.apibuilder.io/flow/search/latest/service.json",
      "namespace": "io.flow.search.v0",
      "organization": {
        "key": "flow"
      },
      "application": {
        "key": "search"
      },
      "version": "0.3.47",
      "enums": [],
      "unions": [
        "document"
      ],
      "models": [
        "catalog_item_document",
        "catalog_item_document_images",
        "category_summary",
        "harmonization_document",
        "suggestion",
        "upload"
      ]
    },
    {
      "uri": "https://app.apibuilder.io/flow/tracking/latest/service.json",
      "namespace": "io.flow.tracking.v0",
      "organization": {
        "key": "flow"
      },
      "application": {
        "key": "tracking"
      },
      "version": "0.3.47",
      "enums": [
        "tracking_status"
      ],
      "unions": [],
      "models": [
        "tracking",
        "tracking_event",
        "tracking_event_form",
        "tracking_event_summary",
        "tracking_event_version",
        "tracking_form",
        "tracking_label",
        "tracking_label_form",
        "tracking_label_summary",
        "tracking_label_version",
        "tracking_summary",
        "tracking_version"
      ]
    },
    {
      "uri": "https://app.apibuilder.io/flow/catalog/latest/service.json",
      "namespace": "io.flow.catalog.v0",
      "organization": {
        "key": "flow"
      },
      "application": {
        "key": "catalog"
      },
      "version": "0.3.47",
      "enums": [
        "adjustment_reason_key",
        "attribute_data_type",
        "attribute_intent",
        "fulfillment_method_type",
        "fulfillment_method_value",
        "included_levy_key",
        "query_type",
        "subcatalog_item_status",
        "taxability_type",
        "taxability_value",
        "update_policy"
      ],
      "unions": [
        "expandable_item_function",
        "expandable_subcatalog",
        "localized_price"
      ],
      "models": [
        "adjustment_reason",
        "attribute",
        "attribute_form",
        "attribute_version",
        "catalog",
        "catalog_reference",
        "catalog_statistics",
        "catalog_version",
        "flow_item_index_metadata",
        "image",
        "image_form",
        "included_levies",
        "item",
        "item_form",
        "item_function",
        "item_function_post_form",
        "item_function_put_form",
        "item_function_reference",
        "item_function_version",
        "item_statistics",
        "item_version",
        "local",
        "localized_adjustment",
        "localized_item_duty",
        "localized_item_price",
        "localized_item_vat",
        "localized_total",
        "options",
        "query",
        "query_form",
        "query_validation",
        "subcatalog",
        "subcatalog_form",
        "subcatalog_function",
        "subcatalog_function_form",
        "subcatalog_function_version",
        "subcatalog_item",
        "subcatalog_item_version",
        "subcatalog_reference",
        "subcatalog_settings",
        "subcatalog_settings_form",
        "subcatalog_statistics",
        "subcatalog_version",
        "targeting",
        "targeting_form",
        "targeting_item",
        "targeting_query",
        "targeting_query_form",
        "targeting_summary",
        "targeting_version"
      ]
    },
    {
      "uri": "https://app.apibuilder.io/flow/common/latest/service.json",
      "namespace": "io.flow.common.v0",
      "organization": {
        "key": "flow"
      },
      "application": {
        "key": "common"
      },
      "version": "0.3.28",
      "enums": [
        "calendar",
        "capability",
        "change_type",
        "day_of_week",
        "delivered_duty",
        "environment",
        "exception_type",
        "holiday_calendar",
        "margin_type",
        "measurement_system",
        "role",
        "rounding_method",
        "rounding_type",
        "schedule_exception_status",
        "sort_direction",
        "unit_of_measurement",
        "unit_of_time",
        "user_status",
        "value_added_service",
        "visibility"
      ],
      "unions": [
        "expandable_organization",
        "expandable_user"
      ],
      "models": [
        "address",
        "catalog_item_summary",
        "contact",
        "customer",
        "datetime_range",
        "dimension",
        "dimensions",
        "exception",
        "experience_summary",
        "line_item",
        "line_item_form",
        "margin",
        "measurement",
        "money",
        "name",
        "organization",
        "organization_reference",
        "organization_summary",
        "price",
        "price_form",
        "price_with_base",
        "rounding",
        "schedule",
        "user",
        "user_reference",
        "zone"
      ]
    },
    {
      "uri": "https://app.apibuilder.io/flow/error/latest/service.json",
      "namespace": "io.flow.error.v0",
      "organization": {
        "key": "flow"
      },
      "application": {
        "key": "error"
      },
      "version": "0.3.36",
      "enums": [
        "generic_error_code"
      ],
      "unions": [],
      "models": [
        "generic_error"
      ]
    },
    {
      "uri": "https://app.apibuilder.io/flow/experience/latest/service.json",
      "namespace": "io.flow.experience.v0",
      "organization": {
        "key": "flow"
      },
      "application": {
        "key": "experience"
      },
      "version": "0.3.47",
      "enums": [
        "credit_payment_error_code",
        "experience_payment_method_tag",
        "order_error_code",
        "order_payment_type",
        "order_price_detail_component_key",
        "order_price_detail_key",
        "order_status",
        "organization_payment_method_tag",
        "promotion_trigger_type"
      ],
      "unions": [
        "allocation_component",
        "allocation_detail",
        "expandable_experience",
        "expandable_order",
        "payment_method_tag",
        "promotion"
      ],
      "models": [
        "allocation",
        "allocation_detail_component",
        "allocation_levy_component",
        "allocation_line_detail",
        "allocation_order_detail",
        "credit_payment",
        "credit_payment_error",
        "credit_payment_form",
        "credit_payment_put_form",
        "credit_payment_version",
        "delivered_duty_setting",
        "experience",
        "experience_defaults",
        "experience_form",
        "experience_geo",
        "experience_payment_method_rule_form",
        "experience_reference",
        "experience_settings",
        "experience_version",
        "ference",
        "free_shipping",
        "item_margin",
        "item_margin_post_form",
        "item_margin_put_form",
        "item_margin_version",
        "line",
        "localized_line_item",
        "order",
        "order_address",
        "order_error",
        "order_estimate",
        "order_estimate_form",
        "order_form",
        "order_identifier",
        "order_identifier_form",
        "order_identifier_put_form",
        "order_identifier_version",
        "order_payment",
        "order_price_detail",
        "order_price_detail_component",
        "order_put_form",
        "order_reference",
        "order_version",
        "payment_method_rule",
        "promotion_trigger",
        "promotions",
        "region_reference"
      ]
    },
    {
      "uri": "https://app.apibuilder.io/flow/payment/latest/service.json",
      "namespace": "io.flow.payment.v0",
      "organization": {
        "key": "flow"
      },
      "application": {
        "key": "payment"
      },
      "version": "0.3.47",
      "enums": [
        "authorization_decline_code",
        "authorization_delete_error_code",
        "authorization_option",
        "authorization_status",
        "avs_code",
        "capture_decline_code",
        "card_error_code",
        "card_type",
        "cvv_code",
        "payment_error_code",
        "refund_decline_code"
      ],
      "unions": [
        "authorization",
        "authorization_form",
        "expandable_card",
        "expandable_payment",
        "payment",
        "payment_form"
      ],
      "models": [
        "authorization_delete_error",
        "authorization_order_reference",
        "authorization_reference",
        "authorization_result",
        "authorization_version",
        "avs",
        "capture",
        "capture_form",
        "capture_version",
        "card",
        "card_authorization",
        "card_error",
        "card_form",
        "card_nonce_form",
        "card_reference",
        "card_version",
        "cvv",
        "direct_authorization_form",
        "expiration",
        "merchant_of_record_authorization_form",
        "merchant_of_record_payment_form",
        "online_authorization",
        "payment_error",
        "payment_paypal",
        "payment_paypal_data",
        "payment_reference",
        "payment_version",
        "paypal_authorization_form",
        "public_key",
        "refund",
        "refund_capture",
        "refund_form",
        "refund_order_summary",
        "refund_order_summary_amounts",
        "refund_version"
      ]
    },
    {
      "uri": "https://app.apibuilder.io/flow/reference/latest/service.json",
      "namespace": "io.flow.reference.v0",
      "organization": {
        "key": "flow"
      },
      "application": {
        "key": "reference"
      },
      "version": "0.3.30",
      "enums": [
        "payment_method_type",
        "province_type"
      ],
      "unions": [],
      "models": [
        "country",
        "currency",
        "currency_symbols",
        "language",
        "locale",
        "locale_numbers",
        "payment_method",
        "payment_method_image",
        "payment_method_images",
        "province",
        "region",
        "timezone"
      ]
    },
    {
      "uri": "https://app.apibuilder.io/flow/session/latest/service.json",
      "namespace": "io.flow.session.v0",
      "organization": {
        "key": "flow"
      },
      "application": {
        "key": "session"
      },
      "version": "0.3.47",
      "enums": [],
      "unions": [
        "session",
        "session_authorization"
      ],
      "models": [
        "cart_reference",
        "local_session",
        "organization_session",
        "organization_session_authorization",
        "session_authorization_form",
        "session_expiration_config",
        "session_form",
        "session_put_form",
        "session_reset_form",
        "session_visit",
        "session_visitor"
      ]
    },
    {
      "uri": "https://app.apibuilder.io/flow/shopify/latest/service.json",
      "namespace": "io.flow.shopify.v0",
      "organization": {
        "key": "flow"
      },
      "application": {
        "key": "shopify"
      },
      "version": "0.0.6",
      "enums": [
        "cancel_reason",
        "discount_status",
        "discount_type",
        "discrepancy_reason",
        "event",
        "financial_status_type",
        "format",
        "fulfillment_service",
        "fulfillment_status_type",
        "inventory_behaviour",
        "inventory_management",
        "inventory_policy",
        "kind_type",
        "localized_price",
        "order_status_type",
        "price_rule_allocation_method",
        "price_rule_customer_selection",
        "price_rule_target_selection",
        "price_rule_target_type",
        "price_rule_value_type",
        "published_scope",
        "shopify_discount_pagination_direction",
        "shopify_gift_card_status",
        "shopify_processing_method_type",
        "shopify_transaction_error_code",
        "shopify_transaction_status",
        "topic",
        "value_type",
        "weight_unit"
      ],
      "unions": [],
      "models": [
        "count",
        "discount",
        "metafield",
        "metafield_form",
        "option",
        "price_rule",
        "price_rule_discount_code",
        "price_rule_form",
        "price_rule_greater_than_range",
        "price_rule_less_than_range",
        "product",
        "product_delete",
        "product_image",
        "product_variant",
        "request_metafield_form",
        "request_shopify_gift_card",
        "request_shopify_refund_form",
        "request_shopify_transaction_form",
        "response_discount",
        "response_discounts",
        "response_metafield",
        "response_metafields",
        "response_orders_wrapper",
        "response_price_rule",
        "response_price_rule_discount_codes",
        "response_price_rules",
        "response_product",
        "response_products",
        "response_shopify_gift_card",
        "response_shopify_gift_cards",
        "response_shopify_refund_single",
        "response_shopify_transaction",
        "response_shopify_transaction_single",
        "response_variant",
        "shop",
        "shop_response",
        "shopify_address",
        "shopify_client_detail",
        "shopify_customer",
        "shopify_discount_code",
        "shopify_error",
        "shopify_fulfillment",
        "shopify_fulfillment_wrapper",
        "shopify_gift_card",
        "shopify_gift_card_form",
        "shopify_line_item",
        "shopify_line_item_form",
        "shopify_order_count",
        "shopify_order_part_a",
        "shopify_order_part_b",
        "shopify_order_part_c",
        "shopify_order_wrapper",
        "shopify_payment_detail",
        "shopify_refund",
        "shopify_refund_form",
        "shopify_refund_line_item",
        "shopify_refund_line_item_form",
        "shopify_shipping_line",
        "shopify_tax_line",
        "shopify_transaction",
        "shopify_transaction_form",
        "shopify_webhook_order",
        "shopify_webhook_order_line_item",
        "webhook",
        "webhook_form",
        "webhook_form_wrapper",
        "webhook_response_list",
        "webhook_response_single"
      ]
    },
    {
      "uri": "https://app.apibuilder.io/flow/common/latest/service.json",
      "namespace": "io.flow.common.v0",
      "organization": {
        "key": "flow"
      },
      "application": {
        "key": "common"
      },
      "version": "0.3.28",
      "enums": [
        "calendar",
        "capability",
        "change_type",
        "day_of_week",
        "delivered_duty",
        "environment",
        "exception_type",
        "holiday_calendar",
        "margin_type",
        "measurement_system",
        "role",
        "rounding_method",
        "rounding_type",
        "schedule_exception_status",
        "sort_direction",
        "unit_of_measurement",
        "unit_of_time",
        "user_status",
        "value_added_service",
        "visibility"
      ],
      "unions": [
        "expandable_organization",
        "expandable_user"
      ],
      "models": [
        "address",
        "catalog_item_summary",
        "contact",
        "customer",
        "datetime_range",
        "dimension",
        "dimensions",
        "exception",
        "experience_summary",
        "line_item",
        "line_item_form",
        "margin",
        "measurement",
        "money",
        "name",
        "organization",
        "organization_reference",
        "organization_summary",
        "price",
        "price_form",
        "price_with_base",
        "rounding",
        "schedule",
        "user",
        "user_reference",
        "zone"
      ]
    },
    {
      "uri": "https://app.apibuilder.io/flow/error/latest/service.json",
      "namespace": "io.flow.error.v0",
      "organization": {
        "key": "flow"
      },
      "application": {
        "key": "error"
      },
      "version": "0.3.36",
      "enums": [
        "generic_error_code"
      ],
      "unions": [],
      "models": [
        "generic_error"
      ]
    },
    {
      "uri": "http://www.apidoc.me/flow/billing/latest/service.json",
      "namespace": "io.flow.billing.v0",
      "organization": {
        "key": "flow"
      },
      "application": {
        "key": "billing"
      },
      "version": "0.1.82",
      "enums": [
        "billing_statement_attachment_key",
        "billing_transaction_status",
        "billing_transaction_type",
        "subscription_frequency"
      ],
      "unions": [
        "repeat_schedule"
      ],
      "models": [
        "account",
        "account_reference",
        "account_statistics",
        "billing_statement",
        "billing_statement_attachment",
        "billing_statement_reference",
        "billing_statement_totals",
        "billing_transaction",
        "email_form",
        "next_billing_statement",
        "repeat_daily",
        "repeat_monthly",
        "repeat_weekly",
        "subscription"
      ]
    },
    {
      "uri": "http://www.apidoc.me/flow/harmonization-internal/latest/service.json",
      "namespace": "io.flow.harmonization.internal.v0",
      "organization": {
        "key": "flow"
      },
      "application": {
        "key": "harmonization-internal"
      },
      "version": "0.2.29",
      "enums": [
        "duty_type"
      ],
      "unions": [
        "task_data",
        "tax"
      ],
      "models": [
        "blacklisted_item",
        "classification",
        "classification_form",
        "classification_reference",
        "detail",
        "detail_form",
        "duty",
        "flow_classification",
        "flow_classification_form",
        "lane",
        "lane_form",
        "task_classify",
        "task_import",
        "task_item_upserted",
        "task_process_queued_event",
        "task_summarize_code",
        "tax_canada",
        "tax_canada_rate",
        "tax_simple",
        "threece_classification",
        "threece_classification_form"
      ]
    }
  ],
  "enums": [
    {
      "name": "billing_statement_attachment_key",
      "plural": "billing_statement_attachment_keys",
      "values": [
        {
          "name": "statement",
          "attributes": [],
          "description": "The actual account statement as a PDF"
        },
        {
          "name": "transactions",
          "attributes": [],
          "description": "CSV export of all transactions on the statement"
        },
        {
          "name": "orders",
          "attributes": [],
          "description": "CSV export of orders associated with transactions on the statement"
        },
        {
          "name": "all",
          "attributes": [],
          "description": "Zip file containing all of the available attachments"
        }
      ],
      "attributes": [],
      "description": "Defines the type of attachment"
    },
    {
      "name": "billing_transaction_status",
      "plural": "billing_transaction_statuses",
      "values": [
        {
          "name": "pending",
          "attributes": []
        },
        {
          "name": "posted",
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "billing_transaction_type",
      "plural": "billing_transaction_types",
      "values": [
        {
          "name": "subscription",
          "attributes": []
        },
        {
          "name": "transfer",
          "attributes": []
        },
        {
          "name": "adjustment",
          "attributes": []
        },
        {
          "name": "capture",
          "attributes": []
        },
        {
          "name": "refund",
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "content_type",
      "plural": "content_types",
      "values": [
        {
          "name": "text",
          "attributes": []
        },
        {
          "name": "html",
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "deminimis_adjustment_type",
      "plural": "deminimis_adjustment_types",
      "values": [
        {
          "name": "none",
          "attributes": []
        },
        {
          "name": "duty",
          "attributes": []
        },
        {
          "name": "vat",
          "attributes": []
        },
        {
          "name": "vat_and_duty",
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Represents a de minimis adjustment type, which describes the combination of levies to which de minimis applies (meaning those levies are not owed)."
    },
    {
      "name": "duty_type",
      "plural": "duty_types",
      "values": [
        {
          "name": "General",
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "event_type",
      "plural": "event_types",
      "values": [
        {
          "name": "account_transactions_export_request",
          "attributes": []
        },
        {
          "name": "account_orders_export_request",
          "attributes": []
        },
        {
          "name": "rate_deleted",
          "attributes": []
        },
        {
          "name": "rate_upserted",
          "attributes": []
        },
        {
          "name": "item_dimension_estimate_upserted",
          "attributes": []
        },
        {
          "name": "item_dimension_estimate_deleted",
          "attributes": []
        },
        {
          "name": "item_sales_margin_deleted",
          "attributes": []
        },
        {
          "name": "item_sales_margin_upserted",
          "attributes": []
        },
        {
          "name": "export_completed",
          "attributes": []
        },
        {
          "name": "export_failed",
          "attributes": []
        },
        {
          "name": "carrier_upserted",
          "attributes": []
        },
        {
          "name": "center_upserted",
          "attributes": []
        },
        {
          "name": "service_upserted",
          "attributes": []
        },
        {
          "name": "blacklisted_item_created",
          "attributes": []
        },
        {
          "name": "blacklisted_item_updated",
          "attributes": []
        },
        {
          "name": "blacklisted_item_deleted",
          "attributes": []
        },
        {
          "name": "harmonization_codes_import",
          "attributes": []
        },
        {
          "name": "import_completed",
          "attributes": []
        },
        {
          "name": "import_failed",
          "attributes": []
        },
        {
          "name": "label_invoice_upserted",
          "attributes": []
        },
        {
          "name": "label_invoice_deleted",
          "attributes": []
        },
        {
          "name": "lane_upserted",
          "attributes": []
        },
        {
          "name": "lane_deleted",
          "attributes": []
        },
        {
          "name": "ratecard_rate_upserted",
          "attributes": []
        },
        {
          "name": "ratecard_rate_deleted",
          "attributes": []
        },
        {
          "name": "user_upserted",
          "attributes": []
        },
        {
          "name": "user_deleted",
          "attributes": []
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "webhook"
          }
        }
      ]
    },
    {
      "name": "flow_app",
      "plural": "flow_apps",
      "values": [
        {
          "name": "console",
          "attributes": [],
          "description": "Defines the Flow Console application"
        }
      ],
      "attributes": []
    },
    {
      "name": "format",
      "plural": "formats",
      "values": [
        {
          "name": "text",
          "attributes": []
        },
        {
          "name": "phone",
          "attributes": []
        },
        {
          "name": "email",
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "ftp_protocol",
      "plural": "ftp_protocols",
      "values": [
        {
          "name": "sftp",
          "attributes": []
        },
        {
          "name": "ftp",
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "label_billing_strategy",
      "plural": "label_billing_strategies",
      "values": [
        {
          "name": "quote",
          "attributes": [],
          "description": "Charge client based on what was quoted with submitted order"
        },
        {
          "name": "carrier",
          "attributes": [],
          "description": "Charge client based on what was actually measured by carrier warehouse"
        }
      ],
      "attributes": [],
      "description": "Strategy for billing client"
    },
    {
      "name": "label_format",
      "plural": "label_formats",
      "values": [
        {
          "name": "default",
          "attributes": []
        },
        {
          "name": "strip_trailing_zeros",
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Represents a possible label format configuration."
    },
    {
      "name": "label_invoice_detail_key",
      "plural": "label_invoice_detail_keys",
      "values": [
        {
          "name": "package",
          "attributes": []
        },
        {
          "name": "duty_tax",
          "attributes": []
        },
        {
          "name": "fuel_surcharge",
          "attributes": []
        },
        {
          "name": "other",
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "processing_transaction_type",
      "plural": "processing_transaction_types",
      "values": [
        {
          "name": "adjustment",
          "attributes": []
        },
        {
          "name": "capture",
          "attributes": []
        },
        {
          "name": "refund",
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "processor",
      "plural": "processors",
      "values": [
        {
          "name": "adyen",
          "attributes": []
        },
        {
          "name": "gointerpay",
          "attributes": []
        },
        {
          "name": "spreedly",
          "attributes": []
        },
        {
          "name": "flow_sandbox",
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Defines the available processors that we can use"
    },
    {
      "name": "responsible_party",
      "plural": "responsible_parties",
      "values": [
        {
          "name": "flow",
          "attributes": []
        },
        {
          "name": "organization",
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "shopify_grant",
      "plural": "shopify_grants",
      "values": [
        {
          "name": "discount",
          "attributes": [],
          "description": "Access to /admin/discounts.json"
        },
        {
          "name": "gift_card",
          "attributes": [],
          "description": "Access to /admin/gift_cards.json"
        }
      ],
      "attributes": []
    },
    {
      "name": "simple_rounding_strategy",
      "plural": "simple_rounding_strategies",
      "values": [
        {
          "name": "no_rounding",
          "attributes": [],
          "description": "Intermediate values are not modified."
        },
        {
          "name": "currency_precision",
          "attributes": [],
          "description": "Intermediate values are rounding to the given currency's precision using HALF_UP rounding. For example, $12.344 USD is rounded to $12.34, while $12.345 USD is rounded to $12.35."
        }
      ],
      "attributes": [],
      "description": "Represents a rounding strategy for calculating prices in a given currency when the fractional part of an intermediate value has precision greater than the number of decimals used by that currency."
    },
    {
      "name": "subscription_frequency",
      "plural": "subscription_frequencies",
      "values": [
        {
          "name": "yearly",
          "attributes": []
        },
        {
          "name": "monthly",
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Defines the subscription periods we offer"
    },
    {
      "name": "transfer_method",
      "plural": "transfer_methods",
      "values": [
        {
          "name": "ach",
          "attributes": []
        }
      ],
      "attributes": []
    }
  ],
  "unions": [
    {
      "name": "content_item",
      "plural": "content_items",
      "types": [
        {
          "type": "dict",
          "attributes": []
        },
        {
          "type": "href",
          "attributes": []
        },
        {
          "type": "label",
          "attributes": []
        },
        {
          "type": "load",
          "attributes": []
        }
      ],
      "attributes": [],
      "discriminator": "discriminator",
      "description": "Represents a single content item"
    },
    {
      "name": "event",
      "plural": "events",
      "types": [
        {
          "type": "account_transactions_export_request",
          "attributes": []
        },
        {
          "type": "account_orders_export_request",
          "attributes": []
        },
        {
          "type": "rate_deleted",
          "attributes": []
        },
        {
          "type": "rate_upserted",
          "attributes": []
        },
        {
          "type": "item_dimension_estimate_upserted",
          "attributes": []
        },
        {
          "type": "item_dimension_estimate_deleted",
          "attributes": []
        },
        {
          "type": "item_sales_margin_deleted",
          "attributes": []
        },
        {
          "type": "item_sales_margin_upserted",
          "attributes": []
        },
        {
          "type": "export_completed",
          "attributes": []
        },
        {
          "type": "export_failed",
          "attributes": []
        },
        {
          "type": "carrier_upserted",
          "attributes": []
        },
        {
          "type": "center_upserted",
          "attributes": []
        },
        {
          "type": "service_upserted",
          "attributes": []
        },
        {
          "type": "blacklisted_item_created",
          "attributes": []
        },
        {
          "type": "blacklisted_item_updated",
          "attributes": []
        },
        {
          "type": "blacklisted_item_deleted",
          "attributes": []
        },
        {
          "type": "harmonization_codes_import",
          "attributes": []
        },
        {
          "type": "import_completed",
          "attributes": []
        },
        {
          "type": "import_failed",
          "attributes": []
        },
        {
          "type": "label_invoice_upserted",
          "attributes": []
        },
        {
          "type": "label_invoice_deleted",
          "attributes": []
        },
        {
          "type": "lane_upserted",
          "attributes": []
        },
        {
          "type": "lane_deleted",
          "attributes": []
        },
        {
          "type": "ratecard_rate_upserted",
          "attributes": []
        },
        {
          "type": "ratecard_rate_deleted",
          "attributes": []
        },
        {
          "type": "user_upserted",
          "attributes": []
        },
        {
          "type": "user_deleted",
          "attributes": []
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "webhook"
          }
        }
      ],
      "discriminator": "discriminator"
    },
    {
      "name": "internal_refund_form",
      "plural": "internal_refund_forms",
      "types": [
        {
          "type": "adyen_refund_form",
          "attributes": []
        }
      ],
      "attributes": [],
      "discriminator": "discriminator",
      "description": "Types of forms one can use to manually record a refund with necessary fields for each payment processor."
    },
    {
      "name": "payment_summary",
      "plural": "payment_summaries",
      "types": [
        {
          "type": "card_payment",
          "attributes": []
        },
        {
          "type": "online_payment",
          "attributes": []
        }
      ],
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "name": "ratecard_fee",
      "plural": "ratecard_fees",
      "types": [
        {
          "type": "ddp",
          "attributes": []
        },
        {
          "type": "fuel_surcharge",
          "attributes": []
        },
        {
          "type": "oversized_shipment",
          "attributes": []
        },
        {
          "type": "return_package_fee",
          "attributes": []
        }
      ],
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "name": "repeat_schedule",
      "plural": "repeat_schedules",
      "types": [
        {
          "type": "repeat_daily",
          "attributes": []
        },
        {
          "type": "repeat_weekly",
          "attributes": []
        },
        {
          "type": "repeat_monthly",
          "attributes": []
        }
      ],
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "name": "task_data",
      "plural": "task_data",
      "types": [
        {
          "type": "task_process_queued_event",
          "attributes": []
        },
        {
          "type": "task_summarize_code",
          "attributes": []
        },
        {
          "type": "task_item_upserted",
          "attributes": []
        },
        {
          "type": "task_classify",
          "attributes": []
        },
        {
          "type": "task_import",
          "attributes": []
        }
      ],
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "name": "tax",
      "plural": "taxes",
      "types": [
        {
          "type": "tax_simple",
          "attributes": []
        },
        {
          "type": "tax_canada",
          "attributes": []
        }
      ],
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "name": "transaction",
      "plural": "transactions",
      "types": [
        {
          "type": "processing_transaction",
          "attributes": []
        },
        {
          "type": "subscription_transaction",
          "attributes": []
        },
        {
          "type": "transfer_transaction",
          "attributes": []
        }
      ],
      "attributes": [],
      "discriminator": "discriminator"
    }
  ],
  "models": [
    {
      "name": "account",
      "plural": "accounts",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "currency",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "ISO 4217 3 currency code as defined in https://api.flow.io/reference/currencies",
          "example": "USD"
        },
        {
          "name": "updated_at",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "timezone",
          "type": "io.flow.reference.v0.models.timezone",
          "required": true,
          "attributes": [],
          "description": "The timezone for this account as defined in https://api.flow.io/reference/timezones"
        },
        {
          "name": "payment_schedule",
          "type": "repeat_schedule",
          "required": true,
          "attributes": []
        },
        {
          "name": "payment_conditions",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Defines conditions that must be met for the payment to be issued",
          "example": "balance >= 10000 or days_since_statement >= 14"
        },
        {
          "name": "statistics",
          "type": "account_statistics",
          "required": true,
          "attributes": []
        },
        {
          "name": "next_statement",
          "type": "next_billing_statement",
          "required": true,
          "attributes": []
        },
        {
          "name": "created_at",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "An organization has a single account for each base currency which manages all entries in that currency."
    },
    {
      "name": "account_orders_export_request",
      "plural": "account_orders_export_requests",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": [],
          "description": "The date/time of the request"
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "export_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "account_id",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "statement_id",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "transaction_type",
          "type": "io.flow.billing.v0.enums.billing_transaction_type",
          "required": false,
          "attributes": []
        },
        {
          "name": "transaction_status",
          "type": "io.flow.billing.v0.enums.billing_transaction_status",
          "required": false,
          "attributes": []
        },
        {
          "name": "transaction_posted_from",
          "type": "date-iso8601",
          "required": false,
          "attributes": []
        },
        {
          "name": "transaction_posted_to",
          "type": "date-iso8601",
          "required": false,
          "attributes": []
        },
        {
          "name": "transaction_posted_on_or_after",
          "type": "date-time-iso8601",
          "required": false,
          "attributes": []
        },
        {
          "name": "transaction_posted_after",
          "type": "date-time-iso8601",
          "required": false,
          "attributes": []
        },
        {
          "name": "transaction_posted_on_or_before",
          "type": "date-time-iso8601",
          "required": false,
          "attributes": []
        },
        {
          "name": "transaction_posted_before",
          "type": "date-time-iso8601",
          "required": false,
          "attributes": []
        },
        {
          "name": "transaction_created_from",
          "type": "date-iso8601",
          "required": false,
          "attributes": []
        },
        {
          "name": "transaction_created_to",
          "type": "date-iso8601",
          "required": false,
          "attributes": []
        },
        {
          "name": "transaction_created_on_or_after",
          "type": "date-time-iso8601",
          "required": false,
          "attributes": []
        },
        {
          "name": "transaction_created_after",
          "type": "date-time-iso8601",
          "required": false,
          "attributes": []
        },
        {
          "name": "transaction_created_on_or_before",
          "type": "date-time-iso8601",
          "required": false,
          "attributes": []
        },
        {
          "name": "transaction_created_before",
          "type": "date-time-iso8601",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "account_put_form",
      "plural": "account_put_forms",
      "fields": [
        {
          "name": "timezone",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The Id of the timezone for this account as defined in https://api.flow.io/reference/timezones"
        },
        {
          "name": "payment_schedule",
          "type": "io.flow.billing.v0.unions.repeat_schedule",
          "required": true,
          "attributes": [],
          "description": "Defines the schedule on which we create payments"
        },
        {
          "name": "payment_conditions",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Defines conditions that must be met for payment to be issued",
          "default": "balance >= 10 or days_since_statement >= 90"
        }
      ],
      "attributes": []
    },
    {
      "name": "account_reference",
      "plural": "account_references",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "currency",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "account_statistics",
      "plural": "account_statisticses",
      "fields": [
        {
          "name": "transfers",
          "type": "io.flow.common.v0.models.price",
          "required": true,
          "attributes": [],
          "description": "Sum of all transfer payouts this year, in the currency of this account"
        },
        {
          "name": "balance",
          "type": "io.flow.common.v0.models.price",
          "required": true,
          "attributes": [],
          "description": "Current balance on the account, in the currency of this account"
        },
        {
          "name": "pending",
          "type": "io.flow.common.v0.models.price",
          "required": true,
          "attributes": [],
          "description": "Current balance on the account, in the currency of this account"
        }
      ],
      "attributes": []
    },
    {
      "name": "account_transactions_export_request",
      "plural": "account_transactions_export_requests",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": [],
          "description": "The date/time of the request"
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "export_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "account_id",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "statement_id",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "type",
          "type": "io.flow.billing.v0.enums.billing_transaction_type",
          "required": false,
          "attributes": []
        },
        {
          "name": "status",
          "type": "io.flow.billing.v0.enums.billing_transaction_status",
          "required": false,
          "attributes": []
        },
        {
          "name": "posted_from",
          "type": "date-iso8601",
          "required": false,
          "attributes": []
        },
        {
          "name": "posted_to",
          "type": "date-iso8601",
          "required": false,
          "attributes": []
        },
        {
          "name": "posted_on_or_after",
          "type": "date-time-iso8601",
          "required": false,
          "attributes": []
        },
        {
          "name": "posted_after",
          "type": "date-time-iso8601",
          "required": false,
          "attributes": []
        },
        {
          "name": "posted_on_or_before",
          "type": "date-time-iso8601",
          "required": false,
          "attributes": []
        },
        {
          "name": "posted_before",
          "type": "date-time-iso8601",
          "required": false,
          "attributes": []
        },
        {
          "name": "created_from",
          "type": "date-iso8601",
          "required": false,
          "attributes": []
        },
        {
          "name": "created_to",
          "type": "date-iso8601",
          "required": false,
          "attributes": []
        },
        {
          "name": "created_on_or_after",
          "type": "date-time-iso8601",
          "required": false,
          "attributes": []
        },
        {
          "name": "created_after",
          "type": "date-time-iso8601",
          "required": false,
          "attributes": []
        },
        {
          "name": "created_on_or_before",
          "type": "date-time-iso8601",
          "required": false,
          "attributes": []
        },
        {
          "name": "created_before",
          "type": "date-time-iso8601",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "adyen_refund_form",
      "plural": "adyen_refund_forms",
      "fields": [
        {
          "name": "amount",
          "type": "decimal",
          "required": true,
          "attributes": [],
          "description": "The amount to refund, in the currency of the associated capture.",
          "example": "120.38"
        },
        {
          "name": "authorization_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "capture_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "currency",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The ISO 4217-3 code for the currency. See https://api.flow.io/reference/currencies",
          "example": "CAD"
        },
        {
          "name": "psp_reference",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "PSP reference provided by Adyen for this transaction"
        },
        {
          "name": "key",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Your unique identifier for this transaction, which if provided is used to implement idempotency. If not provided, we will assign."
        }
      ],
      "attributes": [],
      "description": "Form to use to manually mark an adyend authorization/capture as being refunded."
    },
    {
      "name": "apm_content",
      "plural": "apm_contents",
      "fields": [
        {
          "name": "processor_description",
          "type": "content_item",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "authentication_form",
      "plural": "authentication_forms",
      "fields": [
        {
          "name": "password",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "billing_order_summary",
      "plural": "billing_order_summaries",
      "fields": [
        {
          "name": "number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Client's unique identifier for this object"
        },
        {
          "name": "submitted_at",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "billing_organization_processing_rates",
      "plural": "billing_organization_processing_rates",
      "fields": [
        {
          "name": "capture",
          "type": "decimal",
          "required": true,
          "attributes": [],
          "description": "The processing fee rate for captures",
          "default": "3.0"
        },
        {
          "name": "refund",
          "type": "decimal",
          "required": true,
          "attributes": [],
          "description": "The processing fee rate for refunds",
          "default": "0"
        },
        {
          "name": "fraud",
          "type": "decimal",
          "required": true,
          "attributes": [],
          "description": "The processing fee rate for fraud",
          "default": ".5"
        }
      ],
      "attributes": []
    },
    {
      "name": "billing_organization_settings",
      "plural": "billing_organization_settingses",
      "fields": [
        {
          "name": "days_until_posted",
          "type": "long",
          "required": true,
          "attributes": [],
          "description": "Number of days from capture/refund until funds are posted to an account",
          "default": "21"
        },
        {
          "name": "card_processing_rates",
          "type": "billing_organization_processing_rates",
          "required": true,
          "attributes": []
        },
        {
          "name": "online_processing_rates",
          "type": "billing_organization_processing_rates",
          "required": true,
          "attributes": []
        },
        {
          "name": "logistics",
          "type": "responsible_party",
          "required": true,
          "attributes": [],
          "default": "flow"
        }
      ],
      "attributes": []
    },
    {
      "name": "billing_statement",
      "plural": "billing_statements",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier",
          "example": "xxxx-1234"
        },
        {
          "name": "account",
          "type": "account_reference",
          "required": true,
          "attributes": []
        },
        {
          "name": "period",
          "type": "io.flow.common.v0.models.datetime_range",
          "required": true,
          "attributes": []
        },
        {
          "name": "totals",
          "type": "billing_statement_totals",
          "required": true,
          "attributes": []
        },
        {
          "name": "attachments",
          "type": "[billing_statement_attachment]",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "billing_statement_attachment",
      "plural": "billing_statement_attachments",
      "fields": [
        {
          "name": "key",
          "type": "billing_statement_attachment_key",
          "required": true,
          "attributes": []
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": [],
          "example": "Transactions"
        },
        {
          "name": "url",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "billing_statement_reference",
      "plural": "billing_statement_references",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier",
          "example": "xxxx-1234"
        }
      ],
      "attributes": []
    },
    {
      "name": "billing_statement_totals",
      "plural": "billing_statement_totalses",
      "fields": [
        {
          "name": "starting_balance",
          "type": "io.flow.common.v0.models.price",
          "required": true,
          "attributes": [],
          "description": "Represents the starting account balance (any balance carried forward from an earlier statement)"
        },
        {
          "name": "subscription",
          "type": "io.flow.common.v0.models.price",
          "required": true,
          "attributes": [],
          "description": "Represents the sum of all subscription transactions included in this billing statement"
        },
        {
          "name": "transfer",
          "type": "io.flow.common.v0.models.price",
          "required": true,
          "attributes": [],
          "description": "Represents the sum of all transfer transactions included in this billing statement"
        },
        {
          "name": "adjustment",
          "type": "io.flow.common.v0.models.price",
          "required": true,
          "attributes": [],
          "description": "Represents the sum of all adjustment transactions included in this billing statement"
        },
        {
          "name": "capture",
          "type": "io.flow.common.v0.models.price",
          "required": true,
          "attributes": [],
          "description": "Represents the sum of all capture transactions included in this billing statement"
        },
        {
          "name": "refund",
          "type": "io.flow.common.v0.models.price",
          "required": true,
          "attributes": [],
          "description": "Represents the sum of all refund transactions included in this billing statement"
        },
        {
          "name": "ending_balance",
          "type": "io.flow.common.v0.models.price",
          "required": true,
          "attributes": [],
          "description": "Represents the ending account balance at the time the statement is created"
        }
      ],
      "attributes": []
    },
    {
      "name": "billing_transaction",
      "plural": "billing_transactions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "type",
          "type": "billing_transaction_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "status",
          "type": "billing_transaction_status",
          "required": true,
          "attributes": []
        },
        {
          "name": "posted_at",
          "type": "date-time-iso8601",
          "required": false,
          "attributes": []
        },
        {
          "name": "value",
          "type": "io.flow.common.v0.models.price",
          "required": true,
          "attributes": [],
          "description": "The total value of this specific transaction. A positive amount indicates funds due you (e.g. a capture). A negative amount indicates funds due Flow (e.g. a refund)."
        },
        {
          "name": "description",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "created_at",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "statement",
          "type": "billing_statement_reference",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "A billing transaction represents a single transaction on your account. Each transaction will be identified by its specific type."
    },
    {
      "name": "blacklisted_item",
      "plural": "blacklisted_items",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "organization_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "item_number",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "blacklisted_item_created",
      "plural": "blacklisted_item_createds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "blacklisted_item",
          "type": "io.flow.harmonization.internal.v0.models.blacklisted_item",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "blacklisted_item_deleted",
      "plural": "blacklisted_item_deleteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "blacklisted_item_updated",
      "plural": "blacklisted_item_updateds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "blacklisted_item",
          "type": "io.flow.harmonization.internal.v0.models.blacklisted_item",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "card_payment",
      "plural": "card_payments",
      "fields": [
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "description",
          "type": "string",
          "required": true,
          "attributes": [],
          "example": "VISA ending in 1234"
        },
        {
          "name": "price",
          "type": "io.flow.common.v0.models.price",
          "required": true,
          "attributes": []
        },
        {
          "name": "cardholder_name",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Cardholder name"
        },
        {
          "name": "address",
          "type": "io.flow.common.v0.models.address",
          "required": false,
          "attributes": [],
          "description": "Cardholder billing address"
        }
      ],
      "attributes": []
    },
    {
      "name": "carrier_form",
      "plural": "carrier_forms",
      "fields": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Name of the carrier",
          "minimum": 3
        },
        {
          "name": "facilities",
          "type": "[io.flow.fulfillment.v0.models.shipping_address]",
          "required": false,
          "attributes": [],
          "description": "List of facilities available for consolidation"
        },
        {
          "name": "visibility",
          "type": "io.flow.common.v0.enums.visibility",
          "required": false,
          "attributes": [],
          "description": "Public vs private carrier"
        }
      ],
      "attributes": [],
      "description": "Partner that actually take a shipment between places (ex: FedEx, DHL, SF Express)"
    },
    {
      "name": "carrier_invoice",
      "plural": "carrier_invoices",
      "fields": [
        {
          "name": "number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Client's unique identifier for this object"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "carrier_upserted",
      "plural": "carrier_upserteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "carrier_version",
      "plural": "carrier_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "io.flow.common.v0.enums.change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "carrier",
          "type": "io.flow.fulfillment.v0.models.carrier",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "center_upserted",
      "plural": "center_upserteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "key",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "address",
          "type": "object",
          "required": true,
          "attributes": []
        },
        {
          "name": "packaging",
          "type": "[object]",
          "required": true,
          "attributes": []
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "services",
          "type": "[string]",
          "required": true,
          "attributes": []
        },
        {
          "name": "schedule",
          "type": "object",
          "required": true,
          "attributes": []
        },
        {
          "name": "timezone",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "checkout",
      "plural": "checkouts",
      "fields": [
        {
          "name": "customer_service",
          "type": "content",
          "required": true,
          "attributes": []
        },
        {
          "name": "checkout",
          "type": "checkout_content",
          "required": true,
          "attributes": []
        },
        {
          "name": "payments",
          "type": "checkout_payment_content",
          "required": true,
          "attributes": []
        },
        {
          "name": "footer",
          "type": "[content_item]",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "checkout_content",
      "plural": "checkout_contents",
      "fields": [
        {
          "name": "contact_us",
          "type": "content_item",
          "required": true,
          "attributes": []
        },
        {
          "name": "logo",
          "type": "logo",
          "required": true,
          "attributes": []
        },
        {
          "name": "privacy_policy",
          "type": "content_item",
          "required": true,
          "attributes": []
        },
        {
          "name": "terms",
          "type": "content_item",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "checkout_payment_content",
      "plural": "checkout_payment_contents",
      "fields": [
        {
          "name": "default",
          "type": "apm_content",
          "required": true,
          "attributes": []
        },
        {
          "name": "paypal",
          "type": "apm_content",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "classification",
      "plural": "classifications",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "item",
          "type": "io.flow.harmonization.v0.models.harmonized_item_reference",
          "required": true,
          "attributes": [],
          "description": "The item that we are classifying."
        },
        {
          "name": "hs6",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "The HS6 code if we were able to assign"
        }
      ],
      "attributes": [],
      "description": "The actual classification record. Users request classification of their items and this model holds all of the data, including the results once available. Classification proceeds in near real-time for cases where there is sufficient data to classify the item automatically."
    },
    {
      "name": "classification_form",
      "plural": "classification_forms",
      "fields": [
        {
          "name": "item_number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Your harmonized item number for which to submit classification"
        }
      ],
      "attributes": []
    },
    {
      "name": "classification_reference",
      "plural": "classification_references",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "complete_price_rule",
      "plural": "complete_price_rules",
      "fields": [
        {
          "name": "price_rule",
          "type": "io.flow.shopify.v0.models.price_rule",
          "required": true,
          "attributes": []
        },
        {
          "name": "discount_codes",
          "type": "[io.flow.shopify.v0.models.price_rule_discount_code]",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "content",
      "plural": "contents",
      "fields": [
        {
          "name": "label",
          "type": "label",
          "required": true,
          "attributes": []
        },
        {
          "name": "contents",
          "type": "[content_item]",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "ddp",
      "plural": "ddps",
      "fields": [
        {
          "name": "amount",
          "type": "decimal",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "detail",
      "plural": "details",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "classification",
          "type": "classification_reference",
          "required": true,
          "attributes": [],
          "description": "The classification record for which we are requesting detailed information."
        },
        {
          "name": "origin",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The ISO 3166-3 code for the country of origin. Case insensitive. See https://api.flow.io/reference/countries",
          "example": "USA"
        },
        {
          "name": "destination",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The ISO 3166-3 code for the destination country. Case insensitive. See https://api.flow.io/reference/countries",
          "example": "CAN"
        },
        {
          "name": "code",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The detailed harmonization code (e.g. HS-10) for this particular origin/destination pair"
        },
        {
          "name": "duties",
          "type": "[duty]",
          "required": true,
          "attributes": [],
          "description": "Details on all duties that are applied"
        },
        {
          "name": "taxes",
          "type": "[tax]",
          "required": true,
          "attributes": [],
          "description": "Details on all taxes that are applied. Note the data is unstructured as the format of the tax information varies by country"
        }
      ],
      "attributes": [],
      "description": "The detailed classification of a given item from one country to another country."
    },
    {
      "name": "detail_form",
      "plural": "detail_forms",
      "fields": [
        {
          "name": "classification_id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The classification record for which we are requesting detailed information. We will only pursue detailed information once this classification has successfully resulted in an hs6 code"
        },
        {
          "name": "origin",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The ISO 3166-3 code for the country of origin. Case insensitive. See https://api.flow.io/reference/countries",
          "example": "USA"
        },
        {
          "name": "destination",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The ISO 3166-3 code for the destination country. Case insensitive. See https://api.flow.io/reference/countries",
          "example": "CAN"
        },
        {
          "name": "code",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The detailed harmonization code (e.g. HS-10) for this particular origin/destination pair"
        },
        {
          "name": "duties",
          "type": "[duty]",
          "required": true,
          "attributes": [],
          "description": "Details on all duties that are applied"
        },
        {
          "name": "taxes",
          "type": "[tax]",
          "required": true,
          "attributes": [],
          "description": "Details on all taxes that are applied. Note the data is unstructured as the format of the tax information varies by country"
        }
      ],
      "attributes": [],
      "description": "The detail form defines the data required to request detailed classification of a single trade lane for a single classification"
    },
    {
      "name": "dict",
      "plural": "dicts",
      "fields": [
        {
          "name": "label",
          "type": "label",
          "required": true,
          "attributes": []
        },
        {
          "name": "description",
          "type": "label",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "A dictionary provides a label and a description"
    },
    {
      "name": "dimension_estimate",
      "plural": "dimension_estimates",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "q",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Search query for items to apply this dimension estimate to"
        },
        {
          "name": "dimensions",
          "type": "estimated_dimensions",
          "required": true,
          "attributes": [],
          "description": "Dimension values to apply to items meeting search criteria 'q'"
        },
        {
          "name": "position",
          "type": "long",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "dimension_estimate_form",
      "plural": "dimension_estimate_forms",
      "fields": [
        {
          "name": "q",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Search query for items to apply this dimension estimate to"
        },
        {
          "name": "dimensions",
          "type": "estimated_dimensions",
          "required": true,
          "attributes": [],
          "description": "Dimension values to apply to items meeting search criteria 'q'"
        },
        {
          "name": "position",
          "type": "long",
          "required": false,
          "attributes": [],
          "description": "Position of priority for this dimension estimate. The lower the position number, the higher the priority, with 0 being the first. If not provided, defaults to last plus one."
        }
      ],
      "attributes": []
    },
    {
      "name": "dimension_estimate_version",
      "plural": "dimension_estimate_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "io.flow.common.v0.enums.change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "dimension_estimate",
          "type": "dimension_estimate",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "duty",
      "plural": "duties",
      "fields": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": [],
          "example": "ERGA OMNES"
        },
        {
          "name": "rate",
          "type": "decimal",
          "required": true,
          "attributes": [],
          "example": "12 or 16.5"
        }
      ],
      "attributes": []
    },
    {
      "name": "email_form",
      "plural": "email_forms",
      "fields": [
        {
          "name": "to",
          "type": "[string]",
          "required": true,
          "attributes": [],
          "description": "The email address(es) to send",
          "minimum": 1
        },
        {
          "name": "cc",
          "type": "[string]",
          "required": false,
          "attributes": []
        },
        {
          "name": "bcc",
          "type": "[string]",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "encryption",
      "plural": "encryptions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "key",
          "type": "key_reference",
          "required": true,
          "attributes": []
        },
        {
          "name": "iv",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Base64 encoded iv"
        },
        {
          "name": "cipher",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Base64 encoded cipher"
        },
        {
          "name": "passphrase_ids",
          "type": "[string]",
          "required": true,
          "attributes": [],
          "description": "The passphrase IDs, in the order in which they were used to encrypt this cipher"
        }
      ],
      "attributes": [],
      "description": "Represents the actual encrypted key, with a list of associated passphrases"
    },
    {
      "name": "estimated_dimensions",
      "plural": "estimated_dimensionses",
      "fields": [
        {
          "name": "depth",
          "type": "io.flow.common.v0.models.measurement",
          "required": true,
          "attributes": []
        },
        {
          "name": "length",
          "type": "io.flow.common.v0.models.measurement",
          "required": true,
          "attributes": []
        },
        {
          "name": "weight",
          "type": "io.flow.common.v0.models.measurement",
          "required": true,
          "attributes": []
        },
        {
          "name": "width",
          "type": "io.flow.common.v0.models.measurement",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "export_completed",
      "plural": "export_completeds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": [],
          "description": "The date/time of the request"
        },
        {
          "name": "export_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "url",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "URL at which to download the export"
        }
      ],
      "attributes": [],
      "description": "Event indicating that an export has been completed"
    },
    {
      "name": "export_failed",
      "plural": "export_faileds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": [],
          "description": "The date/time of the request"
        },
        {
          "name": "export_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "error",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Event indicating that an export has failed with a system error"
    },
    {
      "name": "fee",
      "plural": "fees",
      "fields": [
        {
          "name": "value",
          "type": "io.flow.common.v0.models.price",
          "required": true,
          "attributes": [],
          "example": "The value of the original transaction in the currency of this account"
        },
        {
          "name": "description",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Detailed description of how the fee amount was calculated. If there was no fee (i.e. amount is 0), description will be empty"
        }
      ],
      "attributes": []
    },
    {
      "name": "fees",
      "plural": "fees",
      "fields": [
        {
          "name": "processing",
          "type": "fee",
          "required": true,
          "attributes": []
        },
        {
          "name": "rate_lock",
          "type": "fee",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "flow_classification",
      "plural": "flow_classifications",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "classification",
          "type": "classification_reference",
          "required": true,
          "attributes": []
        },
        {
          "name": "strategy",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "description",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "categories",
          "type": "[string]",
          "required": true,
          "attributes": []
        },
        {
          "name": "hs6",
          "type": "string",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "flow_classification_form",
      "plural": "flow_classification_forms",
      "fields": [
        {
          "name": "classification_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "strategy",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "description",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "categories",
          "type": "[string]",
          "required": true,
          "attributes": []
        },
        {
          "name": "hs6",
          "type": "string",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "flow_currency_setting",
      "plural": "flow_currency_settings",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "base",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The base currency's ISO 4217 3-character code as defined in https://api.flow.io/reference/currencies"
        },
        {
          "name": "target",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The target currency's ISO 4217 3-character code as defined in https://api.flow.io/reference/currencies"
        },
        {
          "name": "margin",
          "type": "decimal",
          "required": true,
          "attributes": [],
          "description": "A percent of the base currency value added to the base currency before conversion."
        },
        {
          "name": "rate_lock",
          "type": "io.flow.currency.v0.models.duration",
          "required": true,
          "attributes": [],
          "description": "The duration for which a rate is valid after an order is placed."
        }
      ],
      "attributes": []
    },
    {
      "name": "flow_currency_setting_form",
      "plural": "flow_currency_setting_forms",
      "fields": [
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "base",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The base currency's ISO 4217 3-character code as defined in https://api.flow.io/reference/currencies"
        },
        {
          "name": "target",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The target currency's ISO 4217 3-character code as defined in https://api.flow.io/reference/currencies"
        },
        {
          "name": "margin",
          "type": "decimal",
          "required": true,
          "attributes": [],
          "description": "A percent of the base currency value added to the base currency before conversion."
        },
        {
          "name": "rate_lock",
          "type": "io.flow.currency.v0.models.duration",
          "required": true,
          "attributes": [],
          "description": "The duration for which a rate is valid after an order is placed."
        }
      ],
      "attributes": []
    },
    {
      "name": "flow_currency_setting_version",
      "plural": "flow_currency_setting_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "io.flow.common.v0.enums.change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "flow_currency_setting",
          "type": "flow_currency_setting",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "flow_label_setting",
      "plural": "flow_label_settings",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "default_contents",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Used for single-entry description of what the contents are for an organization's packages. If multiple product categories are in a box, this is used as a catch-all description."
        }
      ],
      "attributes": []
    },
    {
      "name": "flow_label_setting_form",
      "plural": "flow_label_setting_forms",
      "fields": [
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "default_contents",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Used for single-entry description of what the contents are for an organization's packages. If multiple product categories are in a box, this is used as a catch-all description."
        }
      ],
      "attributes": []
    },
    {
      "name": "ftp_setting",
      "plural": "ftp_settings",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "protocol",
          "type": "ftp_protocol",
          "required": true,
          "attributes": [],
          "default": "sftp"
        },
        {
          "name": "path",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Home folder in the remote FTP server."
        },
        {
          "name": "username",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Plaintext FTP username"
        },
        {
          "name": "password",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Plaintext FTP password"
        }
      ],
      "attributes": []
    },
    {
      "name": "ftp_setting_form",
      "plural": "ftp_setting_forms",
      "fields": [
        {
          "name": "protocol",
          "type": "ftp_protocol",
          "required": true,
          "attributes": [],
          "default": "sftp"
        },
        {
          "name": "path",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Home folder in the remote FTP server."
        },
        {
          "name": "username",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Plaintext FTP username"
        },
        {
          "name": "password",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Plaintext FTP password"
        }
      ],
      "attributes": []
    },
    {
      "name": "ftp_setting_version",
      "plural": "ftp_setting_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "io.flow.common.v0.enums.change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "ftp_setting",
          "type": "ftp_setting",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "fuel_surcharge",
      "plural": "fuel_surcharges",
      "fields": [
        {
          "name": "amount",
          "type": "decimal",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "geo_form",
      "plural": "geo_forms",
      "fields": [
        {
          "name": "country",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The ISO 3166-3 country code. Case insensitive. See https://api.flow.io/reference/countries",
          "example": "CAN"
        },
        {
          "name": "currency",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "ISO 4217 3 currency code as defined in https://api.flow.io/reference/currencies",
          "example": "CAD"
        },
        {
          "name": "language",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "ISO 639 2 language code as defined in https://api.flow.io/reference/languages",
          "example": "en"
        },
        {
          "name": "locale",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Locale Id as defined in https://api.flow.io/reference/locales",
          "example": "en-US"
        },
        {
          "name": "experience",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The ID of a specific experience to use"
        }
      ],
      "attributes": [],
      "description": "Form used to update geographic preferences"
    },
    {
      "name": "harmonization_codes_import",
      "plural": "harmonization_codes_imports",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": [],
          "description": "The date/time of the request"
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "import_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "source_url",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Defines the data needed to process a harmonization codes import."
    },
    {
      "name": "harmonization_countries",
      "plural": "harmonization_countries",
      "fields": [
        {
          "name": "origins",
          "type": "[string]",
          "required": true,
          "attributes": [],
          "description": "Countries of origin applicable to catalog items"
        },
        {
          "name": "destinations",
          "type": "[string]",
          "required": true,
          "attributes": [],
          "description": "Destination countries applicable to experiences"
        }
      ],
      "attributes": [],
      "description": "List of countries of origin and destination countries"
    },
    {
      "name": "harmonization_statistics",
      "plural": "harmonization_statistics",
      "fields": [
        {
          "name": "hs6",
          "type": "harmonization_statistics_breakout",
          "required": true,
          "attributes": []
        },
        {
          "name": "hs10",
          "type": "harmonization_statistics_breakout",
          "required": true,
          "attributes": []
        },
        {
          "name": "origins",
          "type": "harmonization_statistics_breakout",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Overall statistics for harmonized codes, specifying details for HS6 and HS10 codes"
    },
    {
      "name": "harmonization_statistics_breakout",
      "plural": "harmonization_statistics_breakouts",
      "fields": [
        {
          "name": "assigned",
          "type": "long",
          "required": true,
          "attributes": [],
          "description": "Number of items with a harmonization code"
        },
        {
          "name": "unassigned",
          "type": "long",
          "required": true,
          "attributes": [],
          "description": "Number of items without a harmonization code"
        }
      ],
      "attributes": []
    },
    {
      "name": "harmonization_summary",
      "plural": "harmonization_summaries",
      "fields": [
        {
          "name": "origin",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The ISO 3166-3 country code. Case insensitive. See https://api.flow.io/reference/countries",
          "example": "CAN"
        },
        {
          "name": "destination",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The ISO 3166-3 country code. Case insensitive. See https://api.flow.io/reference/countries",
          "example": "CAN"
        },
        {
          "name": "items",
          "type": "long",
          "required": true,
          "attributes": [],
          "description": "Total number of items associated with this origin/destination"
        },
        {
          "name": "codes",
          "type": "harmonization_statistics_breakout",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Summary of Origin/Destination pairs and their associated HS10 code information"
    },
    {
      "name": "href",
      "plural": "hrefs",
      "fields": [
        {
          "name": "label",
          "type": "label",
          "required": true,
          "attributes": []
        },
        {
          "name": "url",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "A content type that represents a link - there is a label and the URL to link to"
    },
    {
      "name": "hs10_phrase_hint_form",
      "plural": "hs10_phrase_hint_forms",
      "fields": [
        {
          "name": "code",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The actual HS-10 code for a destination country.",
          "example": "392620123"
        },
        {
          "name": "destination",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The ISO 3166 3 character code for the destination country"
        },
        {
          "name": "phrase",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "A short phrase describing a product in generic terms, intended to uniquely identify a code from a harmonization system.",
          "example": "Mens 100% Cotton Shorts"
        }
      ],
      "attributes": [],
      "description": "A phrase that identifies a code for a country."
    },
    {
      "name": "import_completed",
      "plural": "import_completeds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": [],
          "description": "The date/time of the request"
        },
        {
          "name": "import_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "number_successful",
          "type": "long",
          "required": true,
          "attributes": [],
          "description": "Represents the number of successfully processed rows of data.",
          "minimum": 0
        },
        {
          "name": "number_errors",
          "type": "long",
          "required": true,
          "attributes": [],
          "description": "Represents the number of rows that were unable to be processed. See the results url for details as to why.",
          "minimum": 0
        },
        {
          "name": "results_url",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "If there were errors processing the rows, the event will include the URL to the detailed results from processing the import."
        }
      ],
      "attributes": [],
      "description": "Event indicating that an import has been completed"
    },
    {
      "name": "import_failed",
      "plural": "import_faileds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": [],
          "description": "The date/time of the request"
        },
        {
          "name": "import_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "error",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Event indicating that an import has been failed with a system error"
    },
    {
      "name": "install_form",
      "plural": "install_forms",
      "fields": [
        {
          "name": "token",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "item_dimension_estimate_deleted",
      "plural": "item_dimension_estimate_deleteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "item_dimension_estimate_upserted",
      "plural": "item_dimension_estimate_upserteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "item_number",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "depth_value",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "depth_unit",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "length_value",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "length_unit",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "weight_value",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "weight_unit",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "width_value",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "width_unit",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "q",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "item_restriction",
      "plural": "item_restrictions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "item",
          "type": "io.flow.common.v0.models.catalog_item_summary",
          "required": true,
          "attributes": []
        },
        {
          "name": "regions",
          "type": "[io.flow.reference.v0.models.region]",
          "required": true,
          "attributes": [],
          "description": "The regions in which the item is restricted."
        }
      ],
      "attributes": [],
      "description": "Represents a restricted item with the regions in which it is restricted."
    },
    {
      "name": "item_restriction_post_form",
      "plural": "item_restriction_post_forms",
      "fields": [
        {
          "name": "item_numbers",
          "type": "[string]",
          "required": true,
          "attributes": [],
          "description": "The numbers of the items to restrict.",
          "minimum": 1
        },
        {
          "name": "regions",
          "type": "[string]",
          "required": true,
          "attributes": [],
          "description": "The ids of the regions in which to restrict the items.",
          "minimum": 1
        }
      ],
      "attributes": [],
      "description": "Contains a list of item numbers and a list of regions in which to restrict the items associated with the provided numbers."
    },
    {
      "name": "item_restriction_put_form",
      "plural": "item_restriction_put_forms",
      "fields": [
        {
          "name": "item_number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The number of the item to associate with this item restriction."
        },
        {
          "name": "regions",
          "type": "[string]",
          "required": true,
          "attributes": [],
          "description": "The ids of the regions in which to restrict the items.",
          "minimum": 1
        }
      ],
      "attributes": [],
      "description": "Contains a list of regions in which to restrict an item."
    },
    {
      "name": "item_restriction_version",
      "plural": "item_restriction_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "io.flow.common.v0.enums.change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "item_restriction",
          "type": "item_restriction",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "item_sales_margin",
      "plural": "item_sales_margins",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "key",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "q",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The query used to select items to which the margins are applied."
        },
        {
          "name": "fixed",
          "type": "decimal",
          "required": true,
          "attributes": [],
          "description": "A fixed amount to add to an item in the base currency, e.g 1.25. A negative amount represents a discount.",
          "example": "1.25"
        },
        {
          "name": "percent",
          "type": "decimal",
          "required": true,
          "attributes": [],
          "description": "A percent of the base cost to add, e.g. 2.25 would indicate 2.25%.  A negative amount represents a discount.",
          "example": "2.25"
        },
        {
          "name": "position",
          "type": "long",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Defines a fixed and percent margin to apply to items matching a query after pricing functions like tax, duty or rounding have been applied."
    },
    {
      "name": "item_sales_margin_deleted",
      "plural": "item_sales_margin_deleteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "item_sales_margin_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "experience_key",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "item_sales_margin_post_form",
      "plural": "item_sales_margin_post_forms",
      "fields": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "q",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "key",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "fixed",
          "type": "decimal",
          "required": false,
          "attributes": [],
          "description": "A fixed amount to add to an item in the base currency, e.g 1.25.  A negative amount represents a discount.",
          "example": "1.25"
        },
        {
          "name": "percent",
          "type": "decimal",
          "required": false,
          "attributes": [],
          "description": "A percent of the base cost to add, e.g. 2.25 would indicate 2.25%.  A negative amount represents a discount.",
          "example": "2.25"
        },
        {
          "name": "position",
          "type": "long",
          "required": false,
          "attributes": [],
          "description": "Defaults to end of list"
        }
      ],
      "attributes": [],
      "description": "A percent and/or fixed margin to apply to items matching a query after pricing functions like tax, duty or rounding have been applied."
    },
    {
      "name": "item_sales_margin_put_form",
      "plural": "item_sales_margin_put_forms",
      "fields": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "q",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "fixed",
          "type": "decimal",
          "required": false,
          "attributes": [],
          "description": "A fixed amount to add to an item in the base currency, e.g 1.25.  A negative amount represents a discount.",
          "example": "1.25"
        },
        {
          "name": "percent",
          "type": "decimal",
          "required": false,
          "attributes": [],
          "description": "A percent of the base cost to add, e.g. 2.25 would indicate 2.25%.  A negative amount represents a discount.",
          "example": "2.25"
        },
        {
          "name": "position",
          "type": "long",
          "required": false,
          "attributes": [],
          "description": "Defaults to end of list"
        }
      ],
      "attributes": [],
      "description": "A percent and/or fixed margin to apply to items matching a query after pricing functions like tax, duty or rounding have been applied."
    },
    {
      "name": "item_sales_margin_upserted",
      "plural": "item_sales_margin_upserteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "item_sales_margin_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "experience_key",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "q",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "fixed",
          "type": "decimal",
          "required": true,
          "attributes": []
        },
        {
          "name": "percent",
          "type": "decimal",
          "required": true,
          "attributes": []
        },
        {
          "name": "position",
          "type": "long",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "item_sales_margin_version",
      "plural": "item_sales_margin_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "io.flow.common.v0.enums.change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "item_sales_margin",
          "type": "item_sales_margin",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "key",
      "plural": "keys",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "created_at",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Represents the actual card encryption key"
    },
    {
      "name": "key_reference",
      "plural": "key_references",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "label",
      "plural": "labels",
      "fields": [
        {
          "name": "format",
          "type": "format",
          "required": true,
          "attributes": []
        },
        {
          "name": "value",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "A static label"
    },
    {
      "name": "label_format_form",
      "plural": "label_format_forms",
      "fields": [
        {
          "name": "format",
          "type": "label_format",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "label_invoice",
      "plural": "label_invoices",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "carrier_tracking_number",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "flow_tracking_number",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "strategy",
          "type": "label_billing_strategy",
          "required": true,
          "attributes": []
        },
        {
          "name": "carrier_invoice",
          "type": "carrier_invoice",
          "required": true,
          "attributes": []
        },
        {
          "name": "charged_weight",
          "type": "io.flow.common.v0.models.measurement",
          "required": true,
          "attributes": [],
          "description": "Actual weight and unit measured officially by carrier and communicated on invoice"
        },
        {
          "name": "gravitational_weight",
          "type": "io.flow.common.v0.models.measurement",
          "required": false,
          "attributes": [],
          "description": "Gravitational weight and unit measured officially by carrier and communicated on invoice"
        },
        {
          "name": "dimensional_weight",
          "type": "io.flow.common.v0.models.measurement",
          "required": false,
          "attributes": [],
          "description": "Dimensional weight and unit measured officially by carrier and communicated on invoice"
        },
        {
          "name": "details",
          "type": "[label_invoice_detail]",
          "required": true,
          "attributes": [],
          "description": "List of details for the charge, including any fees"
        },
        {
          "name": "total",
          "type": "label_invoice_total",
          "required": true,
          "attributes": [],
          "description": "Total of the charge details"
        }
      ],
      "attributes": []
    },
    {
      "name": "label_invoice_deleted",
      "plural": "label_invoice_deleteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": [],
          "description": "The date/time of the request"
        },
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "label_invoice_detail",
      "plural": "label_invoice_details",
      "fields": [
        {
          "name": "key",
          "type": "label_invoice_detail_key",
          "required": true,
          "attributes": []
        },
        {
          "name": "amount",
          "type": "decimal",
          "required": true,
          "attributes": []
        },
        {
          "name": "currency",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "label_invoice_form",
      "plural": "label_invoice_forms",
      "fields": [
        {
          "name": "carrier_tracking_number",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "flow_tracking_number",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "strategy",
          "type": "label_billing_strategy",
          "required": true,
          "attributes": []
        },
        {
          "name": "carrier_invoice",
          "type": "carrier_invoice",
          "required": true,
          "attributes": []
        },
        {
          "name": "charged_weight",
          "type": "io.flow.common.v0.models.measurement",
          "required": true,
          "attributes": [],
          "description": "Actual weight and unit measured officially by carrier and communicated on invoice"
        },
        {
          "name": "gravitational_weight",
          "type": "io.flow.common.v0.models.measurement",
          "required": false,
          "attributes": [],
          "description": "Gravitational weight and unit measured officially by carrier and communicated on invoice"
        },
        {
          "name": "dimensional_weight",
          "type": "io.flow.common.v0.models.measurement",
          "required": false,
          "attributes": [],
          "description": "Dimensional weight and unit measured officially by carrier and communicated on invoice"
        },
        {
          "name": "details",
          "type": "[label_invoice_detail]",
          "required": true,
          "attributes": [],
          "description": "List of details for the charge, including any fees"
        },
        {
          "name": "total",
          "type": "label_invoice_total",
          "required": true,
          "attributes": [],
          "description": "Total of the charge details"
        }
      ],
      "attributes": []
    },
    {
      "name": "label_invoice_total",
      "plural": "label_invoice_totals",
      "fields": [
        {
          "name": "amount",
          "type": "decimal",
          "required": true,
          "attributes": []
        },
        {
          "name": "currency",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "label_invoice_upserted",
      "plural": "label_invoice_upserteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": [],
          "description": "The date/time of the request"
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "carrier_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "carrier_tracking_number",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "charge_amount",
          "type": "decimal",
          "required": true,
          "attributes": []
        },
        {
          "name": "charge_currency",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "charge_weight",
          "type": "decimal",
          "required": true,
          "attributes": [],
          "description": "Weight used by carrier invoice"
        },
        {
          "name": "charge_weight_unit",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Weight unit of measurement used by carrier invoice"
        },
        {
          "name": "flow_tracking_number",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "order_number",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "service_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "strategy",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "dimensional_weight",
          "type": "decimal",
          "required": false,
          "attributes": [],
          "description": "Dimensional weight from carrier, if separately available from invoice"
        },
        {
          "name": "gravitational_weight",
          "type": "decimal",
          "required": false,
          "attributes": [],
          "description": "Gravitational weight from carrier, if separately available from invoice"
        }
      ],
      "attributes": []
    },
    {
      "name": "lane",
      "plural": "lanes",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "origin",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The ISO 3166-3 code for the country of origin. Case insensitive. See https://api.flow.io/reference/countries",
          "example": "USA"
        },
        {
          "name": "destination",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The ISO 3166-3 code for the destination country. Case insensitive. See https://api.flow.io/reference/countries",
          "example": "CAN"
        }
      ],
      "attributes": [],
      "description": "An organization can create 1 or more lanes which represent country pairs - e.g. country of origin to destination. This will enable an automated workflow such that whenever a classification request is created, we will automatically create detail records for each of these lanes."
    },
    {
      "name": "lane_deleted",
      "plural": "lane_deleteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "lane_form",
      "plural": "lane_forms",
      "fields": [
        {
          "name": "origin",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The ISO 3166 2 or 3 character code for the country of origin. Case insensitive. See https://api.flow.io/reference/countries",
          "example": "USA"
        },
        {
          "name": "destination",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The ISO 3166 2 or 3 character code for the destination country. Case insensitive. See https://api.flow.io/reference/countries",
          "example": "CAN"
        }
      ],
      "attributes": []
    },
    {
      "name": "lane_upserted",
      "plural": "lane_upserteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "currency",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "service_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "delivered_duty",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "window_min_days",
          "type": "long",
          "required": true,
          "attributes": []
        },
        {
          "name": "window_max_days",
          "type": "long",
          "required": true,
          "attributes": []
        },
        {
          "name": "origin_zone",
          "type": "object",
          "required": true,
          "attributes": []
        },
        {
          "name": "destination_zone",
          "type": "object",
          "required": true,
          "attributes": []
        },
        {
          "name": "dim_factor",
          "type": "decimal",
          "required": true,
          "attributes": []
        },
        {
          "name": "weight_unit",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "distance_unit",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "load",
      "plural": "loads",
      "fields": [
        {
          "name": "label",
          "type": "label",
          "required": true,
          "attributes": []
        },
        {
          "name": "location",
          "type": "location",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "A load content item represents a link and a url that should be fetched on click to display inline"
    },
    {
      "name": "localized_item_price",
      "plural": "localized_item_prices",
      "fields": [
        {
          "name": "label",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Provide top level localized item price."
    },
    {
      "name": "location",
      "plural": "locations",
      "fields": [
        {
          "name": "type",
          "type": "content_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "url",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "logo",
      "plural": "logoes",
      "fields": [
        {
          "name": "url",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "next_billing_statement",
      "plural": "next_billing_statements",
      "fields": [
        {
          "name": "date",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "amount",
          "type": "io.flow.common.v0.models.price",
          "required": true,
          "attributes": [],
          "description": "Represents the expect amount of the transfer transactions that will be on the next billing statement"
        },
        {
          "name": "conditions",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "If there are any conditions that must be met to trigger the statement being created, explains those conditions here"
        }
      ],
      "attributes": []
    },
    {
      "name": "one_time_token_redemption_form",
      "plural": "one_time_token_redemption_forms",
      "fields": [
        {
          "name": "token",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Used to post a token to the server; if valid you will then receive the user information back"
    },
    {
      "name": "online_payment",
      "plural": "online_payments",
      "fields": [
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "method",
          "type": "string",
          "required": true,
          "attributes": [],
          "example": "paypal"
        },
        {
          "name": "description",
          "type": "string",
          "required": true,
          "attributes": [],
          "example": "VISA ending in 1234"
        },
        {
          "name": "price",
          "type": "io.flow.common.v0.models.price",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "order_detail",
      "plural": "order_details",
      "fields": [
        {
          "name": "order",
          "type": "io.flow.experience.v0.models.order",
          "required": true,
          "attributes": []
        },
        {
          "name": "status",
          "type": "io.flow.experience.v0.enums.order_status",
          "required": true,
          "attributes": []
        },
        {
          "name": "payments",
          "type": "[payment_summary]",
          "required": true,
          "attributes": []
        },
        {
          "name": "trackings",
          "type": "[tracking_summary]",
          "required": true,
          "attributes": []
        },
        {
          "name": "submitted_at",
          "type": "date-time-iso8601",
          "required": false,
          "attributes": [],
          "description": "Date the order was submitted"
        },
        {
          "name": "created_at",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": [],
          "description": "Date the order was first opened"
        },
        {
          "name": "updated_at",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": [],
          "description": "Date the order was last updated"
        }
      ],
      "attributes": []
    },
    {
      "name": "order_metafield_value",
      "plural": "order_metafield_values",
      "fields": [
        {
          "name": "items",
          "type": "[io.flow.experience.v0.models.localized_line_item]",
          "required": true,
          "attributes": []
        },
        {
          "name": "prices",
          "type": "[io.flow.experience.v0.models.order_price_detail]",
          "required": true,
          "attributes": []
        },
        {
          "name": "total",
          "type": "io.flow.catalog.v0.models.localized_total",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Model to represent details available in an order metafield."
    },
    {
      "name": "order_revenue_region_chart",
      "plural": "order_revenue_region_charts",
      "fields": [
        {
          "name": "total",
          "type": "io.flow.common.v0.models.price",
          "required": true,
          "attributes": [],
          "description": "The overall revenue for the organization within the given time period."
        },
        {
          "name": "period",
          "type": "io.flow.common.v0.models.datetime_range",
          "required": true,
          "attributes": [],
          "description": "The range of time that the chart represents."
        },
        {
          "name": "data",
          "type": "[order_revenue_region_data_point]",
          "required": true,
          "attributes": [],
          "description": "The data points for this chart, grouped by an interval determined by the period."
        }
      ],
      "attributes": []
    },
    {
      "name": "order_revenue_region_data_point",
      "plural": "order_revenue_region_data_points",
      "fields": [
        {
          "name": "region",
          "type": "io.flow.reference.v0.models.region",
          "required": true,
          "attributes": [],
          "description": "The region that this data point represents. A region represents a geographic area of the world. Regions can be countries, continents or other political areas (like the Eurozone). See https://api.flow.io/reference/regions"
        },
        {
          "name": "count",
          "type": "integer",
          "required": true,
          "attributes": [],
          "description": "The number of individual values used to calculate the value for this point."
        },
        {
          "name": "revenue",
          "type": "io.flow.common.v0.models.price",
          "required": true,
          "attributes": [],
          "description": "The sum of the individual values that this data point represents."
        }
      ],
      "attributes": []
    },
    {
      "name": "order_revenue_timeline_chart",
      "plural": "order_revenue_timeline_charts",
      "fields": [
        {
          "name": "total",
          "type": "io.flow.common.v0.models.price",
          "required": true,
          "attributes": [],
          "description": "The overall revenue for the organization within the given time period."
        },
        {
          "name": "period",
          "type": "io.flow.common.v0.models.datetime_range",
          "required": true,
          "attributes": [],
          "description": "The range of time that the chart represents."
        },
        {
          "name": "data",
          "type": "[order_revenue_timeline_data_point]",
          "required": true,
          "attributes": [],
          "description": "The data points for this chart, grouped by an interval determined by the period."
        }
      ],
      "attributes": []
    },
    {
      "name": "order_revenue_timeline_data_point",
      "plural": "order_revenue_timeline_data_points",
      "fields": [
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": [],
          "description": "The start of this interval that this data point represents."
        },
        {
          "name": "count",
          "type": "integer",
          "required": true,
          "attributes": [],
          "description": "The number of individual values used to calculate the value for this point."
        },
        {
          "name": "revenue",
          "type": "io.flow.common.v0.models.price",
          "required": true,
          "attributes": [],
          "description": "The sum of the individual values that this data point represents."
        },
        {
          "name": "period",
          "type": "io.flow.common.v0.models.datetime_range",
          "required": false,
          "attributes": [],
          "description": "The interval that this data point represents."
        }
      ],
      "attributes": []
    },
    {
      "name": "order_submission_form",
      "plural": "order_submission_forms",
      "fields": [
        {
          "name": "authorization",
          "type": "io.flow.payment.v0.unions.authorization_form",
          "required": false,
          "attributes": [],
          "description": "You can optionally specify the payment authorization form at the time you submit an order, and if provided, we will automatically authorize payment and if successful the order will be marked submitted"
        }
      ],
      "attributes": [],
      "description": "Used to provide additional information when submitting an order. All fields are optional to support use cases where payment is already authorized or order final total is free - in which case nothing is needed except to mark the order submitted"
    },
    {
      "name": "oversized_shipment",
      "plural": "oversized_shipments",
      "fields": [
        {
          "name": "weight_threshold",
          "type": "decimal",
          "required": true,
          "attributes": []
        },
        {
          "name": "weight_unit",
          "type": "io.flow.common.v0.enums.unit_of_measurement",
          "required": true,
          "attributes": []
        },
        {
          "name": "margin",
          "type": "double",
          "required": false,
          "attributes": [],
          "description": "margin to charge"
        },
        {
          "name": "amount",
          "type": "double",
          "required": false,
          "attributes": [],
          "description": "actual amount to charge"
        }
      ],
      "attributes": []
    },
    {
      "name": "partner",
      "plural": "partners",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Defaults to a URL safe and unique version of the name"
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Defaults to the id"
        },
        {
          "name": "environment",
          "type": "io.flow.common.v0.enums.environment",
          "required": true,
          "attributes": [],
          "default": "production"
        },
        {
          "name": "parent_id",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "When creating an organization in the test environment, you must specify your production organization id."
        }
      ],
      "attributes": []
    },
    {
      "name": "partner_authorization",
      "plural": "partner_authorizations",
      "fields": [
        {
          "name": "role",
          "type": "io.flow.common.v0.enums.role",
          "required": true,
          "attributes": []
        },
        {
          "name": "environment",
          "type": "io.flow.common.v0.enums.environment",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Defines the data used for broad authorization of user access to partner level data"
    },
    {
      "name": "partner_authorization_form",
      "plural": "partner_authorization_forms",
      "fields": [
        {
          "name": "partner",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "environment",
          "type": "io.flow.common.v0.enums.environment",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "partner_form",
      "plural": "partner_forms",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Defaults to a URL safe and unique version of the name",
          "minimum": 3
        },
        {
          "name": "name",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Defaults to the id",
          "minimum": 3
        },
        {
          "name": "environment",
          "type": "io.flow.common.v0.enums.environment",
          "required": true,
          "attributes": [],
          "default": "production"
        },
        {
          "name": "parent_id",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "When creating an organization in the test environment, you must specify your production organization id."
        }
      ],
      "attributes": []
    },
    {
      "name": "partner_membership",
      "plural": "partner_memberships",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "user",
          "type": "io.flow.common.v0.unions.expandable_user",
          "required": true,
          "attributes": []
        },
        {
          "name": "role",
          "type": "io.flow.common.v0.enums.role",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Represents the users that are part of this partner. Primary purpose is to manage which users have access to the partner's data and to provide a simple user interface to assign roles and permissions to each member of the partner."
    },
    {
      "name": "partner_membership_form",
      "plural": "partner_membership_forms",
      "fields": [
        {
          "name": "user",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The id of the user to add to this organization"
        },
        {
          "name": "role",
          "type": "io.flow.common.v0.enums.role",
          "required": true,
          "attributes": [],
          "default": "member"
        }
      ],
      "attributes": [],
      "description": "Top level resource to create a partner membership."
    },
    {
      "name": "partner_membership_put_form",
      "plural": "partner_membership_put_forms",
      "fields": [
        {
          "name": "role",
          "type": "io.flow.common.v0.enums.role",
          "required": true,
          "attributes": [],
          "default": "member"
        }
      ],
      "attributes": []
    },
    {
      "name": "partner_membership_summary",
      "plural": "partner_membership_summaries",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "user",
          "type": "io.flow.common.v0.models.user_reference",
          "required": true,
          "attributes": []
        },
        {
          "name": "role",
          "type": "io.flow.common.v0.enums.role",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "partner_membership_version",
      "plural": "partner_membership_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "io.flow.common.v0.enums.change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "partner_membership",
          "type": "partner_membership_summary",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "partner_organization_authorization",
      "plural": "partner_organization_authorizations",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "partner",
          "type": "partner",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Organization-initiated authorization for a partner to make requests on its behalf"
    },
    {
      "name": "partner_organization_authorization_form",
      "plural": "partner_organization_authorization_forms",
      "fields": [
        {
          "name": "partner",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Form to allow an organization to authorize a partner to make API calls on its behalf"
    },
    {
      "name": "passphrase",
      "plural": "passphrases",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "tribe",
          "type": "tribe",
          "required": true,
          "attributes": []
        },
        {
          "name": "salt",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Base 64 encoded salt"
        },
        {
          "name": "iv",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Base 64 encoded iv"
        },
        {
          "name": "challenge_cipher",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Base 64 cipher of the challenge text"
        },
        {
          "name": "challenge_text",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Cleartext that was encrypted using this passphrase. Used to provide feedback to each tribe if their individual password is valid."
        }
      ],
      "attributes": [],
      "description": "Stores individual passphrases for each tribe. Each passphrase consists of a unique IV and salt, and a challenge phrase. When a tribe member enters their password, we to decrypt the challenge_cipher and verify that it matches the challenge text. This enables us to validate whether or not the entered password is valid."
    },
    {
      "name": "passphrase_form",
      "plural": "passphrase_forms",
      "fields": [
        {
          "name": "tribe",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The Id of the tribe for which we are creating a passphrase"
        },
        {
          "name": "current_password",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "When creating a new passphrase, you must provide a valid password for one of the active passphrases for your tribe. This field is required EXCEPT if you are creating a passphrase for the very first time."
        },
        {
          "name": "new_password",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "passphrase_summary",
      "plural": "passphrase_summaries",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "tribe",
          "type": "tribe",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "price_label",
      "plural": "price_labels",
      "fields": [
        {
          "name": "key",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "label",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "name",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "The specific name of the tax in the local region.",
          "example": "VAT, GST, HST, etc."
        }
      ],
      "attributes": [],
      "description": "Representation of a localized price type."
    },
    {
      "name": "processing_transaction",
      "plural": "processing_transactions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "type",
          "type": "io.flow.billing.v0.enums.billing_transaction_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "posted_at",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "value",
          "type": "io.flow.common.v0.models.price",
          "required": true,
          "attributes": [],
          "description": "Represents the net amount of this transaction for the organization in the currency of the account. A positive value indicates an amount that Flow will pay to the organization. A negative amount indicates an amount due to Flow."
        },
        {
          "name": "description",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "statement",
          "type": "io.flow.billing.v0.models.billing_statement_reference",
          "required": false,
          "attributes": []
        },
        {
          "name": "created_at",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "reference",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Unique key in the original transaction (e.g. the capture.key)"
        },
        {
          "name": "payment_method",
          "type": "string",
          "required": true,
          "attributes": [],
          "example": "visa, paypal"
        },
        {
          "name": "original",
          "type": "io.flow.common.v0.models.price_with_base",
          "required": true,
          "attributes": [],
          "example": "The value of the original transaction in both the local currency and the currency of this account"
        },
        {
          "name": "fees",
          "type": "fees",
          "required": true,
          "attributes": []
        },
        {
          "name": "withholdings",
          "type": "withholdings",
          "required": true,
          "attributes": []
        },
        {
          "name": "parent_transaction_id",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "If this transaction is an adjustment, we record the parent transaction id here"
        },
        {
          "name": "order",
          "type": "billing_order_summary",
          "required": false,
          "attributes": [],
          "description": "If this transaction originated from an order, you will see the order number here"
        }
      ],
      "attributes": [],
      "description": "A processing transaction represents a transaction related to payment activity - e.g. a payment capture, refund or adjustment"
    },
    {
      "name": "rate",
      "plural": "rates",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "organization_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "base",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "target",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "effective_at",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "spot_rate",
          "type": "decimal",
          "required": true,
          "attributes": []
        },
        {
          "name": "flow_margin",
          "type": "decimal",
          "required": true,
          "attributes": []
        },
        {
          "name": "flow_rate",
          "type": "decimal",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization_margin",
          "type": "decimal",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization_rate",
          "type": "decimal",
          "required": true,
          "attributes": []
        },
        {
          "name": "rate_lock_unit",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "rate_lock_value",
          "type": "long",
          "required": true,
          "attributes": []
        },
        {
          "name": "created_at",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "updated_at",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "updated_by_user_id",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "rate_data",
      "plural": "rate_data",
      "fields": [
        {
          "name": "base",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "target",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "effective_at",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "spot_rate",
          "type": "decimal",
          "required": true,
          "attributes": []
        },
        {
          "name": "flow_margin",
          "type": "decimal",
          "required": true,
          "attributes": []
        },
        {
          "name": "flow_rate",
          "type": "decimal",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization_margin",
          "type": "decimal",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization_rate",
          "type": "decimal",
          "required": true,
          "attributes": []
        },
        {
          "name": "rate_lock_unit",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "rate_lock_value",
          "type": "long",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Internal class to capture dynamic rate info that may not necessarily be served from the database"
    },
    {
      "name": "rate_deleted",
      "plural": "rate_deleteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "rate_id",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "rate_upserted",
      "plural": "rate_upserteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "rate_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "base",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "target",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "effective_at",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "spot_rate",
          "type": "decimal",
          "required": true,
          "attributes": [],
          "description": "The actual spot rate"
        },
        {
          "name": "flow_margin",
          "type": "decimal",
          "required": true,
          "attributes": [],
          "example": "5.9"
        },
        {
          "name": "flow_rate",
          "type": "decimal",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization_margin",
          "type": "decimal",
          "required": true,
          "attributes": [],
          "example": "5.9"
        },
        {
          "name": "organization_rate",
          "type": "decimal",
          "required": true,
          "attributes": []
        },
        {
          "name": "rate_lock_unit",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "unit of time"
        },
        {
          "name": "rate_lock_value",
          "type": "long",
          "required": true,
          "attributes": [],
          "minimum": 0
        }
      ],
      "attributes": []
    },
    {
      "name": "ratecard",
      "plural": "ratecards",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "direction",
          "type": "io.flow.label.v0.enums.direction",
          "required": true,
          "attributes": [],
          "description": "Tells us whether the ratecard is for outbound or reverse logistics. This will determine what fees, if any, to apply on an estimate."
        },
        {
          "name": "effective_at",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": [],
          "description": "Timestamp when ratecard should become effective in the future."
        },
        {
          "name": "origination_zones",
          "type": "[io.flow.common.v0.models.zone]",
          "required": true,
          "attributes": [],
          "description": "Valid list of origination zones for this ratecard",
          "minimum": 1
        },
        {
          "name": "service",
          "type": "ratecard_service_summary",
          "required": true,
          "attributes": [],
          "description": "Carrier service level. See https://docs.flow.io/services.html",
          "example": "dhl-express-worldwide"
        },
        {
          "name": "number",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Client's unique identifier for this object"
        },
        {
          "name": "published_at",
          "type": "date-time-iso8601",
          "required": false,
          "attributes": [],
          "description": "Timestamp when the ratecard was published and would be used to generate rates. Until this field is filled out, then ratecard is still in draft mode and cannot be used to generate cost estimates."
        }
      ],
      "attributes": [],
      "description": "Snapshot of all lanes and rows across all service levels of an organization"
    },
    {
      "name": "ratecard_carrier_summary",
      "plural": "ratecard_carrier_summaries",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "ratecard_estimate",
      "plural": "ratecard_estimates",
      "fields": [
        {
          "name": "service",
          "type": "ratecard_service_summary",
          "required": true,
          "attributes": [],
          "description": "Carrier service used for this estimate",
          "example": "dhl-express-worldwide"
        },
        {
          "name": "shipment_window",
          "type": "shipment_window",
          "required": true,
          "attributes": [],
          "description": "Represents min/max days transit time for a shipment in this estimate"
        },
        {
          "name": "currency",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The base iso_4217_3 currency code as defined in http://reference.api.flow.io/currencies",
          "example": "USD"
        },
        {
          "name": "amount",
          "type": "double",
          "required": true,
          "attributes": [],
          "description": "Base amount for this shipment based on rates on the appropriate lane on the rate card"
        },
        {
          "name": "fees",
          "type": "[ratecard_fee]",
          "required": true,
          "attributes": [],
          "description": "Fees applicable for this estimate"
        },
        {
          "name": "total",
          "type": "double",
          "required": true,
          "attributes": [],
          "description": "Total of the amount plus any applicable fees"
        },
        {
          "name": "delivered_duty",
          "type": "io.flow.common.v0.enums.delivered_duty",
          "required": true,
          "attributes": [],
          "description": "Delivered duty type for the estimate. This is taken from the ratecard lane.",
          "example": "paid"
        },
        {
          "name": "dimensional_weight",
          "type": "io.flow.common.v0.models.measurement",
          "required": false,
          "attributes": [],
          "description": "Estimated dimensional weight (i.e. length x width x depth / dim factor) based on dimensions provided to estimates endpoint or organization dimension estimates. Provided for transparency and any future troubleshooting."
        },
        {
          "name": "gravitational_weight",
          "type": "io.flow.common.v0.models.measurement",
          "required": false,
          "attributes": [],
          "description": "Estimated gravitational weight (i.e. actual weight) based on dimensions provided to estimates endpoint or organization weight estimates. Provided for transparency and any future troubleshooting."
        },
        {
          "name": "line_items",
          "type": "[io.flow.common.v0.models.line_item_form]",
          "required": false,
          "attributes": [],
          "description": "Items included in the package, if available."
        }
      ],
      "attributes": [],
      "description": "Represents a summary of a cost estimate based on rate card data for an origin/destination and weight, either gravitational or dimensional"
    },
    {
      "name": "ratecard_estimate_form",
      "plural": "ratecard_estimate_forms",
      "fields": [
        {
          "name": "origin",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "The ISO 3166-3 country code. Case insensitive. See https://api.flow.io/reference/countries",
          "example": "USA"
        },
        {
          "name": "destination",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "The ISO 3166-3 country code. Case insensitive. See https://api.flow.io/reference/countries",
          "example": "CHN"
        },
        {
          "name": "weight_unit",
          "type": "io.flow.common.v0.enums.unit_of_measurement",
          "required": false,
          "attributes": [],
          "description": "Type of unit measurement used to calculate gravitational weight",
          "example": "pound, kilogram"
        },
        {
          "name": "distance_unit",
          "type": "io.flow.common.v0.enums.unit_of_measurement",
          "required": false,
          "attributes": [],
          "description": "Type of unit measurement used to calculate dimensional weight",
          "example": "inch, centimeter"
        },
        {
          "name": "service",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Carrier service level to use",
          "example": "ups-ground, dhl-express-worldwide"
        },
        {
          "name": "weight",
          "type": "double",
          "required": false,
          "attributes": [],
          "description": "Part of gravitational weight calculation"
        },
        {
          "name": "length",
          "type": "double",
          "required": false,
          "attributes": [],
          "description": "Part of dimensional weight calculation"
        },
        {
          "name": "width",
          "type": "double",
          "required": false,
          "attributes": [],
          "description": "Part of dimensional weight calculation"
        },
        {
          "name": "depth",
          "type": "double",
          "required": false,
          "attributes": [],
          "description": "Part of dimensional weight calculation"
        },
        {
          "name": "delivered_duty",
          "type": "io.flow.common.v0.enums.delivered_duty",
          "required": false,
          "attributes": [],
          "description": "Delivered duty type for the estimate. This is taken from the ratecard lane."
        },
        {
          "name": "line_items",
          "type": "[io.flow.common.v0.models.line_item_form]",
          "required": false,
          "attributes": [],
          "description": "Items included in the package, if available."
        }
      ],
      "attributes": []
    },
    {
      "name": "ratecard_form",
      "plural": "ratecard_forms",
      "fields": [
        {
          "name": "direction",
          "type": "io.flow.label.v0.enums.direction",
          "required": true,
          "attributes": [],
          "description": "Tells us whether the ratecard is for outbound or reverse logistics"
        },
        {
          "name": "effective_at",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": [],
          "description": "The date and time where rates in this lane will take effect and produce shipping estimates."
        },
        {
          "name": "origination_zones",
          "type": "[io.flow.common.v0.models.zone]",
          "required": true,
          "attributes": [],
          "description": "Valid list of origination zones for this ratecard",
          "minimum": 1
        },
        {
          "name": "service",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Carrier service level associated with this"
        },
        {
          "name": "number",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Client's unique identifier for this object"
        }
      ],
      "attributes": []
    },
    {
      "name": "ratecard_lane",
      "plural": "ratecard_lanes",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "ratecard",
          "type": "ratecard_reference",
          "required": true,
          "attributes": []
        },
        {
          "name": "currency",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The base iso_4217_3 currency code as defined in http://reference.api.flow.io/currencies",
          "example": "USD"
        },
        {
          "name": "delivered_duty",
          "type": "io.flow.common.v0.enums.delivered_duty",
          "required": true,
          "attributes": []
        },
        {
          "name": "shipment_window",
          "type": "shipment_window",
          "required": true,
          "attributes": []
        },
        {
          "name": "destination",
          "type": "io.flow.common.v0.models.zone",
          "required": true,
          "attributes": []
        },
        {
          "name": "dim_factor",
          "type": "double",
          "required": true,
          "attributes": [],
          "description": "Factor used to compute dimensional weight. Contact your Flow or specific carrier's account representative."
        },
        {
          "name": "fees",
          "type": "[ratecard_fee]",
          "required": true,
          "attributes": []
        },
        {
          "name": "origin",
          "type": "io.flow.common.v0.models.zone",
          "required": true,
          "attributes": []
        },
        {
          "name": "service",
          "type": "ratecard_service_summary",
          "required": true,
          "attributes": [],
          "description": "Carrier service level. See https://docs.flow.io/services.html",
          "example": "dhl-express-worldwide"
        },
        {
          "name": "rates",
          "type": "[ratecard_rate]",
          "required": true,
          "attributes": [],
          "description": "Line item rows on the rate card. Shows a list of weight thresholds and corresponding costs."
        },
        {
          "name": "rounding",
          "type": "io.flow.common.v0.models.rounding",
          "required": true,
          "attributes": []
        },
        {
          "name": "weight_unit",
          "type": "io.flow.common.v0.enums.unit_of_measurement",
          "required": true,
          "attributes": [],
          "description": "Type of unit measurement used to calculate gravitational weight",
          "example": "gram, pound"
        },
        {
          "name": "distance_unit",
          "type": "io.flow.common.v0.enums.unit_of_measurement",
          "required": true,
          "attributes": [],
          "description": "Type of unit measurement used to calculate dimensional weight",
          "example": "inch, feet"
        },
        {
          "name": "consolidation_address",
          "type": "io.flow.common.v0.models.address",
          "required": false,
          "attributes": [],
          "description": "Address of the lane consoldiatioin facility, if available. This will be useful for generating return labels and creating 3rd party shipping labels."
        }
      ],
      "attributes": [],
      "description": "Describe list of rates applicable for a lane on the ratecard - defined by origin and destination zone"
    },
    {
      "name": "ratecard_lane_form",
      "plural": "ratecard_lane_forms",
      "fields": [
        {
          "name": "ratecard_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "currency",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The base iso_4217_3 currency code as defined in http://reference.api.flow.io/currencies",
          "example": "USD"
        },
        {
          "name": "destination",
          "type": "io.flow.common.v0.models.zone",
          "required": true,
          "attributes": []
        },
        {
          "name": "shipment_window",
          "type": "shipment_window",
          "required": true,
          "attributes": []
        },
        {
          "name": "delivered_duty",
          "type": "io.flow.common.v0.enums.delivered_duty",
          "required": true,
          "attributes": []
        },
        {
          "name": "dim_factor",
          "type": "double",
          "required": true,
          "attributes": [],
          "description": "Factor used to compute dimensional weight. Contact your Flow or specific carrier's account representative."
        },
        {
          "name": "fees",
          "type": "[ratecard_fee]",
          "required": true,
          "attributes": []
        },
        {
          "name": "origin",
          "type": "io.flow.common.v0.models.zone",
          "required": true,
          "attributes": []
        },
        {
          "name": "rounding",
          "type": "io.flow.common.v0.models.rounding",
          "required": true,
          "attributes": []
        },
        {
          "name": "rates",
          "type": "[ratecard_rate_form]",
          "required": true,
          "attributes": [],
          "description": "Line item rows on the rate card. Shows a list of weight thresholds and corresponding costs."
        },
        {
          "name": "weight_unit",
          "type": "io.flow.common.v0.enums.unit_of_measurement",
          "required": true,
          "attributes": [],
          "description": "Type of unit measurement used to calculate gravitational weight",
          "example": "gram, pound"
        },
        {
          "name": "distance_unit",
          "type": "io.flow.common.v0.enums.unit_of_measurement",
          "required": true,
          "attributes": [],
          "description": "Type of unit measurement used to calculate dimensional weight",
          "example": "inch, feet"
        },
        {
          "name": "consolidation_address",
          "type": "io.flow.common.v0.models.address",
          "required": false,
          "attributes": [],
          "description": "Address of the lane consoldiatioin facility, if available. This will be useful for generating return labels and creating 3rd party shipping labels."
        }
      ],
      "attributes": []
    },
    {
      "name": "ratecard_lane_version",
      "plural": "ratecard_lane_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "io.flow.common.v0.enums.change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "ratecard_lane",
          "type": "ratecard_lane",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "ratecard_published",
      "plural": "ratecard_publisheds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "published_at",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "ratecard_rate",
      "plural": "ratecard_rates",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "amount",
          "type": "double",
          "required": true,
          "attributes": [],
          "description": "Contractual amount for this rate"
        },
        {
          "name": "weight",
          "type": "double",
          "required": true,
          "attributes": [],
          "description": "Minimum weight threshold for this rate"
        }
      ],
      "attributes": [],
      "description": "Specific line item in a ratecard lane with information on a weight threshold and corresponding amount to charge"
    },
    {
      "name": "ratecard_rate_deleted",
      "plural": "ratecard_rate_deleteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": [],
          "description": "The date/time of the request"
        },
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "ratecard_rate_form",
      "plural": "ratecard_rate_forms",
      "fields": [
        {
          "name": "amount",
          "type": "double",
          "required": true,
          "attributes": [],
          "description": "Contractual amount for this rate"
        },
        {
          "name": "weight",
          "type": "double",
          "required": true,
          "attributes": [],
          "description": "Minimum weight threshold for this rate"
        }
      ],
      "attributes": []
    },
    {
      "name": "ratecard_rate_upserted",
      "plural": "ratecard_rate_upserteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": [],
          "description": "The date/time of the request"
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "weight",
          "type": "decimal",
          "required": true,
          "attributes": []
        },
        {
          "name": "amount",
          "type": "decimal",
          "required": true,
          "attributes": []
        },
        {
          "name": "service",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "currency",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "delivered_duty",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "shipment_window_from",
          "type": "long",
          "required": true,
          "attributes": []
        },
        {
          "name": "shipment_window_to",
          "type": "long",
          "required": true,
          "attributes": []
        },
        {
          "name": "destination",
          "type": "object",
          "required": true,
          "attributes": []
        },
        {
          "name": "dim_factor",
          "type": "double",
          "required": true,
          "attributes": []
        },
        {
          "name": "fees",
          "type": "[object]",
          "required": true,
          "attributes": []
        },
        {
          "name": "origin",
          "type": "object",
          "required": true,
          "attributes": []
        },
        {
          "name": "weight_unit",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "distance_unit",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "published_at",
          "type": "date-time-iso8601",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "ratecard_rate_version",
      "plural": "ratecard_rate_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "io.flow.common.v0.enums.change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "ratecard_rate",
          "type": "ratecard_rate",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "ratecard_reference",
      "plural": "ratecard_references",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "ratecard_service_summary",
      "plural": "ratecard_service_summaries",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "carrier",
          "type": "ratecard_carrier_summary",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "ratecard_upserted",
      "plural": "ratecard_upserteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "origination_zones",
          "type": "[object]",
          "required": true,
          "attributes": []
        },
        {
          "name": "service_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "effective_at",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "ratecard_version",
      "plural": "ratecard_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "io.flow.common.v0.enums.change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "ratecard",
          "type": "ratecard",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "repeat_daily",
      "plural": "repeat_dailies",
      "fields": [
        {
          "name": "interval",
          "type": "integer",
          "required": true,
          "attributes": [],
          "minimum": 1
        }
      ],
      "attributes": []
    },
    {
      "name": "repeat_monthly",
      "plural": "repeat_monthlies",
      "fields": [
        {
          "name": "interval",
          "type": "integer",
          "required": true,
          "attributes": [],
          "minimum": 1
        },
        {
          "name": "day",
          "type": "integer",
          "required": true,
          "attributes": [],
          "minimum": 1,
          "maximum": 31
        }
      ],
      "attributes": [],
      "description": "Monthly on the {day} of each {interval} month. Note if you specify a day > 28 and the month does not have that day, the repeat schedule is assumed to be the last day of the month."
    },
    {
      "name": "repeat_weekly",
      "plural": "repeat_weeklies",
      "fields": [
        {
          "name": "interval",
          "type": "integer",
          "required": true,
          "attributes": [],
          "minimum": 1
        },
        {
          "name": "days_of_week",
          "type": "[io.flow.common.v0.enums.day_of_week]",
          "required": true,
          "attributes": [],
          "minimum": 1
        }
      ],
      "attributes": []
    },
    {
      "name": "return_package_fee",
      "plural": "return_package_fees",
      "fields": [
        {
          "name": "amount",
          "type": "decimal",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "screen",
      "plural": "screens",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "q",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Original keyword search query used for DPS provider"
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Name provided by denied party list provider."
        },
        {
          "name": "key",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Client-supplied key for easy lookup."
        },
        {
          "name": "country",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "ISO 3166 2 or 3 character code for the country. See https://api.flow.io/reference/countries"
        },
        {
          "name": "other_names",
          "type": "[string]",
          "required": false,
          "attributes": [],
          "description": "Denied party screened persons may have different aliased names. Provided by the list provider."
        }
      ],
      "attributes": []
    },
    {
      "name": "screen_form",
      "plural": "screen_forms",
      "fields": [
        {
          "name": "q",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Original keyword search query used for DPS provider"
        },
        {
          "name": "key",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Client-supplied key for easy lookup."
        },
        {
          "name": "country",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "ISO 3166 2 or 3 character code for the country. See https://api.flow.io/reference/countries. Defaults to any country if not provided."
        }
      ],
      "attributes": []
    },
    {
      "name": "search_item_hs10_code",
      "plural": "search_item_hs10_codes",
      "fields": [
        {
          "name": "item",
          "type": "io.flow.common.v0.models.catalog_item_summary",
          "required": true,
          "attributes": []
        },
        {
          "name": "destination",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The ISO 3166-3 country code. Case insensitive. See https://api.flow.io/reference/countries",
          "example": "CAN"
        },
        {
          "name": "code",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "origin",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "The ISO 3166-3 country code. Case insensitive. See https://api.flow.io/reference/countries",
          "example": "CAN"
        }
      ],
      "attributes": [],
      "description": "Associated item information for an HS10 code"
    },
    {
      "name": "search_item_hs6_code",
      "plural": "search_item_hs6_codes",
      "fields": [
        {
          "name": "item",
          "type": "io.flow.common.v0.models.catalog_item_summary",
          "required": true,
          "attributes": []
        },
        {
          "name": "code",
          "type": "string",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Associated item information for an HS6 code"
    },
    {
      "name": "service_form",
      "plural": "service_forms",
      "fields": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Name of the Service",
          "minimum": 3
        },
        {
          "name": "carrier",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Flow ID of carrier using this Service."
        }
      ],
      "attributes": [],
      "description": "Specific service rendered by the carrier (fedex ground saturday, ups overnight weekend, etc)"
    },
    {
      "name": "service_upserted",
      "plural": "service_upserteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "carrier_id",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "service_version",
      "plural": "service_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "io.flow.common.v0.enums.change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "service",
          "type": "io.flow.fulfillment.v0.models.service_summary",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "shipment_window",
      "plural": "shipment_windows",
      "fields": [
        {
          "name": "from",
          "type": "long",
          "required": true,
          "attributes": []
        },
        {
          "name": "to",
          "type": "long",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "shop",
      "plural": "shops",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "organization",
          "type": "io.flow.common.v0.models.organization_reference",
          "required": false,
          "attributes": [],
          "description": "Once configured, a shop is associated with an organization in flow"
        },
        {
          "name": "myshopify_domain",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "the canonical xxx.myshopify.com domain"
        },
        {
          "name": "domain",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Actual final domain that a customer sees. We get this from the shopify store settings and may not have it from the start, so this field is optional."
        }
      ],
      "attributes": []
    },
    {
      "name": "shop_form",
      "plural": "shop_forms",
      "fields": [
        {
          "name": "organization_id",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "shop_version",
      "plural": "shop_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "io.flow.common.v0.enums.change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "shop",
          "type": "shop",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "shopify_api_key",
      "plural": "shopify_api_keys",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "shopify_shop_id",
          "type": "long",
          "required": true,
          "attributes": []
        },
        {
          "name": "grants",
          "type": "[shopify_grant]",
          "required": true,
          "attributes": [],
          "minimum": 1,
          "example": "[discount]"
        },
        {
          "name": "api_key",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "shopify_cart",
      "plural": "shopify_carts",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Equivalent of the cart token"
        },
        {
          "name": "items",
          "type": "[shopify_cart_item]",
          "required": true,
          "attributes": []
        },
        {
          "name": "item_count",
          "type": "long",
          "required": true,
          "attributes": []
        },
        {
          "name": "total_price",
          "type": "long",
          "required": true,
          "attributes": []
        },
        {
          "name": "local",
          "type": "shopify_local_cart_metadata",
          "required": true,
          "attributes": []
        },
        {
          "name": "attributes",
          "type": "object",
          "required": false,
          "attributes": []
        },
        {
          "name": "note",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "requires_shipping",
          "type": "boolean",
          "required": true,
          "attributes": [],
          "default": "true"
        },
        {
          "name": "total_weight",
          "type": "long",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Representation of a Shopify cart"
    },
    {
      "name": "shopify_cart_add_form",
      "plural": "shopify_cart_add_forms",
      "fields": [
        {
          "name": "id",
          "type": "long",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "quantity",
          "type": "long",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [
        {
          "name": "linter",
          "value": {
            "ignore": [
              "common_field_types"
            ]
          },
          "description": "id is a long in shopify"
        }
      ]
    },
    {
      "name": "shopify_cart_change_form",
      "plural": "shopify_cart_change_forms",
      "fields": [
        {
          "name": "quantity",
          "type": "long",
          "required": true,
          "attributes": []
        },
        {
          "name": "line",
          "type": "long",
          "required": false,
          "attributes": [],
          "description": "This correlates to the position of the item line in the cart. First item in shopify cart has line=1",
          "minimum": 1
        },
        {
          "name": "id",
          "type": "long",
          "required": false,
          "attributes": [],
          "description": "The variant id"
        }
      ],
      "attributes": [
        {
          "name": "linter",
          "value": {
            "ignore": [
              "common_field_types"
            ]
          },
          "description": "id is a long in shopify"
        }
      ],
      "description": "Must provide either line or id. If you provide both, they must match"
    },
    {
      "name": "shopify_cart_item",
      "plural": "shopify_cart_items",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "handle",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "line_price",
          "type": "double",
          "required": true,
          "attributes": []
        },
        {
          "name": "price",
          "type": "long",
          "required": true,
          "attributes": []
        },
        {
          "name": "product_id",
          "type": "long",
          "required": true,
          "attributes": []
        },
        {
          "name": "product_title",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "quantity",
          "type": "long",
          "required": true,
          "attributes": []
        },
        {
          "name": "title",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "url",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "variant_id",
          "type": "long",
          "required": true,
          "attributes": []
        },
        {
          "name": "local",
          "type": "shopify_local_cart_item_metadata",
          "required": true,
          "attributes": []
        },
        {
          "name": "gift_card",
          "type": "boolean",
          "required": true,
          "attributes": [],
          "default": "false"
        },
        {
          "name": "image",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "product_description",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "product_type",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "properties",
          "type": "map[string]",
          "required": false,
          "attributes": []
        },
        {
          "name": "requires_shipping",
          "type": "boolean",
          "required": true,
          "attributes": [],
          "default": "true"
        },
        {
          "name": "sku",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "variant_title",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "variant_options",
          "type": "[string]",
          "required": false,
          "attributes": []
        },
        {
          "name": "vendor",
          "type": "string",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "shopify_code_form",
      "plural": "shopify_code_forms",
      "fields": [
        {
          "name": "code",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Used to apply either a gift card or promotion code."
    },
    {
      "name": "shopify_gift_card_payment_form",
      "plural": "shopify_gift_card_payment_forms",
      "fields": [
        {
          "name": "code",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "customer_id",
          "type": "long",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Used to apply a gift card to an order and creates an order payment."
    },
    {
      "name": "shopify_line",
      "plural": "shopify_lines",
      "fields": [
        {
          "name": "variant_id",
          "type": "long",
          "required": true,
          "attributes": [],
          "description": "Shopify variant id"
        },
        {
          "name": "quantity",
          "type": "long",
          "required": true,
          "attributes": [],
          "minimum": 1
        },
        {
          "name": "price",
          "type": "shopify_price",
          "required": true,
          "attributes": []
        },
        {
          "name": "total",
          "type": "shopify_price",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "shopify_local_cart_item_metadata",
      "plural": "shopify_local_cart_item_metadata",
      "fields": [
        {
          "name": "line_price",
          "type": "io.flow.common.v0.models.price_with_base",
          "required": true,
          "attributes": []
        },
        {
          "name": "price",
          "type": "io.flow.common.v0.models.price_with_base",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "shopify_local_cart_metadata",
      "plural": "shopify_local_cart_metadata",
      "fields": [
        {
          "name": "total_price",
          "type": "io.flow.common.v0.models.price_with_base",
          "required": true,
          "attributes": []
        },
        {
          "name": "promotions",
          "type": "io.flow.experience.v0.models.promotions",
          "required": true,
          "attributes": [],
          "description": "The current available and applied promotions for this order"
        }
      ],
      "attributes": []
    },
    {
      "name": "shopify_local_price_metadata",
      "plural": "shopify_local_price_metadata",
      "fields": [
        {
          "name": "price",
          "type": "io.flow.common.v0.models.price_with_base",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "shopify_localized_order",
      "plural": "shopify_localized_orders",
      "fields": [
        {
          "name": "id",
          "type": "long",
          "required": true,
          "attributes": [],
          "description": "Shopify order id"
        },
        {
          "name": "lines",
          "type": "[shopify_line]",
          "required": true,
          "attributes": []
        },
        {
          "name": "prices",
          "type": "[shopify_price]",
          "required": true,
          "attributes": []
        },
        {
          "name": "total",
          "type": "shopify_price",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [
        {
          "name": "linter",
          "value": {
            "ignore": [
              "common_field_types"
            ]
          },
          "description": "id is a long in shopify"
        }
      ]
    },
    {
      "name": "shopify_localized_variant",
      "plural": "shopify_localized_variants",
      "fields": [
        {
          "name": "id",
          "type": "long",
          "required": true,
          "attributes": [],
          "description": "Shopify variant id"
        },
        {
          "name": "handle",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Shopify product handle"
        },
        {
          "name": "experience",
          "type": "io.flow.experience.v0.models.experience_reference",
          "required": true,
          "attributes": []
        },
        {
          "name": "prices",
          "type": "shopify_localized_variant_prices",
          "required": true,
          "attributes": []
        },
        {
          "name": "status",
          "type": "io.flow.catalog.v0.enums.subcatalog_item_status",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [
        {
          "name": "linter",
          "value": {
            "ignore": [
              "common_field_types"
            ]
          },
          "description": "id is a long in shopify"
        }
      ]
    },
    {
      "name": "shopify_localized_variant_prices",
      "plural": "shopify_localized_variant_prices",
      "fields": [
        {
          "name": "item",
          "type": "shopify_price",
          "required": true,
          "attributes": []
        },
        {
          "name": "compare_at",
          "type": "shopify_price",
          "required": false,
          "attributes": []
        },
        {
          "name": "vat",
          "type": "shopify_price",
          "required": false,
          "attributes": []
        },
        {
          "name": "duty",
          "type": "shopify_price",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "shopify_order_authorization",
      "plural": "shopify_order_authorizations",
      "fields": [
        {
          "name": "result",
          "type": "io.flow.payment.v0.models.authorization_result",
          "required": true,
          "attributes": []
        },
        {
          "name": "detail",
          "type": "shopify_order_detail",
          "required": false,
          "attributes": [],
          "description": "If the auth was successful, returns the associated order details here"
        }
      ],
      "attributes": [],
      "description": "Returns the results of the order submission, including the payment authorization, and if successful, the shopify order details"
    },
    {
      "name": "shopify_order_content",
      "plural": "shopify_order_contents",
      "fields": [
        {
          "name": "lines",
          "type": "[shopify_order_line_content]",
          "required": true,
          "attributes": []
        },
        {
          "name": "discounts",
          "type": "[shopify_order_discount_content]",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Provides content to display an order in context of shopify"
    },
    {
      "name": "shopify_order_detail",
      "plural": "shopify_order_details",
      "fields": [
        {
          "name": "organization",
          "type": "io.flow.common.v0.models.organization_reference",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Flow order number, should be the same as shopify order number"
        },
        {
          "name": "order",
          "type": "io.flow.experience.v0.models.order",
          "required": true,
          "attributes": []
        },
        {
          "name": "payments",
          "type": "[shopify_payment_summary]",
          "required": true,
          "attributes": []
        },
        {
          "name": "contents",
          "type": "shopify_order_content",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Returns full details of the order, including additional information common to things like confirmation pages"
    },
    {
      "name": "shopify_order_discount_content",
      "plural": "shopify_order_discount_contents",
      "fields": [
        {
          "name": "description",
          "type": "string",
          "required": true,
          "attributes": [],
          "example": "$10 Off Promo (CA$12.46)"
        },
        {
          "name": "code",
          "type": "string",
          "required": false,
          "attributes": [],
          "example": "10dollarsoff"
        }
      ],
      "attributes": [],
      "description": "Returns the content used by shopify to present discounts"
    },
    {
      "name": "shopify_order_line_attribute",
      "plural": "shopify_order_line_attributes",
      "fields": [
        {
          "name": "key",
          "type": "string",
          "required": true,
          "attributes": [],
          "example": "size"
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": [],
          "example": "Size"
        },
        {
          "name": "value",
          "type": "string",
          "required": true,
          "attributes": [],
          "example": "Small"
        }
      ],
      "attributes": [],
      "description": "Provides variant attributes (e.g. size, color) where applicable"
    },
    {
      "name": "shopify_order_line_content",
      "plural": "shopify_order_line_contents",
      "fields": [
        {
          "name": "item_number",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "quantity",
          "type": "long",
          "required": true,
          "attributes": [],
          "minimum": 1
        },
        {
          "name": "price",
          "type": "io.flow.common.v0.models.price_with_base",
          "required": true,
          "attributes": []
        },
        {
          "name": "total",
          "type": "io.flow.common.v0.models.price_with_base",
          "required": true,
          "attributes": []
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "image_url",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "variant_url",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "attributes",
          "type": "[shopify_order_line_attribute]",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Provides data required to present order line items within shopify"
    },
    {
      "name": "shopify_payment_summary",
      "plural": "shopify_payment_summaries",
      "fields": [
        {
          "name": "description",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "address",
          "type": "io.flow.common.v0.models.address",
          "required": false,
          "attributes": []
        },
        {
          "name": "contact",
          "type": "io.flow.common.v0.models.contact",
          "required": false,
          "attributes": [],
          "description": "Contact information of entity at the billing address"
        }
      ],
      "attributes": []
    },
    {
      "name": "shopify_price",
      "plural": "shopify_prices",
      "fields": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": [],
          "example": "HST or Duty"
        },
        {
          "name": "amount",
          "type": "double",
          "required": true,
          "attributes": []
        },
        {
          "name": "cents",
          "type": "double",
          "required": true,
          "attributes": []
        },
        {
          "name": "currency",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "ISO 4217 3 currency code as defined in https://api.flow.io/reference/currencies",
          "example": "CAD"
        },
        {
          "name": "label",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "includes",
          "type": "io.flow.catalog.v0.models.included_levies",
          "required": false,
          "attributes": [],
          "description": "Describes which levies are included in the price, if any."
        },
        {
          "name": "local",
          "type": "shopify_local_price_metadata",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "shopify_promotion_form",
      "plural": "shopify_promotion_forms",
      "fields": [
        {
          "name": "code",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "shopify_webhook",
      "plural": "shopify_webhooks",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "shop_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "address",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "topic",
          "type": "io.flow.shopify.v0.enums.topic",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Top level information for the webhook subscription"
    },
    {
      "name": "shopify_webhook_event",
      "plural": "shopify_webhook_events",
      "fields": [
        {
          "name": "dummy",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "shopify_webhook_form",
      "plural": "shopify_webhook_forms",
      "fields": [
        {
          "name": "myshopify_domain",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "address",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "topic",
          "type": "io.flow.shopify.v0.enums.topic",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Top level information to create a Shopify webhook subscription"
    },
    {
      "name": "spot_rate",
      "plural": "spot_rates",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "effective_at",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "base",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The base currency's ISO 4217 3-character code as defined in https://api.flow.io/reference/currencies"
        },
        {
          "name": "target",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The target currency's ISO 4217 3-character code as defined in https://api.flow.io/reference/currencies"
        },
        {
          "name": "value",
          "type": "decimal",
          "required": true,
          "attributes": [],
          "description": "The value of the mid market (interbank) rate."
        }
      ],
      "attributes": []
    },
    {
      "name": "spot_rate_version",
      "plural": "spot_rate_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "io.flow.common.v0.enums.change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "spot_rate",
          "type": "spot_rate",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "subscription",
      "plural": "subscriptions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "value",
          "type": "io.flow.common.v0.models.price",
          "required": true,
          "attributes": []
        },
        {
          "name": "frequency",
          "type": "subscription_frequency",
          "required": true,
          "attributes": []
        },
        {
          "name": "starts_at",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": [],
          "description": "The date on which the subscription starts"
        },
        {
          "name": "created_at",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Defines the saas subscription level for an organization (e.g. $x / month)"
    },
    {
      "name": "subscription_transaction",
      "plural": "subscription_transactions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "type",
          "type": "io.flow.billing.v0.enums.billing_transaction_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "posted_at",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "value",
          "type": "io.flow.common.v0.models.price",
          "required": true,
          "attributes": []
        },
        {
          "name": "description",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "statement",
          "type": "io.flow.billing.v0.models.billing_statement_reference",
          "required": false,
          "attributes": []
        },
        {
          "name": "created_at",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "period",
          "type": "io.flow.common.v0.models.datetime_range",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "task_classify",
      "plural": "task_classifies",
      "fields": [
        {
          "name": "catalog_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "classification_id",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "task_import",
      "plural": "task_imports",
      "fields": [
        {
          "name": "import_id",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Task created to process an import."
    },
    {
      "name": "task_item_upserted",
      "plural": "task_item_upserteds",
      "fields": [
        {
          "name": "catalog_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "item_id",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "task_process_queued_event",
      "plural": "task_process_queued_events",
      "fields": [
        {
          "name": "event_discriminator",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Events from kinesis are stored in a queue table. This task processes an event from that table"
    },
    {
      "name": "task_summarize_code",
      "plural": "task_summarize_codes",
      "fields": [
        {
          "name": "catalog_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "classification_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "origin",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The ISO 3166-3 code for the country of origin"
        },
        {
          "name": "destination",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The ISO 3166-3 code for the destination country"
        },
        {
          "name": "code",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Request to summarize data for an HS code. Triggered when a new HS code is assigned (with duty information). This indicates that we need to recalculate statistics for the associated hs codes - eg compute min, avg, max duty rates for this hs4, 5, 6 globally and for the organization's master catalog"
    },
    {
      "name": "tax_canada",
      "plural": "tax_canadas",
      "fields": [
        {
          "name": "province",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "application",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "normalRate",
          "type": "tax_canada_rate",
          "required": true,
          "attributes": []
        },
        {
          "name": "exemption",
          "type": "tax_canada_rate",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "tax_canada_rate",
      "plural": "tax_canada_rates",
      "fields": [
        {
          "name": "federal",
          "type": "decimal",
          "required": true,
          "attributes": []
        },
        {
          "name": "provincial",
          "type": "decimal",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "tax_simple",
      "plural": "tax_simples",
      "fields": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "rates",
          "type": "[decimal]",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "threece_classification",
      "plural": "threece_classifications",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "classification",
          "type": "classification_reference",
          "required": true,
          "attributes": []
        },
        {
          "name": "strategy",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "description",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "url",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The URL into 3CE's system for this classification attempt."
        },
        {
          "name": "product_id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The 3CE assigned product Id for this classification record."
        },
        {
          "name": "hs6",
          "type": "string",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "threece_classification_form",
      "plural": "threece_classification_forms",
      "fields": [
        {
          "name": "classification_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "strategy",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "description",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "url",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The URL into 3CE's system for this classification attempt."
        },
        {
          "name": "product_id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The 3CE assigned product Id for this classification record."
        },
        {
          "name": "hs6",
          "type": "string",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "tracking_summary",
      "plural": "tracking_summaries",
      "fields": [
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "description",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Client's unique identifier for this object"
        },
        {
          "name": "status",
          "type": "io.flow.tracking.v0.enums.tracking_status",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "transfer_transaction",
      "plural": "transfer_transactions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "type",
          "type": "io.flow.billing.v0.enums.billing_transaction_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "posted_at",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "value",
          "type": "io.flow.common.v0.models.price",
          "required": true,
          "attributes": []
        },
        {
          "name": "description",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "statement",
          "type": "io.flow.billing.v0.models.billing_statement_reference",
          "required": false,
          "attributes": []
        },
        {
          "name": "created_at",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "method",
          "type": "transfer_method",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Represents a payment from Flow to the organization, in the currency of the associated account."
    },
    {
      "name": "tribe",
      "plural": "tribes",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "description",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "user_deleted",
      "plural": "user_deleteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "user_one_time_token",
      "plural": "user_one_time_tokens",
      "fields": [
        {
          "name": "user",
          "type": "io.flow.common.v0.models.user_reference",
          "required": true,
          "attributes": []
        },
        {
          "name": "token",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Secure random string"
        }
      ],
      "attributes": [],
      "description": "Defines a one-time, expiring token that can be used to lookup user data. Useful for implementing SSO systems using a one time handoff."
    },
    {
      "name": "user_status_form",
      "plural": "user_status_forms",
      "fields": [
        {
          "name": "status",
          "type": "io.flow.common.v0.enums.user_status",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Used to set the status for a given user"
    },
    {
      "name": "user_upserted",
      "plural": "user_upserteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "email",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "name",
          "type": "object",
          "required": true,
          "attributes": []
        },
        {
          "name": "status",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "variant_metafield_value",
      "plural": "variant_metafield_values",
      "fields": [
        {
          "name": "localized_item_price",
          "type": "localized_item_price",
          "required": true,
          "attributes": []
        },
        {
          "name": "prices",
          "type": "[price_label]",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Model to represent display details for localized prices."
    },
    {
      "name": "withholdings",
      "plural": "withholdingses",
      "fields": [
        {
          "name": "vat",
          "type": "io.flow.common.v0.models.price",
          "required": true,
          "attributes": []
        },
        {
          "name": "duty",
          "type": "io.flow.common.v0.models.price",
          "required": true,
          "attributes": []
        },
        {
          "name": "freight",
          "type": "io.flow.common.v0.models.price",
          "required": true,
          "attributes": []
        },
        {
          "name": "insurance",
          "type": "io.flow.common.v0.models.price",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Withholdings represent portions of an order that Flow is remitting on behalf of the organization. These amounts are withheld from the original transactions and then paid out automatically by Flow."
    }
  ],
  "resources": [
    {
      "type": "dimension_estimate",
      "plural": "dimension_estimates",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/dimension-estimates",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[dimension_estimate]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "POST",
          "path": "/:organization/dimension-estimates",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "dimension_estimate",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "io.flow.error.v0.models.generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "dimension_estimate_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/dimension-estimates/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "dimension_estimate",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "DELETE",
          "path": "/:organization/dimension-estimates/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/:organization/dimension-estimates/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "dimension_estimate",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[dimension_estimate_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "dimension_estimate"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "path": "/:organization/dimension-estimates"
    },
    {
      "type": "ratecard",
      "plural": "ratecards",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/ratecards",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "direction",
              "type": "io.flow.label.v0.enums.direction",
              "location": "Query",
              "required": false
            },
            {
              "name": "number",
              "type": "string",
              "location": "Query",
              "required": false
            },
            {
              "name": "service",
              "type": "string",
              "location": "Query",
              "required": false
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[ratecard]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "direction"
                  },
                  {
                    "value": "number"
                  },
                  {
                    "value": "service"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "POST",
          "path": "/:organization/ratecards",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "ratecard",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "io.flow.error.v0.models.generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "ratecard_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/ratecards/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "ratecard",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "PUT",
          "path": "/:organization/ratecards/:id/publish",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "ratecard",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "ratecard",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "io.flow.error.v0.models.generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/:organization/ratecards/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[ratecard_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "path": "/:organization/ratecards",
      "description": "Snapshot of all lanes and rows across all service levels of an organization"
    },
    {
      "type": "ratecard_estimate",
      "plural": "ratecard_estimates",
      "operations": [
        {
          "method": "POST",
          "path": "/:organization/ratecard_estimates",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[ratecard_estimate]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "io.flow.error.v0.models.generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "total"
                  }
                ]
              }
            },
            {
              "name": "non-crud",
              "value": {}
            }
          ],
          "description": "Endpoint to get shipment cost estimates based on applicable rate cards. An origin and destination address must be provided. Final amounts are based on either gravitational weight or dimensional weight. When estimating based off gravitational weight, the weight field must be set. When estimating based off dimensional weight, then length/width/depth must be set. For either one, the appropriate unit of measurement must be given.",
          "body": {
            "type": "ratecard_estimate_form",
            "attributes": []
          }
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "path": "/:organization/ratecard_estimates",
      "description": "Represents a summary of a cost estimate based on rate card data for an origin/destination and weight, either gravitational or dimensional"
    },
    {
      "type": "ratecard_lane",
      "plural": "ratecard_lanes",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/ratecard-lanes",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "delivered_duty",
              "type": "io.flow.common.v0.enums.delivered_duty",
              "location": "Query",
              "required": false
            },
            {
              "name": "destination",
              "type": "string",
              "location": "Query",
              "required": false
            },
            {
              "name": "direction",
              "type": "io.flow.label.v0.enums.direction",
              "location": "Query",
              "required": false
            },
            {
              "name": "origin",
              "type": "string",
              "location": "Query",
              "required": false
            },
            {
              "name": "ratecard_id",
              "type": "string",
              "location": "Query",
              "required": false
            },
            {
              "name": "service",
              "type": "string",
              "location": "Query",
              "required": false
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[ratecard_lane]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "io.flow.error.v0.models.generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "created_at"
                  },
                  {
                    "value": "destination"
                  },
                  {
                    "value": "delivered_duty"
                  },
                  {
                    "value": "direction"
                  },
                  {
                    "value": "origin"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "POST",
          "path": "/:organization/ratecard-lanes",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "ratecard_lane",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "io.flow.error.v0.models.generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "ratecard_lane_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/ratecard-lanes/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "ratecard_lane",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "PUT",
          "path": "/:organization/ratecard-lanes/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "ratecard_lane",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "ratecard_lane",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "io.flow.error.v0.models.generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "ratecard_lane_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/ratecard-lanes/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[ratecard_lane_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "io.flow.error.v0.models.generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "path": "/:organization/ratecard-lanes",
      "description": "Describe list of rates applicable for a lane on the ratecard - defined by origin and destination zone"
    },
    {
      "type": "ratecard_rate",
      "plural": "ratecard_rates",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/ratecards/:ratecard_id/lanes/:lane_id/rates",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "ratecard_id",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "lane_id",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "weight",
              "type": "[double]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[ratecard_rate]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "weight"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "POST",
          "path": "/:organization/ratecards/:ratecard_id/lanes/:lane_id/rates",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "ratecard_id",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "lane_id",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "ratecard_rate",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "io.flow.error.v0.models.generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "ratecard_rate_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/ratecards/:ratecard_id/lanes/:lane_id/rates/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "ratecard_id",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "lane_id",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "ratecard_rate",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "PUT",
          "path": "/:organization/ratecards/:ratecard_id/lanes/:lane_id/rates/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "ratecard_id",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "lane_id",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "ratecard_rate",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "ratecard_rate",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "io.flow.error.v0.models.generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "ratecard_lane_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/ratecards/:ratecard_id/lanes/:lane_id/rates/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "ratecard_id",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "lane_id",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[ratecard_rate_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "path": "/:organization/ratecards/:ratecard_id/lanes/:lane_id/rates",
      "description": "Specific line item in a ratecard lane with information on a weight threshold and corresponding amount to charge"
    },
    {
      "type": "account",
      "plural": "accounts",
      "operations": [
        {
          "method": "PUT",
          "path": "/internal/:organization/accounts/:currency",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "currency",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "io.flow.billing.v0.models.account",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "io.flow.error.v0.models.generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "account_put_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/accounts",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "currency",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "currency"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[account]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "currency"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "get",
                  "sort_parameter_default",
                  "versions"
                ]
              }
            }
          ]
        },
        {
          "method": "GET",
          "path": "/:organization/accounts/:currency",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "currency",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "account",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "io.flow.error.v0.models.generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/:organization/accounts/:currency/statistics",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "currency",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "account_statistics",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "io.flow.error.v0.models.generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/:organization/accounts/:currency/transactions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "currency",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "type",
              "type": "billing_transaction_type",
              "location": "Query",
              "required": false
            },
            {
              "name": "status",
              "type": "billing_transaction_status",
              "location": "Query",
              "required": false
            },
            {
              "name": "statement",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Filter to transactions on the statement with the specified reference number",
              "example": "flow-1234"
            },
            {
              "name": "created_from",
              "type": "date-iso8601",
              "location": "Query",
              "required": false
            },
            {
              "name": "created_to",
              "type": "date-iso8601",
              "location": "Query",
              "required": false
            },
            {
              "name": "created_on_or_after",
              "type": "date-time-iso8601",
              "location": "Query",
              "required": false
            },
            {
              "name": "created_after",
              "type": "date-time-iso8601",
              "location": "Query",
              "required": false
            },
            {
              "name": "created_on_or_before",
              "type": "date-time-iso8601",
              "location": "Query",
              "required": false
            },
            {
              "name": "created_before",
              "type": "date-time-iso8601",
              "location": "Query",
              "required": false
            },
            {
              "name": "posted_from",
              "type": "date-iso8601",
              "location": "Query",
              "required": false
            },
            {
              "name": "posted_to",
              "type": "date-iso8601",
              "location": "Query",
              "required": false
            },
            {
              "name": "posted_on_or_after",
              "type": "date-time-iso8601",
              "location": "Query",
              "required": false
            },
            {
              "name": "posted_after",
              "type": "date-time-iso8601",
              "location": "Query",
              "required": false
            },
            {
              "name": "posted_on_or_before",
              "type": "date-time-iso8601",
              "location": "Query",
              "required": false
            },
            {
              "name": "posted_before",
              "type": "date-time-iso8601",
              "location": "Query",
              "required": false
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[billing_transaction]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "io.flow.error.v0.models.generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "versions"
                ]
              }
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/:organization/accounts",
      "description": "An organization has a single account for each base currency which manages all entries in that currency."
    },
    {
      "type": "billing_statement",
      "plural": "billing_statements",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/account/statements",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "account_id",
              "type": "string",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "currency",
              "type": "string",
              "location": "Query",
              "required": false
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-period_to"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[billing_statement]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "currency"
                  },
                  {
                    "value": "period_to"
                  },
                  {
                    "value": "period_from"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "sort_parameter_default",
                  "versions"
                ]
              }
            }
          ]
        },
        {
          "method": "GET",
          "path": "/:organization/account/statements/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "billing_statement",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "POST",
          "path": "/:organization/account/statements/:id/email",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "io.flow.error.v0.models.generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Generates and sends an email about this statement",
          "body": {
            "type": "email_form",
            "attributes": []
          }
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/:organization/account/statements"
    },
    {
      "type": "classification",
      "plural": "classifications",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/harmonization/classifications",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "number",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[classification]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "sort",
                  "versions"
                ]
              }
            }
          ],
          "description": "Search classifications requests. Always paginated."
        },
        {
          "method": "POST",
          "path": "/:organization/harmonization/classifications",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "classification",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "io.flow.error.v0.models.generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Create a classification request, which will be processed asynchronously. You can check for results by querying with GET using the id provided in the response.",
          "body": {
            "type": "classification_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/harmonization/classifications/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "classification",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Returns information about a specific classification request."
        },
        {
          "method": "DELETE",
          "path": "/:organization/harmonization/classifications/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Delete the specified classification request"
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/:organization/harmonization/classifications",
      "description": "The actual classification record. Users request classification of their items and this model holds all of the data, including the results once available. Classification proceeds in near real-time for cases where there is sufficient data to classify the item automatically."
    },
    {
      "type": "complete_price_rule",
      "plural": "complete_price_rules",
      "operations": [
        {
          "method": "POST",
          "path": "/:organization/shopify/complete-price-rule",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "complete_price_rule",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "io.flow.error.v0.models.generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "complete_price_rule",
            "attributes": []
          }
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/:organization/shopify/complete-price-rule"
    },
    {
      "type": "content",
      "plural": "contents",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/content/:key/url",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "key",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "The content key for which we are loading a URL. This is required as we validate that the URL is defined as part of this content.",
              "example": "checkout"
            },
            {
              "name": "url",
              "type": "string",
              "location": "Query",
              "required": true,
              "description": "The actual URL to load. Must start with http"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "string",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "io.flow.error.v0.models.generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Endpoint used to access data for the 'load' content type - This allows us to rewrite URLs to serve from api proxy, avoiding any issues with CORS"
        },
        {
          "method": "GET",
          "path": "/:organization/content/checkout",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "checkout",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/:organization/content"
    },
    {
      "type": "detail",
      "plural": "details",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/harmonization/details",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "number",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[detail]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "sort",
                  "versions"
                ]
              }
            }
          ],
          "description": "Search details classification requests. Always paginated."
        },
        {
          "method": "GET",
          "path": "/:organization/harmonization/details/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            },
            {
              "name": "expand",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "minimum": 0,
              "maximum": 1,
              "example": "classification"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "detail",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Returns information about a specific detail classification request."
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/:organization/harmonization/details",
      "description": "The detailed classification of a given item from one country to another country."
    },
    {
      "type": "flow_currency_setting",
      "plural": "flow_currency_settings",
      "operations": [
        {
          "method": "GET",
          "path": "/internal/currency/settings",
          "parameters": [
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "organization",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "base",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Filter by the (case-insensitive) base currency's ISO 4217 3-character code as defined in https://api.flow.io/reference/currencies"
            },
            {
              "name": "target",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Filter by the (case-insensitive) target currency's ISO 4217 3-character code as defined in https://api.flow.io/reference/currencies"
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[flow_currency_setting]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "base"
                  },
                  {
                    "value": "target"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            }
          ],
          "description": "Search Flow currency settings. Always paginated."
        },
        {
          "method": "POST",
          "path": "/internal/currency/settings",
          "parameters": [],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "flow_currency_setting",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "io.flow.error.v0.models.generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Create Flow currency settings for an organization.",
          "body": {
            "type": "flow_currency_setting_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/internal/currency/settings/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "flow_currency_setting",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Get Flow currency settings."
        },
        {
          "method": "PUT",
          "path": "/internal/currency/settings/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "flow_currency_setting",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "io.flow.error.v0.models.generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Update an existing Flow currency setting by id.",
          "body": {
            "type": "flow_currency_setting_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/internal/currency/settings/versions",
          "parameters": [
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[flow_currency_setting_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "base"
                  },
                  {
                    "value": "target"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ],
          "description": "Provides visibility into recent changes of each object, including deletion."
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/internal/currency/settings"
    },
    {
      "type": "flow_label_setting",
      "plural": "flow_label_settings",
      "operations": [
        {
          "method": "POST",
          "path": "/internal/label/settings",
          "parameters": [],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "flow_label_setting",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "io.flow.error.v0.models.generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "flow_label_setting_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/internal/label/settings/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "flow_label_setting",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "PUT",
          "path": "/internal/label/settings/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "flow_label_setting",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "io.flow.error.v0.models.generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "flow_label_setting_form",
            "attributes": []
          }
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/internal/label/settings"
    },
    {
      "type": "ftp_setting",
      "plural": "ftp_settings",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization_id/demandware/ftp-settings",
          "parameters": [
            {
              "name": "organization_id",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[ftp_setting]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "versions"
                ]
              }
            }
          ]
        },
        {
          "method": "POST",
          "path": "/:organization_id/demandware/ftp-settings",
          "parameters": [
            {
              "name": "organization_id",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "ftp_setting",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "io.flow.error.v0.models.generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "ftp_setting_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization_id/demandware/ftp-settings/:id",
          "parameters": [
            {
              "name": "organization_id",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "ftp_setting",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "PUT",
          "path": "/:organization_id/demandware/ftp-settings/:id",
          "parameters": [
            {
              "name": "organization_id",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "ftp_setting",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "ftp_setting",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "io.flow.error.v0.models.generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "ftp_setting_form",
            "attributes": []
          }
        },
        {
          "method": "DELETE",
          "path": "/:organization_id/demandware/ftp-settings/:id",
          "parameters": [
            {
              "name": "organization_id",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "io.flow.error.v0.models.generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": []
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/:organization_id/demandware/ftp-settings"
    },
    {
      "type": "harmonization_countries",
      "plural": "harmonization_countries",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/harmonization/countries",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "harmonization_countries",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [],
          "description": "Get harmonization countries of origin and destination countries"
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/:organization/harmonization/countries",
      "description": "List of countries of origin and destination countries"
    },
    {
      "type": "harmonization_statistics",
      "plural": "harmonization_statistics",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/harmonization/statistics",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "harmonization_statistics",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [],
          "description": "Get statistics for this organization's harmonization codes"
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/:organization/harmonization/statistics",
      "description": "Overall statistics for harmonized codes, specifying details for HS6 and HS10 codes"
    },
    {
      "type": "harmonization_summary",
      "plural": "harmonization_summaries",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/harmonization/summaries",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "origin",
              "type": "string",
              "location": "Query",
              "required": false
            },
            {
              "name": "destination",
              "type": "string",
              "location": "Query",
              "required": false
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[harmonization_summary]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "created_at"
                  },
                  {
                    "value": "origin"
                  },
                  {
                    "value": "destination"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "versions"
                ]
              }
            }
          ],
          "description": "Get harmonization summary for this organization's HS10 codes"
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/:organization/harmonization/summaries",
      "description": "Summary of Origin/Destination pairs and their associated HS10 code information"
    },
    {
      "type": "io.flow.common.v0.models.customer",
      "plural": "customers",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/customers",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "q",
              "type": "string",
              "location": "Query",
              "required": false,
              "example": "John Doe"
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[io.flow.common.v0.models.customer]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "versions"
                ]
              }
            }
          ],
          "description": "Returns customer information"
        },
        {
          "method": "GET",
          "path": "/:organization/customers/:number",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "number",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "io.flow.common.v0.models.customer",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Returns customer information for a specific number"
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/:organization/customers"
    },
    {
      "type": "io.flow.common.v0.models.user",
      "plural": "users",
      "operations": [
        {
          "method": "PUT",
          "path": "/internal/users/:id/status",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "io.flow.error.v0.models.generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Update the status of this particular user",
          "body": {
            "type": "user_status_form",
            "attributes": []
          }
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/internal/users"
    },
    {
      "type": "io.flow.external.paypal.v1.models.webhook_event",
      "plural": "webhook_events",
      "operations": [
        {
          "method": "POST",
          "path": "/payment/callbacks/paypal",
          "parameters": [],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "string",
              "description": "Successful response"
            }
          ],
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "response_codes"
                ]
              }
            }
          ],
          "body": {
            "type": "io.flow.external.paypal.v1.models.webhook_event",
            "attributes": []
          }
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/payment/callbacks"
    },
    {
      "type": "io.flow.fulfillment.v0.models.carrier",
      "plural": "carriers",
      "operations": [
        {
          "method": "GET",
          "path": "/carriers",
          "parameters": [
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "name"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[io.flow.fulfillment.v0.models.carrier]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  }
                ]
              }
            },
            {
              "name": "non-crud",
              "value": {}
            }
          ]
        },
        {
          "method": "POST",
          "path": "/carriers",
          "parameters": [],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "io.flow.fulfillment.v0.models.carrier",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "io.flow.error.v0.models.generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "carrier_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/carriers/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "io.flow.fulfillment.v0.models.carrier",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "PUT",
          "path": "/carriers/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "io.flow.fulfillment.v0.models.carrier",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "io.flow.fulfillment.v0.models.carrier",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "io.flow.error.v0.models.generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "carrier_form",
            "attributes": []
          }
        },
        {
          "method": "DELETE",
          "path": "/carriers/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "io.flow.error.v0.models.generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/carriers/versions",
          "parameters": [
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "carrier",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[carrier_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "io.flow.fulfillment.v0.models.carrier"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/carriers"
    },
    {
      "type": "io.flow.fulfillment.v0.models.service",
      "plural": "services",
      "operations": [
        {
          "method": "GET",
          "path": "/services",
          "parameters": [
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "name"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[io.flow.fulfillment.v0.models.service]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  }
                ]
              }
            },
            {
              "name": "non-crud",
              "value": {}
            }
          ]
        },
        {
          "method": "POST",
          "path": "/services",
          "parameters": [],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "io.flow.fulfillment.v0.models.service",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "io.flow.error.v0.models.generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "service_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/services/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "io.flow.fulfillment.v0.models.service",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "PUT",
          "path": "/services/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "io.flow.fulfillment.v0.models.service",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "io.flow.fulfillment.v0.models.service",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "io.flow.error.v0.models.generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "service_form",
            "attributes": []
          }
        },
        {
          "method": "DELETE",
          "path": "/services/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "io.flow.error.v0.models.generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/services/versions",
          "parameters": [
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "service",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[service_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "io.flow.fulfillment.v0.models.service"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/services"
    },
    {
      "type": "io.flow.harmonization.v0.models.hs10_code",
      "plural": "hs10_codes",
      "operations": [
        {
          "method": "PUT",
          "path": "/hs10_codes/harmonization/hints/phrase",
          "parameters": [],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "io.flow.harmonization.v0.models.hs10_code",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "io.flow.harmonization.v0.models.hs10_code",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "io.flow.error.v0.models.generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Add or update the code a phrase identifies for a country.",
          "body": {
            "type": "hs10_phrase_hint_form",
            "attributes": []
          }
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/hs10_codes"
    },
    {
      "type": "io.flow.payment.v0.models.refund",
      "plural": "refunds",
      "operations": [
        {
          "method": "POST",
          "path": "/:organization/refunds/:processor",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "processor",
              "type": "processor",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "io.flow.payment.v0.models.refund",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "io.flow.error.v0.models.generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Record a refund for an authorization that has already been refunded manually in the payment processor.",
          "body": {
            "type": "internal_refund_form",
            "attributes": []
          }
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/:organization/refunds/:processor"
    },
    {
      "type": "io.flow.reference.v0.models.country",
      "plural": "countries",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/reports/destinations/countries",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[io.flow.reference.v0.models.country]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "get",
                  "versions"
                ]
              }
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/:organization/reports/destinations/countries",
      "description": "Returns a list of distinct destination countries for the requested organization from all time."
    },
    {
      "type": "item_restriction",
      "plural": "item_restrictions",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/item-restrictions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "number",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "number"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[item_restriction]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "io.flow.error.v0.models.generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "number"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "get",
                  "sort_parameter_default",
                  "versions"
                ]
              }
            }
          ],
          "description": "Returns a list of restricted items and the regions in which they are restricted."
        },
        {
          "method": "POST",
          "path": "/:organization/item-restrictions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "[item_restriction]",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "io.flow.error.v0.models.generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Restricts all items corresponding with the provided numbers in the provided regions.",
          "body": {
            "type": "item_restriction_post_form",
            "attributes": []
          }
        },
        {
          "method": "PUT",
          "path": "/:organization/item-restrictions/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "item_restriction",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "io.flow.error.v0.models.generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "For the item restriction with the provided id, updates the regions in which the item restriction applies.",
          "body": {
            "type": "item_restriction_put_form",
            "attributes": []
          }
        },
        {
          "method": "DELETE",
          "path": "/:organization/item-restrictions/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Deletes an item restriction by id."
        },
        {
          "method": "PUT",
          "path": "/:organization/item-restrictions/item/:number",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "number",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "item_restriction",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "item_restriction",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "io.flow.error.v0.models.generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "For the item with the provided number, updates the regions in which the item restriction applies.",
          "body": {
            "type": "[string]",
            "attributes": [],
            "description": "An array of region ids in which to restrict the item associated with the provided number."
          }
        },
        {
          "method": "DELETE",
          "path": "/:organization/item-restrictions/item/:number",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "number",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Deletes an item restriction by item number."
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/:organization/item-restrictions",
      "description": "Represents a restricted item with the regions in which it is restricted."
    },
    {
      "type": "item_sales_margin",
      "plural": "item_sales_margins",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/experiences/:experience_key/sales-margins",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "experience_key",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "name"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[item_sales_margin]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "name"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "POST",
          "path": "/:organization/experiences/:experience_key/sales-margins",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "experience_key",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "item_sales_margin",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "io.flow.error.v0.models.generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "item_sales_margin_post_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/experiences/:experience_key/sales-margins/:key",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "experience_key",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "key",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "item_sales_margin",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "io.flow.error.v0.models.generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": []
        },
        {
          "method": "PUT",
          "path": "/:organization/experiences/:experience_key/sales-margins/:key",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "experience_key",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "key",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "item_sales_margin",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "io.flow.error.v0.models.generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "item_sales_margin_put_form",
            "attributes": []
          }
        },
        {
          "method": "DELETE",
          "path": "/:organization/experiences/:experience_key/sales-margins/:key",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "experience_key",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "key",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/:organization/experiences/:experience_key/sales-margins/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "experience_key",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[item_sales_margin_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/:organization/experiences/:experience_key",
      "description": "Defines a fixed and percent margin to apply to items matching a query after pricing functions like tax, duty or rounding have been applied."
    },
    {
      "type": "key",
      "plural": "keys",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/keys",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[key]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "get",
                  "versions"
                ]
              }
            }
          ]
        },
        {
          "method": "POST",
          "path": "/:organization/keys",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "key",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "response_codes"
                ]
              },
              "description": "422 not a required response since there is no body to validate."
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/:organization/keys",
      "description": "Represents the actual card encryption key"
    },
    {
      "type": "label_format",
      "plural": "label_formats",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/experiences/:key/formatting",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "key",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "io.flow.price.internal.v0.enums.label_format",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "io.flow.error.v0.models.generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Returns the selected price label formatting settings for this experience."
        },
        {
          "method": "PUT",
          "path": "/:organization/experiences/:key/formatting/options",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "key",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "io.flow.price.internal.v0.enums.label_format",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "io.flow.price.internal.v0.enums.label_format",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "io.flow.error.v0.models.generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Update formatting options for the experience with the specified key, creating default options if none exist.",
          "body": {
            "type": "io.flow.price.internal.v0.models.label_format_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/experiences/:key/formatting/options/:currency/:amount",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "key",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "currency",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "The currency in which to format the provided amount."
            },
            {
              "name": "amount",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "The amount to format.",
              "example": "1234.56"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "map[string]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "io.flow.error.v0.models.generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Returns a map of all possible labels with their matching configurations for the provided currency and amount."
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/:organization/experiences"
    },
    {
      "type": "lane",
      "plural": "lanes",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/harmonization/lanes",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "origin",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "The ISO-3166 2 or 3 character country code of the destination country"
            },
            {
              "name": "destination",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "The ISO-3166 2 or 3 character country code of the destination country"
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[lane]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "io.flow.error.v0.models.generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "sort",
                  "versions"
                ]
              }
            }
          ],
          "description": "Search lanes. Always paginated."
        },
        {
          "method": "POST",
          "path": "/:organization/harmonization/lanes",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "lane",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "io.flow.error.v0.models.generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "lane_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/harmonization/lanes/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "lane",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Returns information about a specific lane."
        },
        {
          "method": "DELETE",
          "path": "/:organization/harmonization/lanes/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Delete the specified lane"
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/:organization/harmonization/lanes",
      "description": "An organization can create 1 or more lanes which represent country pairs - e.g. country of origin to destination. This will enable an automated workflow such that whenever a classification request is created, we will automatically create detail records for each of these lanes."
    },
    {
      "type": "order_detail",
      "plural": "order_details",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/order-details",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "q",
              "type": "string",
              "location": "Query",
              "required": false,
              "example": "ord-123"
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[order_detail]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "versions"
                ]
              }
            }
          ],
          "description": "Returns order information"
        },
        {
          "method": "GET",
          "path": "/:organization/order-details/:number",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "number",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "order_detail",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Returns order information for a specific number"
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/:organization/order-details"
    },
    {
      "type": "order_revenue_region_chart",
      "plural": "order_revenue_region_charts",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/reports/revenue/regions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "regions",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "If specified, restricts the returned data specifically to the provided regions; otherwise, data for all regions is returned. A region represents a geographic area of the world. Regions can be countries, continents or other political areas (like the Eurozone). See https://api.flow.io/reference/regions.",
              "maximum": 100
            },
            {
              "name": "on_or_after",
              "type": "date-time-iso8601",
              "location": "Query",
              "required": false
            },
            {
              "name": "after",
              "type": "date-time-iso8601",
              "location": "Query",
              "required": false
            },
            {
              "name": "on_or_before",
              "type": "date-time-iso8601",
              "location": "Query",
              "required": false
            },
            {
              "name": "before",
              "type": "date-time-iso8601",
              "location": "Query",
              "required": false
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "order_revenue_region_chart",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/:organization/reports/revenue/regions"
    },
    {
      "type": "order_revenue_timeline_chart",
      "plural": "order_revenue_timeline_charts",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/reports/revenue/timeline",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "region",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "A region represents a geographic area of the world. Regions can be countries, continents or other political areas (like the Eurozone). See https://api.flow.io/reference/regions"
            },
            {
              "name": "on_or_after",
              "type": "date-time-iso8601",
              "location": "Query",
              "required": false
            },
            {
              "name": "after",
              "type": "date-time-iso8601",
              "location": "Query",
              "required": false
            },
            {
              "name": "on_or_before",
              "type": "date-time-iso8601",
              "location": "Query",
              "required": false
            },
            {
              "name": "before",
              "type": "date-time-iso8601",
              "location": "Query",
              "required": false
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "order_revenue_timeline_chart",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/:organization/reports/revenue/timeline"
    },
    {
      "type": "partner",
      "plural": "partners",
      "operations": [
        {
          "method": "POST",
          "path": "/internal/partners",
          "parameters": [],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "partner",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "io.flow.error.v0.models.generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "partner_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/internal/partners/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "partner",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "DELETE",
          "path": "/internal/partners/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/internal/partners",
      "description": "Resource to create or delete partners."
    },
    {
      "type": "partner_authorization",
      "plural": "partner_authorizations",
      "operations": [
        {
          "method": "POST",
          "path": "/partner-authorizations",
          "parameters": [],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "partner_authorization",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "io.flow.error.v0.models.generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "For the authorized user, if the specified partner exists, and the user is an active member of this partner, returns the authorization data used throughout APIs at Flow, including the user's role in that organization and the partner environment. Otherwise, returns 401 - this indicates either the org does not exist or the user does not have access to the partner.",
          "body": {
            "type": "partner_authorization_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/partner-authorizations/:partner",
          "parameters": [
            {
              "name": "partner",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "partner_authorization",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "For the authorized user and specific partner, if the user is an active member of this partner, returns the authorization data used throughout APIs at Flow, including the user's role in that partner and the partner environment."
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/partner-authorizations",
      "description": "Defines the data used for broad authorization of user access to partner level data"
    },
    {
      "type": "partner_membership",
      "plural": "partner_memberships",
      "operations": [
        {
          "method": "GET",
          "path": "/partners/:partner/memberships",
          "parameters": [
            {
              "name": "partner",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "user",
              "type": "string",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "role",
              "type": "[io.flow.common.v0.enums.role]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            },
            {
              "name": "expand",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "minimum": 0,
              "maximum": 1,
              "example": "user"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[partner_membership]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "user"
                  },
                  {
                    "value": "role"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "POST",
          "path": "/partners/:partner/memberships",
          "parameters": [
            {
              "name": "partner",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "partner_membership",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "io.flow.error.v0.models.generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "partner_membership_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/partners/:partner/memberships/:id",
          "parameters": [
            {
              "name": "partner",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "partner_membership",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "PUT",
          "path": "/partners/:partner/memberships/:id",
          "parameters": [
            {
              "name": "partner",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "partner_membership",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "io.flow.error.v0.models.generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "partner_membership_put_form",
            "attributes": []
          }
        },
        {
          "method": "DELETE",
          "path": "/partners/:partner/memberships/:id",
          "parameters": [
            {
              "name": "partner",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "io.flow.error.v0.models.generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/partners/:partner/memberships/versions",
          "parameters": [
            {
              "name": "partner",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "membership",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "user",
              "type": "string",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[partner_membership_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "membership"
                  },
                  {
                    "value": "user"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/partners/:partner/memberships",
      "description": "Resource to create, update, or delete user memberships in partners"
    },
    {
      "type": "partner_organization_authorization",
      "plural": "partner_organization_authorizations",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/partner-organization-authorizations",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "partner",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[partner_organization_authorization]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "io.flow.error.v0.models.generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "partner"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "get",
                  "versions"
                ]
              }
            }
          ]
        },
        {
          "method": "POST",
          "path": "/:organization/partner-organization-authorizations",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "partner_organization_authorization",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "io.flow.error.v0.models.generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "partner_organization_authorization_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/partner-organization-authorizations/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "partner_organization_authorization",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "DELETE",
          "path": "/:organization/partner-organization-authorizations/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/:organization/partner-organization-authorizations",
      "description": "Organization-initiated authorization for a partner to make requests on its behalf"
    },
    {
      "type": "passphrase",
      "plural": "passphrases",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/passphrases",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "tribe",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Filter to passphrases for this tribe"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[passphrase_summary]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "get",
                  "versions"
                ]
              }
            }
          ]
        },
        {
          "method": "POST",
          "path": "/:organization/passphrases",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "passphrase_summary",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "io.flow.error.v0.models.generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Creates a new passphrase for a given tribe",
          "body": {
            "type": "passphrase_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/passphrases/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "passphrase_summary",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "POST",
          "path": "/:organization/passphrases/:id/authentications",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "io.flow.error.v0.models.generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "versions"
                ]
              }
            }
          ],
          "description": "Used to provide the cleartext password for a given passphrase",
          "body": {
            "type": "authentication_form",
            "attributes": []
          }
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/:organization/passphrases",
      "description": "Returns a list of all of passphrases that are currently defined."
    },
    {
      "type": "screen",
      "plural": "screens",
      "operations": [
        {
          "method": "PUT",
          "path": "/screens/:key",
          "parameters": [
            {
              "name": "key",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "[screen]",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "io.flow.error.v0.models.generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "get",
                  "versions"
                ]
              }
            }
          ],
          "description": "Provides a list of screens given a query 'q' and optional countries parameter to search on a specified list of countries.",
          "body": {
            "type": "screen_form",
            "attributes": []
          }
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/screens"
    },
    {
      "type": "search_item_hs10_code",
      "plural": "search_item_hs10_codes",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/harmonization/codes/hs10",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "number",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "origin",
              "type": "string",
              "location": "Query",
              "required": false
            },
            {
              "name": "destination",
              "type": "string",
              "location": "Query",
              "required": false
            },
            {
              "name": "has_codes",
              "type": "boolean",
              "location": "Query",
              "required": false
            },
            {
              "name": "has_origins",
              "type": "boolean",
              "location": "Query",
              "required": false
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[search_item_hs10_code]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "created_at"
                  },
                  {
                    "value": "origin"
                  },
                  {
                    "value": "destination"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "versions"
                ]
              }
            }
          ],
          "description": "Get 10-digit harmonization codes"
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/:organization/harmonization/codes/hs10",
      "description": "Associated item information for an HS10 code"
    },
    {
      "type": "search_item_hs6_code",
      "plural": "search_item_hs6_codes",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/harmonization/codes/hs6",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "number",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "has_codes",
              "type": "boolean",
              "location": "Query",
              "required": false
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[search_item_hs6_code]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "created_at"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "versions"
                ]
              }
            }
          ],
          "description": "Get 6-digit harmonization codes"
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/:organization/harmonization/codes/hs6",
      "description": "Associated item information for an HS6 code"
    },
    {
      "type": "shop",
      "plural": "shops",
      "operations": [
        {
          "method": "GET",
          "path": "/shopify/shops/:myshopify_domain",
          "parameters": [
            {
              "name": "myshopify_domain",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "shop",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "PUT",
          "path": "/shopify/shops/:myshopify_domain",
          "parameters": [
            {
              "name": "myshopify_domain",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "shop",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "io.flow.error.v0.models.generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "shop_form",
            "attributes": []
          }
        },
        {
          "method": "DELETE",
          "path": "/shopify/shops/:myshopify_domain",
          "parameters": [
            {
              "name": "myshopify_domain",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "POST",
          "path": "/shopify/shops/:myshopify_domain/install",
          "parameters": [
            {
              "name": "myshopify_domain",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "shop",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "shop",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "io.flow.error.v0.models.generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "install_form",
            "attributes": []
          }
        },
        {
          "method": "POST",
          "path": "/shopify/shops/:myshopify_domain/sessions",
          "parameters": [
            {
              "name": "myshopify_domain",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "io.flow.session.v0.models.organization_session",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "io.flow.error.v0.models.generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "response_codes"
                ]
              },
              "description": "401 not a required response since operation is anonymously authenticated."
            }
          ],
          "body": {
            "type": "io.flow.session.v0.models.session_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/shopify/shops/redirects/:app/order",
          "parameters": [
            {
              "name": "app",
              "type": "flow_app",
              "location": "Path",
              "required": true
            },
            {
              "name": "shop",
              "type": "string",
              "location": "Query",
              "required": true,
              "description": "The myshopify_domain for the shop. Parameter name is set by shopify"
            },
            {
              "name": "id",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The shopify order id. Parameter name is set by shopify"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 303
                }
              },
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "response_codes",
                  "common_parameters_have_no_description"
                ]
              }
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/shopify/shops"
    },
    {
      "type": "shopify_cart",
      "plural": "shopify_carts",
      "operations": [
        {
          "method": "GET",
          "path": "/shopify/carts/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "shopify_cart",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [],
          "description": "Retrieve representation of a Shopify cart given the unique cart id."
        },
        {
          "method": "GET",
          "path": "/shopify/carts/:id.html",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "string",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [],
          "description": "Retrieve representation of a Shopify cart given the unique cart id."
        },
        {
          "method": "POST",
          "path": "/shopify/carts/:id/add",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "shopify_cart",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "shopify_cart",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "io.flow.error.v0.models.generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Add an item to a Shopify cart given the unique cart id.",
          "body": {
            "type": "shopify_cart_add_form",
            "attributes": []
          }
        },
        {
          "method": "POST",
          "path": "/shopify/carts/:id/change",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "shopify_cart",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "io.flow.error.v0.models.generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Change/Update an item in a Shopify cart given the unique cart id.",
          "body": {
            "type": "shopify_cart_change_form",
            "attributes": []
          }
        },
        {
          "method": "POST",
          "path": "/shopify/carts/:id/clear",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "shopify_cart",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "io.flow.error.v0.models.generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Remove all cart items given the unique cart id ."
        },
        {
          "method": "PUT",
          "path": "/shopify/carts/:id/geo",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "shopify_cart",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "io.flow.error.v0.models.generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Update the geo information for the cart.",
          "body": {
            "type": "geo_form",
            "attributes": []
          }
        },
        {
          "method": "POST",
          "path": "/shopify/carts/:id/orders",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            },
            {
              "name": "expand",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "minimum": 0,
              "maximum": 1,
              "example": "experience"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "io.flow.experience.v0.models.order",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "io.flow.error.v0.models.generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Create an order from a cart."
        },
        {
          "method": "PUT",
          "path": "/shopify/carts/:id/promotion",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "shopify_cart",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "io.flow.error.v0.models.generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Set the promotion code on the cart - shopify only supports up to 1 promotion code. If the cart already had another promotion code, replaces that code with the provided one.",
          "body": {
            "type": "shopify_promotion_form",
            "attributes": []
          }
        },
        {
          "method": "DELETE",
          "path": "/shopify/carts/:id/promotion",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "shopify_cart",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "io.flow.error.v0.models.generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "If the cart has a promotion code applied to it, removes that promotion code"
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/shopify/carts",
      "description": "Cart actions are based off the Shopify Ajax API, documentation at https://help.shopify.com/themes/development/getting-started/using-ajax-api"
    },
    {
      "type": "shopify_localized_variant",
      "plural": "shopify_localized_variants",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/shopify/localized/variants/experience/:experience_key/map",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "experience_key",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "variant_id",
              "type": "[long]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "handle",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "currency",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "If you provide a currency, the returned variants will be priced in that currency. ISO 4217 3 currency code as defined in https://api.flow.io/reference/currencies",
              "example": "CAD"
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "map[shopify_localized_variant]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "io.flow.error.v0.models.generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "-created_at"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "common_parameter_types",
                  "versions"
                ]
              },
              "description": "id is a long in shopify"
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/:organization/shopify/localized/variants",
      "description": "Provides localized information for the specified variants, returning the information as a map where the variant ids are the keys"
    },
    {
      "type": "shopify_order_detail",
      "plural": "shopify_order_details",
      "operations": [
        {
          "method": "POST",
          "path": "/:organization/shopify/orders/:number/authorizations",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "number",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "expand",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "minimum": 0,
              "maximum": 1,
              "example": "experience"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "shopify_order_authorization",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "io.flow.error.v0.models.generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "deprecation": {
            "description": "Use /:number/submissions endpoint which will take an optional authorization form (allowing the submission of $0 orders)"
          },
          "body": {
            "type": "io.flow.payment.v0.unions.authorization_form",
            "attributes": []
          }
        },
        {
          "method": "POST",
          "path": "/:organization/shopify/orders/:number/codes",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "number",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "shopify_order_detail",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "io.flow.error.v0.models.generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Based on the code, determine if a gift card or promotion is applied to the order.  Attempt will be made to first validate and apply code as a gift card.  If not applicable, attempt to validate and apply the code as a promotion.  This endpoint achieves the same behavior as calling '/payments/gift-card' followed by /promotion.",
          "body": {
            "type": "shopify_code_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/shopify/orders/:number/contents",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "number",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "shopify_order_content",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "POST",
          "path": "/:organization/shopify/orders/:number/payments/gift-card",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "number",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "shopify_order_detail",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "io.flow.error.v0.models.generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Apply gift card payment on the order. A gift card can be applied at most once per order.",
          "body": {
            "type": "shopify_gift_card_payment_form",
            "attributes": []
          }
        },
        {
          "method": "PUT",
          "path": "/:organization/shopify/orders/:number/promotion",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "number",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "shopify_order_detail",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "io.flow.error.v0.models.generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Set the promotion code on the cart - shopify only supports up to 1 promotion code. If the cart already had another promotion code, replaces that code with the provided one.",
          "body": {
            "type": "shopify_promotion_form",
            "attributes": []
          }
        },
        {
          "method": "DELETE",
          "path": "/:organization/shopify/orders/:number/promotion",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "number",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "shopify_order_detail",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "io.flow.error.v0.models.generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "If the cart has a promotion code applied to it, removes that promotion code"
        },
        {
          "method": "POST",
          "path": "/:organization/shopify/orders/:number/submissions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "number",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "expand",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "minimum": 0,
              "maximum": 1,
              "example": "experience"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "shopify_order_authorization",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "io.flow.error.v0.models.generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Submits an order, creating the order in shopify, authorizing payment if provided, and returning the results",
          "body": {
            "type": "order_submission_form",
            "attributes": []
          }
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/:organization/shopify/orders",
      "description": "Returns full details of the order, including additional information common to things like confirmation pages"
    },
    {
      "type": "shopify_webhook_event",
      "plural": "shopify_webhook_events",
      "operations": [
        {
          "method": "POST",
          "path": "/shopify/webhook/events/shops/:shopify_shop_id/:topic/:action",
          "parameters": [
            {
              "name": "shopify_shop_id",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "topic",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "action",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "io.flow.error.v0.models.generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "response_codes"
                ]
              },
              "description": "401 not a required response since operation is anonymously authenticated."
            }
          ],
          "body": {
            "type": "object",
            "attributes": []
          }
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/shopify/webhook/events/shops/:shopify_shop_id",
      "description": "Receives the payload from shopify webhooks"
    },
    {
      "type": "spot_rate",
      "plural": "spot_rates",
      "operations": [
        {
          "method": "GET",
          "path": "/internal/currency/spot-rates",
          "parameters": [
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "base",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Filter by the (case-insensitive) base currency's ISO 4217 3-character code as defined in https://api.flow.io/reference/currencies"
            },
            {
              "name": "target",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Filter by the (case-insensitive) target currency's ISO 4217 3-character code as defined in https://api.flow.io/reference/currencies"
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[spot_rate]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "base"
                  },
                  {
                    "value": "target"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            }
          ],
          "description": "Search spot rates. Always paginated."
        },
        {
          "method": "GET",
          "path": "/internal/currency/spot-rates/versions",
          "parameters": [
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[spot_rate_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "base"
                  },
                  {
                    "value": "target"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ],
          "description": "Provides visibility into recent changes of each object, including deletion."
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/internal/currency/spot-rates"
    },
    {
      "type": "tribe",
      "plural": "tribes",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/tribes",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[tribe]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "get",
                  "versions"
                ]
              }
            }
          ],
          "description": "List all tribes. There is no pagination as number of tribes is small."
        },
        {
          "method": "GET",
          "path": "/:organization/tribes/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "tribe",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/:organization/tribes",
      "description": "Tribes are read only. This resource allows you to view information on the globally configured tribes."
    },
    {
      "type": "user_one_time_token",
      "plural": "user_one_time_tokens",
      "operations": [
        {
          "method": "POST",
          "path": "/users/tokens",
          "parameters": [],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "user_one_time_token",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "response_codes"
                ]
              },
              "description": "422 not a required response since there is no body to validate."
            }
          ],
          "description": "Create a one time token to represent the authenticated user. Token is valid for 30 seconds."
        },
        {
          "method": "POST",
          "path": "/users/tokens/redeem",
          "parameters": [],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "io.flow.common.v0.models.user",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "unit",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "response_codes"
                ]
              },
              "description": "401 not a required response since operation is anonymously authenticated."
            }
          ],
          "description": "Retrieves a user if the token is valid. Once called, the token is immediately invalidated and cannot be used again.",
          "body": {
            "type": "one_time_token_redemption_form",
            "attributes": []
          }
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/users/tokens",
      "description": "Defines a one-time, expiring token that can be used to lookup user data. Useful for implementing SSO systems using a one time handoff."
    }
  ],
  "attributes": []
}
