{
  "apidoc": {
    "version": "0.12.8"
  },
  "name": "API",
  "organization": {
    "key": "flow"
  },
  "application": {
    "key": "api"
  },
  "namespace": "io.flow.v0",
  "version": "0.3.28",
  "info": {
    "license": {
      "name": "MIT",
      "url": "http://opensource.org/licenses/MIT"
    },
    "contact": {
      "email": "tech@flow.io"
    }
  },
  "headers": [],
  "imports": [],
  "enums": [
    {
      "name": "adjustment_reason_key",
      "plural": "adjustment_reason_keys",
      "values": [
        {
          "name": "duty_deminimis",
          "attributes": [],
          "description": "If the duty de minimis value has not been met, an adjustment may be made to offset any previously calculated duty."
        },
        {
          "name": "vat_deminimis",
          "attributes": [],
          "description": "If the VAT de minimis value has not been met, an adjustment may be made to offset any previously calculated VAT."
        }
      ],
      "attributes": [],
      "description": "The key of each possible adjustment is defined here."
    },
    {
      "name": "attribute_data_type",
      "plural": "attribute_data_types",
      "values": [
        {
          "name": "decimal",
          "attributes": [],
          "description": "Decimal datatype without size or precision restrictions. Commonly used for currency values."
        },
        {
          "name": "string",
          "attributes": [],
          "description": "Unvalidated string of characters."
        }
      ],
      "attributes": [],
      "description": "Used to tag attributes with a data type so they are properly validated."
    },
    {
      "name": "attribute_intent",
      "plural": "attribute_intents",
      "values": [
        {
          "name": "fulfillment_method",
          "attributes": [],
          "description": "Attributes with this data type imply whether delivery is a package or digital good."
        },
        {
          "name": "price",
          "attributes": [],
          "description": "Attributes with this data type are inferred to be prices in the organization's base currency and will be localized based on each Experience's pricing policy."
        },
        {
          "name": "taxability",
          "attributes": [],
          "description": "Attributes with this data type imply whether taxes are applicable to an item."
        }
      ],
      "attributes": [],
      "description": "Used to tag attributes as having a specific meaning that can affect processing."
    },
    {
      "name": "authorization_decline_code",
      "plural": "authorization_decline_codes",
      "values": [
        {
          "name": "expired",
          "attributes": [],
          "description": "Payment method has expired"
        },
        {
          "name": "invalid_name",
          "attributes": [],
          "description": "Invalid card holder name"
        },
        {
          "name": "invalid_number",
          "attributes": [],
          "description": "Invalid payment number"
        },
        {
          "name": "invalid_expiration",
          "attributes": [],
          "description": "Invalid expiration date"
        },
        {
          "name": "no_account",
          "attributes": [],
          "description": "The provided payment method is not known by the issuing bank (the account does not exist)"
        },
        {
          "name": "avs",
          "attributes": [],
          "description": "Declined due to avs mismatch)"
        },
        {
          "name": "cvv",
          "attributes": [],
          "description": "Declined due to cvv mismatch)"
        },
        {
          "name": "fraud",
          "attributes": [],
          "description": "Declined due to suspected fraud"
        },
        {
          "name": "duplicate",
          "attributes": [],
          "description": "Declined due to suspected duplicate transaction"
        },
        {
          "name": "not_supported",
          "attributes": [],
          "description": "Declined as payment method is not supported"
        },
        {
          "name": "unknown",
          "attributes": [],
          "description": "Declined due to another reason (details not known)"
        }
      ],
      "attributes": [],
      "description": "Contains details related to the reason for which an authorization was declined."
    },
    {
      "name": "authorization_delete_error_code",
      "plural": "authorization_delete_error_codes",
      "values": [
        {
          "name": "expired",
          "attributes": [],
          "description": "Payment authorization has expired"
        },
        {
          "name": "captured",
          "attributes": [],
          "description": "Payment authorization has already been captured. Please create a refund."
        },
        {
          "name": "unknown",
          "attributes": [],
          "description": "Failed due to another reason (details not known)"
        }
      ],
      "attributes": [],
      "description": "Contains details related to the reason for which a cancel failed."
    },
    {
      "name": "authorization_option",
      "plural": "authorization_options",
      "values": [
        {
          "name": "store_card",
          "attributes": [],
          "description": "If set, and the authorization is created using a one time nonce, we automatically tokenize and store the card. In these cases you will want to store the new card token in the authorization response (card object)"
        }
      ],
      "attributes": [],
      "description": "Specifies optional behaviors that can be applied during an authorization"
    },
    {
      "name": "authorization_status",
      "plural": "authorization_statuses",
      "values": [
        {
          "name": "pending",
          "attributes": [],
          "description": "If an immediate response is not available, the state will be 'pending' - this usually indicates fraud review requires additional time / verification (or a potential network issue with the issuing bank)"
        },
        {
          "name": "pending_call_bank",
          "attributes": [],
          "description": "Bank is requesting consumer contact them directly to authorize the transaction"
        },
        {
          "name": "authorized",
          "attributes": [],
          "description": "Authorization was successful"
        },
        {
          "name": "declined",
          "attributes": [],
          "description": "Indicates the authorization has been declined by the issuing bank. See the authorization decline code for more details as to the reason for decline."
        },
        {
          "name": "voided",
          "attributes": [],
          "description": "Indicates the authorization has been voided. You can void an authorization up until the moment you capture funds; once you have captured funds you must create refunds."
        }
      ],
      "attributes": []
    },
    {
      "name": "avs_code",
      "plural": "avs_codes",
      "values": [
        {
          "name": "match",
          "attributes": [],
          "description": "Full match"
        },
        {
          "name": "partial",
          "attributes": [],
          "description": "Partial match; see details in 'avs' model to undestand which components matched"
        },
        {
          "name": "unsupported",
          "attributes": [],
          "description": "Issuer does not support address verification"
        },
        {
          "name": "no_match",
          "attributes": [],
          "description": "Address does not match expected card values"
        }
      ],
      "attributes": []
    },
    {
      "name": "calendar",
      "plural": "calendars",
      "values": [
        {
          "name": "weekdays",
          "attributes": [],
          "description": "Mon - Fri"
        },
        {
          "name": "everyday",
          "attributes": [],
          "description": "7 days per week"
        }
      ],
      "attributes": []
    },
    {
      "name": "capability",
      "plural": "capabilities",
      "values": [
        {
          "name": "crossdock",
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "capture_decline_code",
      "plural": "capture_decline_codes",
      "values": [
        {
          "name": "expired",
          "attributes": [],
          "description": "Payment authorization has expired"
        },
        {
          "name": "insufficient_funds",
          "attributes": [],
          "description": "The amount to capture exceeded the amount authorized and not yet captured"
        },
        {
          "name": "unknown",
          "attributes": [],
          "description": "Failed due to another reason (details not known)"
        }
      ],
      "attributes": [],
      "description": "Contains details related to the reason for which a capture failed."
    },
    {
      "name": "card_error_code",
      "plural": "card_error_codes",
      "values": [
        {
          "name": "invalid_address",
          "attributes": [],
          "description": "Invalid billing address"
        },
        {
          "name": "invalid_name",
          "attributes": [],
          "description": "Invalid cardholder name"
        },
        {
          "name": "invalid_number",
          "attributes": [],
          "description": "Invalid payment number"
        },
        {
          "name": "invalid_expiration",
          "attributes": [],
          "description": "Invalid expiration date"
        },
        {
          "name": "avs",
          "attributes": [],
          "description": "Declined due to avs mismatch"
        },
        {
          "name": "cvv",
          "attributes": [],
          "description": "Declined due to cvv mismatch"
        },
        {
          "name": "fraud",
          "attributes": [],
          "description": "Declined due to suspected fraud"
        },
        {
          "name": "unknown",
          "attributes": [],
          "description": "Declined due to another reason (details not known)"
        }
      ],
      "attributes": []
    },
    {
      "name": "card_type",
      "plural": "card_types",
      "values": [
        {
          "name": "american_express",
          "attributes": []
        },
        {
          "name": "cartes_bancaires",
          "attributes": []
        },
        {
          "name": "china_union_pay",
          "attributes": []
        },
        {
          "name": "dankort",
          "attributes": []
        },
        {
          "name": "diners_club",
          "attributes": []
        },
        {
          "name": "discover",
          "attributes": []
        },
        {
          "name": "jcb",
          "attributes": []
        },
        {
          "name": "maestro",
          "attributes": []
        },
        {
          "name": "mastercard",
          "attributes": []
        },
        {
          "name": "visa",
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "change_type",
      "plural": "change_types",
      "values": [
        {
          "name": "insert",
          "attributes": []
        },
        {
          "name": "update",
          "attributes": []
        },
        {
          "name": "delete",
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "credit_payment_error_code",
      "plural": "credit_payment_error_codes",
      "values": [
        {
          "name": "generic_error",
          "attributes": []
        },
        {
          "name": "invalid_order_number",
          "attributes": [],
          "description": "Indicates the specified order does not exist"
        },
        {
          "name": "invalid_currency",
          "attributes": [],
          "description": "Indicates that the specified currency code is not valid"
        },
        {
          "name": "invalid_description",
          "attributes": [],
          "description": "Indicates that the description is invalid (must be non-empty)"
        },
        {
          "name": "duplicate",
          "attributes": [],
          "description": "Indicates that a credit payment with the specified key already exists"
        },
        {
          "name": "amount_must_be_positive",
          "attributes": [],
          "description": "Indicates the provided credit amount was <= 0"
        },
        {
          "name": "amount_exceeds_balance",
          "attributes": [],
          "description": "Indicates the provided credit amount exceeds the remaining balance on the order"
        }
      ],
      "attributes": []
    },
    {
      "name": "cvv_code",
      "plural": "cvv_codes",
      "values": [
        {
          "name": "match",
          "attributes": [],
          "description": "CVV matches"
        },
        {
          "name": "suspicious",
          "attributes": [],
          "description": "CVV did not match; Transaction is possibly fraudulent"
        },
        {
          "name": "unsupported",
          "attributes": [],
          "description": "CVV did not match; Issuer does not support card verification numbers"
        },
        {
          "name": "no_match",
          "attributes": [],
          "description": "CVV did not match; Specific reason not available"
        }
      ],
      "attributes": []
    },
    {
      "name": "day_of_week",
      "plural": "day_of_weeks",
      "values": [
        {
          "name": "sunday",
          "attributes": []
        },
        {
          "name": "monday",
          "attributes": []
        },
        {
          "name": "tuesday",
          "attributes": []
        },
        {
          "name": "wednesday",
          "attributes": []
        },
        {
          "name": "thursday",
          "attributes": []
        },
        {
          "name": "friday",
          "attributes": []
        },
        {
          "name": "saturday",
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "delivered_duty",
      "plural": "delivered_duties",
      "values": [
        {
          "name": "paid",
          "attributes": [],
          "description": "Delivered Duty Paid (DDP). See https://en.wikipedia.org/wiki/Incoterms for more information"
        },
        {
          "name": "unpaid",
          "attributes": [],
          "description": "Delivered Duty Unpaid (DDU). See https://en.wikipedia.org/wiki/Incoterms for more information"
        }
      ],
      "attributes": []
    },
    {
      "name": "direction",
      "plural": "directions",
      "values": [
        {
          "name": "outbound",
          "attributes": [],
          "description": "Outbound shipment to typically fulfill a customer order"
        },
        {
          "name": "return",
          "attributes": [],
          "description": "Inbound or return shipment"
        }
      ],
      "attributes": []
    },
    {
      "name": "environment",
      "plural": "environments",
      "values": [
        {
          "name": "sandbox",
          "attributes": [],
          "description": "In sandbox, no external services (e.g. orders, payments, logistics) will generate real transactions"
        },
        {
          "name": "production",
          "attributes": [],
          "description": "In production, all external services are live and will generate real transactions"
        }
      ],
      "attributes": []
    },
    {
      "name": "event_type",
      "plural": "event_types",
      "values": [
        {
          "name": "attribute_upserted",
          "attributes": []
        },
        {
          "name": "attribute_deleted",
          "attributes": []
        },
        {
          "name": "catalog_upserted",
          "attributes": []
        },
        {
          "name": "catalog_deleted",
          "attributes": []
        },
        {
          "name": "subcatalog_upserted",
          "attributes": []
        },
        {
          "name": "subcatalog_deleted",
          "attributes": []
        },
        {
          "name": "catalog_item_upserted",
          "attributes": []
        },
        {
          "name": "catalog_item_deleted",
          "attributes": []
        },
        {
          "name": "subcatalog_item_upserted",
          "attributes": []
        },
        {
          "name": "subcatalog_item_deleted",
          "attributes": []
        },
        {
          "name": "rate_deleted",
          "attributes": []
        },
        {
          "name": "rate_upserted",
          "attributes": []
        },
        {
          "name": "available_promotions_upserted",
          "attributes": []
        },
        {
          "name": "available_promotions_deleted",
          "attributes": []
        },
        {
          "name": "allocation_deleted",
          "attributes": []
        },
        {
          "name": "allocation_upserted",
          "attributes": []
        },
        {
          "name": "experience_deleted",
          "attributes": []
        },
        {
          "name": "experience_upserted",
          "attributes": []
        },
        {
          "name": "item_margin_deleted",
          "attributes": []
        },
        {
          "name": "item_margin_upserted",
          "attributes": []
        },
        {
          "name": "item_sales_margin_deleted",
          "attributes": []
        },
        {
          "name": "item_sales_margin_upserted",
          "attributes": []
        },
        {
          "name": "label_format_deleted",
          "attributes": []
        },
        {
          "name": "label_format_upserted",
          "attributes": []
        },
        {
          "name": "order_deleted",
          "attributes": []
        },
        {
          "name": "order_upserted",
          "attributes": []
        },
        {
          "name": "order_identifier_deleted",
          "attributes": []
        },
        {
          "name": "order_identifier_upserted",
          "attributes": []
        },
        {
          "name": "pricing_deleted",
          "attributes": []
        },
        {
          "name": "pricing_upserted",
          "attributes": []
        },
        {
          "name": "tier_upserted",
          "attributes": []
        },
        {
          "name": "tier_deleted",
          "attributes": []
        },
        {
          "name": "hs6_code_upserted",
          "attributes": []
        },
        {
          "name": "hs6_code_deleted",
          "attributes": []
        },
        {
          "name": "hs10_code_upserted",
          "attributes": []
        },
        {
          "name": "hs10_code_deleted",
          "attributes": []
        },
        {
          "name": "item_origin_upserted",
          "attributes": []
        },
        {
          "name": "item_origin_deleted",
          "attributes": []
        },
        {
          "name": "harmonized_item_upserted",
          "attributes": []
        },
        {
          "name": "harmonized_item_deleted",
          "attributes": []
        },
        {
          "name": "snapshot_upserted",
          "attributes": []
        },
        {
          "name": "snapshot_deleted",
          "attributes": []
        },
        {
          "name": "label_upserted",
          "attributes": []
        },
        {
          "name": "notification_upserted",
          "attributes": []
        },
        {
          "name": "notification_deleted",
          "attributes": []
        },
        {
          "name": "localized_item_upserted",
          "attributes": []
        },
        {
          "name": "localized_item_deleted",
          "attributes": []
        },
        {
          "name": "localized_item_snapshot",
          "attributes": []
        },
        {
          "name": "membership_upserted",
          "attributes": []
        },
        {
          "name": "membership_deleted",
          "attributes": []
        },
        {
          "name": "organization_upserted",
          "attributes": []
        },
        {
          "name": "organization_deleted",
          "attributes": []
        },
        {
          "name": "authorization_upserted",
          "attributes": []
        },
        {
          "name": "authorization_deleted",
          "attributes": []
        },
        {
          "name": "authorization_deleted_v2",
          "attributes": []
        },
        {
          "name": "authorization_status_changed",
          "attributes": []
        },
        {
          "name": "card_authorization_upserted",
          "attributes": []
        },
        {
          "name": "card_authorization_upserted_v2",
          "attributes": []
        },
        {
          "name": "online_authorization_upserted",
          "attributes": []
        },
        {
          "name": "online_authorization_upserted_v2",
          "attributes": []
        },
        {
          "name": "capture_upserted",
          "attributes": []
        },
        {
          "name": "capture_upserted_v2",
          "attributes": []
        },
        {
          "name": "card_upserted",
          "attributes": []
        },
        {
          "name": "card_upserted_v2",
          "attributes": []
        },
        {
          "name": "card_deleted",
          "attributes": []
        },
        {
          "name": "payment_upserted",
          "attributes": []
        },
        {
          "name": "payment_deleted",
          "attributes": []
        },
        {
          "name": "refund_upserted",
          "attributes": []
        },
        {
          "name": "refund_upserted_v2",
          "attributes": []
        },
        {
          "name": "return_upserted",
          "attributes": []
        },
        {
          "name": "return_deleted",
          "attributes": []
        },
        {
          "name": "targeting_item_upserted",
          "attributes": []
        },
        {
          "name": "targeting_item_deleted",
          "attributes": []
        },
        {
          "name": "tracking_label_event_upserted",
          "attributes": []
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "webhook"
          }
        }
      ]
    },
    {
      "name": "exception_type",
      "plural": "exception_types",
      "values": [
        {
          "name": "open",
          "attributes": []
        },
        {
          "name": "closed",
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "experience_payment_method_tag",
      "plural": "experience_payment_method_tags",
      "values": [
        {
          "name": "display",
          "attributes": [],
          "description": "A displayed payment method will be highlighted during the checkout process for an experience."
        }
      ],
      "attributes": []
    },
    {
      "name": "export_status",
      "plural": "export_statuses",
      "values": [
        {
          "name": "created",
          "attributes": []
        },
        {
          "name": "processing",
          "attributes": []
        },
        {
          "name": "completed",
          "attributes": []
        },
        {
          "name": "failed",
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Export status is a finite state machine with valid transitions of created to processing, processing to completed or failed"
    },
    {
      "name": "flow_field_name",
      "plural": "flow_field_names",
      "values": [
        {
          "name": "item-number",
          "attributes": [],
          "description": "The Flow catalog item number"
        },
        {
          "name": "sku-attribute",
          "attributes": [],
          "description": "A Flow catalog attribute named 'sku'"
        },
        {
          "name": "product_id-attribute",
          "attributes": [],
          "description": "A Flow catalog attribute named 'product_id'"
        }
      ],
      "attributes": [],
      "description": "Describes the field in a Flow catalog that will be used to link to an incoming catalog feed. Failure to link an incoming feed item to a Flow catalog item will cause that item to be removed from localized feeds."
    },
    {
      "name": "fulfillment_method_type",
      "plural": "fulfillment_method_types",
      "values": [
        {
          "name": "fulfillment_method",
          "attributes": [],
          "description": "Indicates how an item will be shipped or fulfilled.  Acceptable values are defined by the 'fulfillment_method_value' enum."
        }
      ],
      "attributes": [],
      "description": "Used to indicate an item's fulfillment method type."
    },
    {
      "name": "fulfillment_method_value",
      "plural": "fulfillment_method_values",
      "values": [
        {
          "name": "digital",
          "attributes": [],
          "description": "Indicates item will be fulfilled digitally and no shipment is required (e.g. Gift Card)."
        },
        {
          "name": "physical",
          "attributes": [],
          "description": "Indicates item will be shipped in a phystical package."
        }
      ],
      "attributes": [],
      "description": "Used to indicate an item's fulfillment method values."
    },
    {
      "name": "generic_error_code",
      "plural": "generic_error_codes",
      "values": [
        {
          "name": "generic_error",
          "attributes": [],
          "description": "Generic errors are the default type. The accompanying message will provide details on the failure."
        },
        {
          "name": "client_error",
          "attributes": [],
          "description": "A client error has occurred. This represents a misconfiguration of the client"
        },
        {
          "name": "server_error",
          "attributes": [],
          "description": "A server error has occurred. The Flow tech team is automatically notified of all server errors"
        }
      ],
      "attributes": []
    },
    {
      "name": "holiday_calendar",
      "plural": "holiday_calendars",
      "values": [
        {
          "name": "us_bank_holidays",
          "attributes": []
        },
        {
          "name": "jewish_holidays",
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "import_type",
      "plural": "import_types",
      "values": [
        {
          "name": "harmonization_codes",
          "attributes": [],
          "description": "Provides upload of HS-6 and HS-10 codes for the items in a catalog"
        }
      ],
      "attributes": []
    },
    {
      "name": "included_levy_key",
      "plural": "included_levy_keys",
      "values": [
        {
          "name": "duty",
          "attributes": []
        },
        {
          "name": "vat",
          "attributes": []
        },
        {
          "name": "vat_and_duty",
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "The key of each possible localized price note is defined here."
    },
    {
      "name": "incoming_feed_format",
      "plural": "incoming_feed_formats",
      "values": [
        {
          "name": "google-xml",
          "attributes": [],
          "description": "Google RSS-like product catalog feed"
        },
        {
          "name": "google-sheet",
          "attributes": [],
          "description": "Google Sheet-based product catalog feed"
        }
      ],
      "attributes": [],
      "description": "Describes types of feeds that may be ingested by Flow for augmentation."
    },
    {
      "name": "incoming_field_name",
      "plural": "incoming_field_names",
      "values": [
        {
          "name": "id",
          "attributes": [],
          "description": "The id field of the incoming feed"
        },
        {
          "name": "mpn",
          "attributes": [],
          "description": "The Manufacturer's Product Number (MPN) field of the incoming feed"
        }
      ],
      "attributes": [],
      "description": "Describes the field in an incoming catalog feed that will be used to link to a Flow catalog. Failure to link an incoming feed item to a Flow catalog item will cause that item to be removed from localized feeds."
    },
    {
      "name": "invitation_error_code",
      "plural": "invitation_error_codes",
      "values": [
        {
          "name": "expired",
          "attributes": []
        },
        {
          "name": "invalid_email",
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "levy_component",
      "plural": "levy_components",
      "values": [
        {
          "name": "goods",
          "attributes": [],
          "description": "The value of goods"
        },
        {
          "name": "duty",
          "attributes": []
        },
        {
          "name": "insurance",
          "attributes": []
        },
        {
          "name": "freight",
          "attributes": []
        },
        {
          "name": "vat",
          "attributes": [],
          "description": "Value-Added Tax"
        }
      ],
      "attributes": []
    },
    {
      "name": "levy_strategy",
      "plural": "levy_strategies",
      "values": [
        {
          "name": "minimum",
          "attributes": []
        },
        {
          "name": "average",
          "attributes": []
        },
        {
          "name": "maximum",
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "manifest_type",
      "plural": "manifest_types",
      "values": [
        {
          "name": "all",
          "attributes": [],
          "description": "Manifest all open shipping labels that are not part of a manifest yet for the organization and carrier service"
        },
        {
          "name": "list",
          "attributes": [],
          "description": "Manifest only the list of specified labels"
        }
      ],
      "attributes": []
    },
    {
      "name": "margin_type",
      "plural": "margin_types",
      "values": [
        {
          "name": "fixed",
          "attributes": [],
          "description": "A fixed amount to add, e.g 2.5 would add an absolute margin of 2.5 in the base currency of your item."
        },
        {
          "name": "percent",
          "attributes": [],
          "description": "A percent of the base cost to add, e.g. 1.2 would represent a 1.2% increase."
        }
      ],
      "attributes": [],
      "description": "Either a fixed or percent adjustment applied to some amount."
    },
    {
      "name": "measurement_system",
      "plural": "measurement_systems",
      "values": [
        {
          "name": "imperial",
          "attributes": []
        },
        {
          "name": "metric",
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "method",
      "plural": "methods",
      "values": [
        {
          "name": "post",
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "The available methods by which we deliver each webhook event"
    },
    {
      "name": "order_error_code",
      "plural": "order_error_codes",
      "values": [
        {
          "name": "generic_error",
          "attributes": []
        },
        {
          "name": "order_item_not_available",
          "attributes": [],
          "description": "When creating an order, if a particular item is not available in the country / destination (either because it was restricted or excluded from that country), we return this error code and list the specific item numbers which are not available in the 'numbers' field."
        },
        {
          "name": "order_identifier_error",
          "attributes": []
        },
        {
          "name": "domestic_shipping_unavailable",
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "order_payment_type",
      "plural": "order_payment_types",
      "values": [
        {
          "name": "card",
          "attributes": [],
          "description": "Represents a payment in the form of a credit or debit card"
        },
        {
          "name": "online",
          "attributes": [],
          "description": "Represents an online payment (e.g. paypal, alipay, etc)"
        },
        {
          "name": "credit",
          "attributes": [],
          "description": "A payment in the form of a credit of some type (e.g. a store credit, gift card) applied to an order"
        },
        {
          "name": "cash_on_delivery",
          "attributes": [],
          "description": "Request to pay the balance with cash on delivery. Offered only when the final mile carriers support cash on delivery."
        }
      ],
      "attributes": [],
      "description": "The order payment type identified the different ways a consumer may have paid for an order. The primary purpose is in displaying summary level payment information to the user; the type can then be used to know how to request additional details for each payment."
    },
    {
      "name": "order_price_detail_component_key",
      "plural": "order_price_detail_component_keys",
      "values": [
        {
          "name": "adjustment",
          "attributes": [],
          "description": "A general purpose adjustment applied to the order."
        },
        {
          "name": "vat_deminimis",
          "attributes": [],
          "description": "An adjustment based on whether the VAT de minimis applies to the order."
        },
        {
          "name": "duty_deminimis",
          "attributes": [],
          "description": "An adjustment based on whether the duty de minimis applies to the order."
        },
        {
          "name": "duties_item_price",
          "attributes": [],
          "description": "The VAT owed on the price of the order's items, including any added margins and rounding."
        },
        {
          "name": "duties_freight",
          "attributes": [],
          "description": "The duty owed on the freight cost of the order."
        },
        {
          "name": "duties_insurance",
          "attributes": [],
          "description": "The duty owed on the insurance cost of the order."
        },
        {
          "name": "vat_item_price",
          "attributes": [],
          "description": "The VAT owed on the price of the order's items, including any added margins and rounding."
        },
        {
          "name": "vat_freight",
          "attributes": [],
          "description": "The VAT owed on the freight cost of the order."
        },
        {
          "name": "vat_insurance",
          "attributes": [],
          "description": "The VAT owed on the insurance cost of the order."
        },
        {
          "name": "vat_duties_item_price",
          "attributes": [],
          "description": "The VAT owed on the duties on the price of the order's items, including any added margins and rounding."
        },
        {
          "name": "vat_duties_freight",
          "attributes": [],
          "description": "The VAT owed on the duties on the freight cost of the order."
        },
        {
          "name": "vat_duties_insurance",
          "attributes": [],
          "description": "The VAT owed on the duties on the insurance cost of the order."
        },
        {
          "name": "item_price",
          "attributes": [],
          "description": "The sum of the price of the order's items with their currency margins, percent margins, and fixed margins included."
        },
        {
          "name": "rounding",
          "attributes": [],
          "description": "The sum of any rounding applied to the order's items."
        },
        {
          "name": "insurance",
          "attributes": [],
          "description": "The insurance cost for the order."
        },
        {
          "name": "shipping",
          "attributes": [],
          "description": "The shipping cost for the order."
        },
        {
          "name": "order_discount",
          "attributes": [],
          "description": "A discount applied to the entire order."
        },
        {
          "name": "subtotal_percent_sales_margin",
          "attributes": [],
          "description": "The sum of adjustments to item price, margin and rounding made due to percentage sales margins."
        },
        {
          "name": "subtotal_vat_percent_sales_margin",
          "attributes": [],
          "description": "The sum of adjustments to VAT owed made due to percentage sales margins."
        },
        {
          "name": "subtotal_duty_percent_sales_margin",
          "attributes": [],
          "description": "The sum of adjustments to duty owed made due to percentage sales margins."
        },
        {
          "name": "vat_subsidy",
          "attributes": [],
          "description": "An offset to account for any VAT subsidized by the organization. For example, if VAT is included in an item price and changes at the order level (due to passing de minimis threshold, or the destination having a more specific VAT rate), the difference will be represented here."
        },
        {
          "name": "duty_subsidy",
          "attributes": [],
          "description": "An offset to account for any duty subsidized by the organization. For example, if duty is included in an item price and changes at the order level (due to passing de minimis threshold, or the destination having a more specific duty rate), the difference will be represented here."
        }
      ],
      "attributes": []
    },
    {
      "name": "order_price_detail_key",
      "plural": "order_price_detail_keys",
      "values": [
        {
          "name": "adjustment",
          "attributes": [],
          "description": "The details of any adjustments made to the order."
        },
        {
          "name": "subtotal",
          "attributes": [],
          "description": "The details of the subtotal for the order, including item prices, margins, and rounding."
        },
        {
          "name": "vat",
          "attributes": [],
          "description": "The details of any VAT owed on the order."
        },
        {
          "name": "duty",
          "attributes": [],
          "description": "The details of any duties owed on the order."
        },
        {
          "name": "shipping",
          "attributes": [],
          "description": "The details of shipping costs for the order."
        },
        {
          "name": "insurance",
          "attributes": [],
          "description": "The details of insurance costs for the order."
        },
        {
          "name": "discount",
          "attributes": [],
          "description": "The details of any discount applied to the order."
        }
      ],
      "attributes": []
    },
    {
      "name": "order_status",
      "plural": "order_statuses",
      "values": [
        {
          "name": "open",
          "attributes": []
        },
        {
          "name": "submitted",
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Indicates an order's status"
    },
    {
      "name": "organization_payment_method_tag",
      "plural": "organization_payment_method_tags",
      "values": [
        {
          "name": "deny",
          "attributes": [],
          "description": "A denied payment method cannot be used for an organization in any experience."
        }
      ],
      "attributes": []
    },
    {
      "name": "outgoing_feed_format",
      "plural": "outgoing_feed_formats",
      "values": [
        {
          "name": "facebook-xml",
          "attributes": [],
          "description": "Facebook RSS XML product catalog feed"
        },
        {
          "name": "google-tsv",
          "attributes": [],
          "description": "Google Tab Seperated Values product catalog feed"
        },
        {
          "name": "google-xml",
          "attributes": [],
          "description": "Google RSS XML product catalog feed"
        },
        {
          "name": "criteo-xml",
          "attributes": [],
          "description": "Criteo RSS XML product catalog feed"
        }
      ],
      "attributes": [],
      "description": "Describes types of feeds that may be output by Flow along with a target service for the feed to help ensure correct product requirements."
    },
    {
      "name": "payment_error_code",
      "plural": "payment_error_codes",
      "values": [
        {
          "name": "duplicate",
          "attributes": []
        },
        {
          "name": "invalid_amount",
          "attributes": [],
          "description": "Amount is not valid (e.g. for merchant of record payments, the amount specified must match the order). This typically is handled by refreshing the order amount and reconfirming with the user as something has changed."
        },
        {
          "name": "invalid_currency",
          "attributes": [],
          "description": "Currency is either not known or invalid (e.g. for merchant of record payments, the currency specified must match the order)."
        },
        {
          "name": "invalid_method",
          "attributes": [],
          "description": "Invalid payment method"
        },
        {
          "name": "invalid_order",
          "attributes": [],
          "description": "The specified order number was not found"
        },
        {
          "name": "invalid_customer",
          "attributes": [],
          "description": "Customer information is invalid (e.g. email specified but not a valid email)"
        },
        {
          "name": "invalid_destination",
          "attributes": [],
          "description": "Destination/shipping address is not valid"
        },
        {
          "name": "unknown",
          "attributes": [],
          "description": "Failed due to another reason (details not known)"
        }
      ],
      "attributes": []
    },
    {
      "name": "payment_method_type",
      "plural": "payment_method_types",
      "values": [
        {
          "name": "card",
          "attributes": [],
          "description": "Represents all form of card payment (e.g. credit, debit, etc.)"
        },
        {
          "name": "online",
          "attributes": [],
          "description": "Represents the most common form of alternative payment methods which require some degree of integration online (e.g. a redirect) to complete payment."
        },
        {
          "name": "offline",
          "attributes": [],
          "description": "Offline payment method types represent payments like Cash On Delivery which require offline collection"
        }
      ],
      "attributes": [],
      "description": "The payment method type defines at a high level different user experiences that are required to accept payment of this type. By enabling a payment method type, you are specifying that you have completed the integration and all payment methods of this type become available for offer to your users."
    },
    {
      "name": "price_detail_component_key",
      "plural": "price_detail_component_keys",
      "values": [
        {
          "name": "base_price",
          "attributes": [],
          "description": "The base price of the item."
        },
        {
          "name": "discount",
          "attributes": [],
          "description": "A discount applied to the base price of the item."
        },
        {
          "name": "currency_margin",
          "attributes": [],
          "description": "The amount added to the post-discount item price due to FX markup, as configured in the organization's currency settings."
        },
        {
          "name": "percent_item_margin",
          "attributes": [],
          "description": "The amount added to the post-discount item price from a percent item margin. Negative amounts represent discounts."
        },
        {
          "name": "fixed_item_margin",
          "attributes": [],
          "description": "The amount added to the post-discount item price from a fixed item margin. Negative amounts represent discounts."
        },
        {
          "name": "duties_item_price",
          "attributes": [],
          "description": "The duty owed on the post-discount base item price."
        },
        {
          "name": "duties_added_margin",
          "attributes": [],
          "description": "The duty owed on the sum of the currency margin, percent item margin, and fixed item margin."
        },
        {
          "name": "duties_rounding",
          "attributes": [],
          "description": "The duty owed on any rounding applied to the total item price."
        },
        {
          "name": "duties_deminimis",
          "attributes": [],
          "description": "An adjustment made if the item does not meet the duty de minimis rule."
        },
        {
          "name": "vat_item_price",
          "attributes": [],
          "description": "The VAT owed on the post-discount base item price."
        },
        {
          "name": "vat_added_margin",
          "attributes": [],
          "description": "The VAT owed on the sum of the currency margin, percent item margin, and fixed item margin."
        },
        {
          "name": "vat_rounding",
          "attributes": [],
          "description": "The VAT owed on any rounding applied to the total item price."
        },
        {
          "name": "vat_duties_item_price",
          "attributes": [],
          "description": "The VAT owed on the duty owed on the post-discount base item price."
        },
        {
          "name": "vat_duties_added_margin",
          "attributes": [],
          "description": "The VAT owed on the duty owed on the sum of the currency margin, percent item margin, and fixed item margin."
        },
        {
          "name": "vat_duties_rounding",
          "attributes": [],
          "description": "The VAT owed on the duty owed on any rounding applied to the total item price."
        },
        {
          "name": "vat_deminimis",
          "attributes": [],
          "description": "An adjustment made if the item does not meet the VAT de minimis rule."
        },
        {
          "name": "item_price_percent_sales_margin",
          "attributes": [],
          "description": "An adjustment made to the item price as a result of a percent sales margin."
        },
        {
          "name": "margins_percent_sales_margin",
          "attributes": [],
          "description": "An adjustment made to the item margins as a result of a percent sales margin."
        },
        {
          "name": "rounding_percent_sales_margin",
          "attributes": [],
          "description": "An adjustment made to rounding as a result of a percent sales margin."
        },
        {
          "name": "vat_percent_sales_margin",
          "attributes": [],
          "description": "An adjustment made to VAT owed as a result of a percent sales margin."
        },
        {
          "name": "vat_duty_percent_sales_margin",
          "attributes": [],
          "description": "An adjustment made to VAT on duties (e.g. VAT on duties on item price) owed as a result of a percent sales margin."
        },
        {
          "name": "duty_percent_sales_margin",
          "attributes": [],
          "description": "An adjustment made to duty owed as a result of a percent sales margin."
        }
      ],
      "attributes": []
    },
    {
      "name": "price_detail_key",
      "plural": "price_detail_keys",
      "values": [
        {
          "name": "item_price",
          "attributes": [],
          "description": "The details of the item price."
        },
        {
          "name": "margins",
          "attributes": [],
          "description": "The details of any margins added to the item price."
        },
        {
          "name": "vat",
          "attributes": [],
          "description": "The details of any VAT owed on the item."
        },
        {
          "name": "duty",
          "attributes": [],
          "description": "The details of any duties owed on the item."
        },
        {
          "name": "rounding",
          "attributes": [],
          "description": "The details of any rounding added to the item."
        },
        {
          "name": "adjustment",
          "attributes": [],
          "description": "The details of any price adjustments due to sales margins. A negative value indicates a discount."
        }
      ],
      "attributes": []
    },
    {
      "name": "pricing_levy_setting",
      "plural": "pricing_levy_settings",
      "values": [
        {
          "name": "included",
          "attributes": []
        },
        {
          "name": "displayed",
          "attributes": []
        },
        {
          "name": "ignored",
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "promotion_trigger_type",
      "plural": "promotion_trigger_types",
      "values": [
        {
          "name": "order_subtotal",
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "province_type",
      "plural": "province_types",
      "values": [
        {
          "name": "city",
          "attributes": []
        },
        {
          "name": "dependency",
          "attributes": []
        },
        {
          "name": "district",
          "attributes": []
        },
        {
          "name": "emirate",
          "attributes": []
        },
        {
          "name": "entity",
          "attributes": []
        },
        {
          "name": "municipality",
          "attributes": []
        },
        {
          "name": "outlying_area",
          "attributes": []
        },
        {
          "name": "parish",
          "attributes": []
        },
        {
          "name": "province",
          "attributes": []
        },
        {
          "name": "state",
          "attributes": []
        },
        {
          "name": "territory",
          "attributes": []
        },
        {
          "name": "other",
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Local terminology for province"
    },
    {
      "name": "query_type",
      "plural": "query_types",
      "values": [
        {
          "name": "exclusion",
          "attributes": [],
          "description": "Exclude items satisfied by the associated query"
        },
        {
          "name": "inclusion",
          "attributes": [],
          "description": "Include items satisfied by the associated query"
        }
      ],
      "attributes": [],
      "description": "Type to indicate whether query is an inclusion or exclusion"
    },
    {
      "name": "quote_error_code",
      "plural": "quote_error_codes",
      "values": [
        {
          "name": "generic_error",
          "attributes": []
        },
        {
          "name": "items_not_available",
          "attributes": [],
          "description": "Item numbers are not available in inventory"
        }
      ],
      "attributes": []
    },
    {
      "name": "refund_decline_code",
      "plural": "refund_decline_codes",
      "values": [
        {
          "name": "expired",
          "attributes": [],
          "description": "All associated payment captures have expired; refunds can no longer be issued"
        },
        {
          "name": "insufficient_funds",
          "attributes": [],
          "description": "The requested refund amount exceeded the amount of remaining unrefunded funds"
        },
        {
          "name": "unknown",
          "attributes": [],
          "description": "Failed due to another reason (details not known)"
        }
      ],
      "attributes": [],
      "description": "Contains details related to the reason for which a refund failed."
    },
    {
      "name": "return_status",
      "plural": "return_statuses",
      "values": [
        {
          "name": "open",
          "attributes": []
        },
        {
          "name": "refunded",
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "role",
      "plural": "roles",
      "values": [
        {
          "name": "admin",
          "attributes": []
        },
        {
          "name": "member",
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "A user's role within an organization"
    },
    {
      "name": "rounding_method",
      "plural": "rounding_methods",
      "values": [
        {
          "name": "up",
          "attributes": [],
          "description": "Round up to the specified rounding.value"
        },
        {
          "name": "down",
          "attributes": [],
          "description": "Round down to the specified rounding.value"
        },
        {
          "name": "nearest",
          "attributes": [],
          "description": "Round to the nearest specified rounding.value. If equidistant, will round up."
        }
      ],
      "attributes": [],
      "description": "Direction to round localized price"
    },
    {
      "name": "rounding_type",
      "plural": "rounding_types",
      "values": [
        {
          "name": "pattern",
          "attributes": [],
          "description": "Rounds a value to an amount ending with a pattern, e.g. an amount ending in '.99'."
        },
        {
          "name": "multiple",
          "attributes": [],
          "description": "Rounds a value to an amount that is the multiple of a value, e.g. rounding to the nearest 5 would ensure that the resulting number ends in either 0 or 5."
        }
      ],
      "attributes": [],
      "description": "Rounding type determines the rule used to enforce rounding. Common rules will ensure that the final price ends w/ a given number (e.g. ends with .95) or is a multiple of some number (multiples of 5 or 10 are common)."
    },
    {
      "name": "schedule_exception_status",
      "plural": "schedule_exception_statuses",
      "values": [
        {
          "name": "Open",
          "attributes": []
        },
        {
          "name": "Closed",
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Pending better name"
    },
    {
      "name": "shipment_integration_type",
      "plural": "shipment_integration_types",
      "values": [
        {
          "name": "direct",
          "attributes": [],
          "description": "Always generate a label for the chosen delivery option."
        },
        {
          "name": "information",
          "attributes": [],
          "description": "Booking and label generation is not available. Just use Flow to calculate delivery window estimates and shipment prices to display."
        },
        {
          "name": "preadvice",
          "attributes": [],
          "description": "A generic label will be provided by the client organization when available as pre-advice shipment notification to carrier partner."
        }
      ],
      "attributes": [],
      "description": "Type of shipping integration for a given shipping tier"
    },
    {
      "name": "sort_direction",
      "plural": "sort_directions",
      "values": [
        {
          "name": "ascending",
          "attributes": []
        },
        {
          "name": "descending",
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "strategy",
      "plural": "strategies",
      "values": [
        {
          "name": "range",
          "attributes": [],
          "description": "Tightest range"
        },
        {
          "name": "from",
          "attributes": [],
          "description": "Lowest minimum of the ranges"
        },
        {
          "name": "to",
          "attributes": [],
          "description": "Lowest maximum of the ranges"
        }
      ],
      "attributes": []
    },
    {
      "name": "subcatalog_item_status",
      "plural": "subcatalog_item_statuses",
      "values": [
        {
          "name": "excluded",
          "attributes": [],
          "description": "The user has chosen to exclude the item from the associated subcatalog."
        },
        {
          "name": "included",
          "attributes": [],
          "description": "The item is included in the associated subcatalog."
        },
        {
          "name": "restricted",
          "attributes": [],
          "description": "Item is not allowed to be sold in the market associated with the given subcatalog."
        }
      ],
      "attributes": [],
      "description": "Status indicating availability of a subcatalog item in an experience."
    },
    {
      "name": "taxability_type",
      "plural": "taxability_types",
      "values": [
        {
          "name": "tax_rule",
          "attributes": [],
          "description": "Rule indicating how taxes should be applied.  Acceptable values are defined by the 'taxability_value' enum."
        }
      ],
      "attributes": []
    },
    {
      "name": "taxability_value",
      "plural": "taxability_values",
      "values": [
        {
          "name": "exempt",
          "attributes": [],
          "description": "An item with this value is exempt from being taxed."
        }
      ],
      "attributes": [],
      "description": "Used to indicate an item's taxability."
    },
    {
      "name": "tier_direction",
      "plural": "tier_directions",
      "values": [
        {
          "name": "outbound",
          "attributes": []
        },
        {
          "name": "return",
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Describes fulfillment direction of this logistics tier"
    },
    {
      "name": "tier_strategy",
      "plural": "tier_strategies",
      "values": [
        {
          "name": "fastest",
          "attributes": [],
          "description": "Optimize for fastest first, then cheapest"
        },
        {
          "name": "lowest_cost",
          "attributes": [],
          "description": "Optimize for lowest cost first, then fastest"
        }
      ],
      "attributes": [],
      "description": "Strategy to apply when there are multiple rates available for a tier"
    },
    {
      "name": "tracking_number_type",
      "plural": "tracking_number_types",
      "values": [
        {
          "name": "flow",
          "attributes": []
        },
        {
          "name": "carrier",
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "tracking_status",
      "plural": "tracking_statuses",
      "values": [
        {
          "name": "label_created",
          "attributes": []
        },
        {
          "name": "pending",
          "attributes": []
        },
        {
          "name": "info_received",
          "attributes": []
        },
        {
          "name": "in_transit",
          "attributes": []
        },
        {
          "name": "out_for_delivery",
          "attributes": []
        },
        {
          "name": "attempt_fail",
          "attributes": []
        },
        {
          "name": "delivered",
          "attributes": []
        },
        {
          "name": "exception",
          "attributes": []
        },
        {
          "name": "expired",
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "unit_of_measurement",
      "plural": "unit_of_measurements",
      "values": [
        {
          "name": "millimeter",
          "attributes": [],
          "description": "Equivalent to MILLI(METRE)."
        },
        {
          "name": "centimeter",
          "attributes": [],
          "description": "Equivalent to CENTI(METRE)."
        },
        {
          "name": "inch",
          "attributes": [],
          "description": "A unit of length equal to 0.01004 m (standard name in)."
        },
        {
          "name": "foot",
          "attributes": [],
          "description": "A unit of length equal to 0.3048 m (standard name ft)."
        },
        {
          "name": "cubic_inch",
          "attributes": [],
          "description": "A unit of volume equal to one cubic inch (in³)."
        },
        {
          "name": "cubic_meter",
          "attributes": [],
          "description": "The metric unit for volume quantities (m³)."
        },
        {
          "name": "gram",
          "attributes": [],
          "description": "A unit of mass equal to 1 / 1000 kilogram (standard name g)."
        },
        {
          "name": "kilogram",
          "attributes": [],
          "description": "The base unit for mass quantities (kg)."
        },
        {
          "name": "meter",
          "attributes": [],
          "description": "The base unit for length quantities (m)."
        },
        {
          "name": "ounce",
          "attributes": [],
          "description": "A unit of mass equal to 1 / 16 POUND (standard name oz)."
        },
        {
          "name": "pound",
          "attributes": [],
          "description": "A unit of mass equal to 453.59237 grams (avoirdupois pound, standard name lb)."
        }
      ],
      "attributes": [],
      "description": "Defines the units of measurement that we support. As units are added, we conform with the standard units provided by jscience as part of JSR 363 - see http://jscience.org/api/javax/measure/unit/SI.html and http://jscience.org/api/javax/measure/unit/NonSI.html"
    },
    {
      "name": "unit_of_time",
      "plural": "unit_of_times",
      "values": [
        {
          "name": "year",
          "attributes": []
        },
        {
          "name": "month",
          "attributes": []
        },
        {
          "name": "week",
          "attributes": []
        },
        {
          "name": "day",
          "attributes": []
        },
        {
          "name": "hour",
          "attributes": []
        },
        {
          "name": "minute",
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Defines the units of time that we support"
    },
    {
      "name": "update_policy",
      "plural": "update_policies",
      "values": [
        {
          "name": "auto",
          "attributes": []
        },
        {
          "name": "queue",
          "attributes": [],
          "description": "Queue item update for approval."
        },
        {
          "name": "discard",
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "update_type",
      "plural": "update_types",
      "values": [
        {
          "name": "change",
          "attributes": [],
          "description": "Long value to increment or decrement. Positive quantities are added to inventory while negative quantities are decrement from inventory."
        },
        {
          "name": "set",
          "attributes": [],
          "description": "Set aboluste quantity to new value with no regard for previous updates"
        }
      ],
      "attributes": [],
      "description": "Types of updates that can be made on quantity of inventory"
    },
    {
      "name": "user_status",
      "plural": "user_statuses",
      "values": [
        {
          "name": "pending",
          "attributes": [],
          "description": "Represents a new user account that is pending approval"
        },
        {
          "name": "active",
          "attributes": [],
          "description": "Represents an active user account - can authenticate with this account"
        },
        {
          "name": "inactive",
          "attributes": [],
          "description": "Represents an inactive user account - can no longer authenticate with this account"
        }
      ],
      "attributes": [],
      "description": "The status of the user account. Valid transitions are from pending -> active, active -> inactive, inactive -> active"
    },
    {
      "name": "value_added_service",
      "plural": "value_added_services",
      "values": [
        {
          "name": "Hazardous Material",
          "attributes": [],
          "description": "See https://en.wikipedia.org/wiki/ORM-D"
        }
      ],
      "attributes": []
    },
    {
      "name": "visibility",
      "plural": "visibilities",
      "values": [
        {
          "name": "public",
          "attributes": []
        },
        {
          "name": "private",
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "webhook_status",
      "plural": "webhook_statuses",
      "values": [
        {
          "name": "pending",
          "attributes": []
        },
        {
          "name": "success",
          "attributes": []
        },
        {
          "name": "failure",
          "attributes": []
        }
      ],
      "attributes": []
    }
  ],
  "unions": [
    {
      "name": "allocation_component",
      "plural": "allocation_components",
      "types": [
        {
          "type": "allocation_detail_component",
          "attributes": []
        },
        {
          "type": "allocation_levy_component",
          "attributes": []
        }
      ],
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "name": "allocation_detail",
      "plural": "allocation_details",
      "types": [
        {
          "type": "allocation_line_detail",
          "attributes": []
        },
        {
          "type": "allocation_order_detail",
          "attributes": []
        }
      ],
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "name": "authorization",
      "plural": "authorizations",
      "types": [
        {
          "type": "card_authorization",
          "attributes": []
        },
        {
          "type": "online_authorization",
          "attributes": []
        }
      ],
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "name": "authorization_form",
      "plural": "authorization_forms",
      "types": [
        {
          "type": "direct_authorization_form",
          "attributes": [],
          "description": "Enables card payments"
        },
        {
          "type": "merchant_of_record_authorization_form",
          "attributes": [],
          "description": "Enables card payments with Flow as Merchant of Record"
        },
        {
          "type": "paypal_authorization_form",
          "attributes": [],
          "description": "Enables authorization via paypal"
        }
      ],
      "attributes": [],
      "discriminator": "discriminator",
      "description": "Flow provides several different options for creating an authorization"
    },
    {
      "name": "delivery",
      "plural": "deliveries",
      "types": [
        {
          "type": "digital_delivery",
          "attributes": [],
          "description": "Represents items that can be delivered electronically (e.g. a gift card delivered via email)"
        },
        {
          "type": "physical_delivery",
          "attributes": [],
          "description": "Represents items that are physical and require shipment",
          "default": true
        }
      ],
      "attributes": [],
      "discriminator": "discriminator",
      "description": "A delivery represents a group of items that will be delivered together - presenting a single price and delivery time frame, where applicable, to the user. Deliveries commonly are created based on the type of item and, for physical goods, their center of origin"
    },
    {
      "name": "deminimis",
      "plural": "deminimises",
      "types": [
        {
          "type": "deminimis_simple",
          "attributes": []
        },
        {
          "type": "deminimis_per_item",
          "attributes": []
        }
      ],
      "attributes": [],
      "discriminator": "discriminator",
      "description": "De Minimis describes the country specific rules for exactly how tax and duties are calculated, as well as any exemptions that apply. See https://en.wikipedia.org/wiki/De_minimis for more information."
    },
    {
      "name": "document",
      "plural": "documents",
      "types": [
        {
          "type": "catalog_item_document",
          "attributes": []
        },
        {
          "type": "harmonization_document",
          "attributes": []
        }
      ],
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "name": "event",
      "plural": "events",
      "types": [
        {
          "type": "attribute_upserted",
          "attributes": []
        },
        {
          "type": "attribute_deleted",
          "attributes": []
        },
        {
          "type": "catalog_upserted",
          "attributes": []
        },
        {
          "type": "catalog_deleted",
          "attributes": []
        },
        {
          "type": "subcatalog_upserted",
          "attributes": []
        },
        {
          "type": "subcatalog_deleted",
          "attributes": []
        },
        {
          "type": "catalog_item_upserted",
          "attributes": []
        },
        {
          "type": "catalog_item_deleted",
          "attributes": []
        },
        {
          "type": "subcatalog_item_upserted",
          "attributes": []
        },
        {
          "type": "subcatalog_item_deleted",
          "attributes": []
        },
        {
          "type": "rate_deleted",
          "attributes": []
        },
        {
          "type": "rate_upserted",
          "attributes": []
        },
        {
          "type": "available_promotions_upserted",
          "attributes": []
        },
        {
          "type": "available_promotions_deleted",
          "attributes": []
        },
        {
          "type": "allocation_deleted",
          "attributes": []
        },
        {
          "type": "allocation_upserted",
          "attributes": []
        },
        {
          "type": "experience_deleted",
          "attributes": []
        },
        {
          "type": "experience_upserted",
          "attributes": []
        },
        {
          "type": "item_margin_deleted",
          "attributes": []
        },
        {
          "type": "item_margin_upserted",
          "attributes": []
        },
        {
          "type": "item_sales_margin_deleted",
          "attributes": []
        },
        {
          "type": "item_sales_margin_upserted",
          "attributes": []
        },
        {
          "type": "label_format_deleted",
          "attributes": []
        },
        {
          "type": "label_format_upserted",
          "attributes": []
        },
        {
          "type": "order_deleted",
          "attributes": []
        },
        {
          "type": "order_upserted",
          "attributes": []
        },
        {
          "type": "order_identifier_deleted",
          "attributes": []
        },
        {
          "type": "order_identifier_upserted",
          "attributes": []
        },
        {
          "type": "pricing_deleted",
          "attributes": []
        },
        {
          "type": "pricing_upserted",
          "attributes": []
        },
        {
          "type": "tier_upserted",
          "attributes": []
        },
        {
          "type": "tier_deleted",
          "attributes": []
        },
        {
          "type": "hs6_code_upserted",
          "attributes": []
        },
        {
          "type": "hs6_code_deleted",
          "attributes": []
        },
        {
          "type": "hs10_code_upserted",
          "attributes": []
        },
        {
          "type": "hs10_code_deleted",
          "attributes": []
        },
        {
          "type": "item_origin_upserted",
          "attributes": []
        },
        {
          "type": "item_origin_deleted",
          "attributes": []
        },
        {
          "type": "harmonized_item_upserted",
          "attributes": []
        },
        {
          "type": "harmonized_item_deleted",
          "attributes": []
        },
        {
          "type": "snapshot_upserted",
          "attributes": []
        },
        {
          "type": "snapshot_deleted",
          "attributes": []
        },
        {
          "type": "label_upserted",
          "attributes": []
        },
        {
          "type": "notification_upserted",
          "attributes": []
        },
        {
          "type": "notification_deleted",
          "attributes": []
        },
        {
          "type": "localized_item_upserted",
          "attributes": []
        },
        {
          "type": "localized_item_deleted",
          "attributes": []
        },
        {
          "type": "localized_item_snapshot",
          "attributes": []
        },
        {
          "type": "membership_upserted",
          "attributes": []
        },
        {
          "type": "membership_deleted",
          "attributes": []
        },
        {
          "type": "organization_upserted",
          "attributes": []
        },
        {
          "type": "organization_deleted",
          "attributes": []
        },
        {
          "type": "authorization_upserted",
          "attributes": [],
          "deprecation": {
            "description": "Use card_authorization_upserted and online_authorization_upserted"
          }
        },
        {
          "type": "authorization_deleted",
          "attributes": [],
          "deprecation": {
            "description": "Use authorization_deleted_v2"
          }
        },
        {
          "type": "authorization_deleted_v2",
          "attributes": []
        },
        {
          "type": "authorization_status_changed",
          "attributes": [],
          "description": "Trigger whenever an auth status changes (e.g. from pending to authorized). Common use case is to subscribe to this event to know when an auth is cleared from fraud review."
        },
        {
          "type": "card_authorization_upserted",
          "attributes": [],
          "deprecation": {
            "description": "Use card_authorization_upserted_v2"
          }
        },
        {
          "type": "card_authorization_upserted_v2",
          "attributes": []
        },
        {
          "type": "online_authorization_upserted",
          "attributes": [],
          "deprecation": {
            "description": "Use online_authorization_upserted_v2"
          }
        },
        {
          "type": "online_authorization_upserted_v2",
          "attributes": []
        },
        {
          "type": "capture_upserted",
          "attributes": [],
          "deprecation": {
            "description": "Use capture_upserted_v2"
          }
        },
        {
          "type": "capture_upserted_v2",
          "attributes": []
        },
        {
          "type": "card_upserted",
          "attributes": [],
          "deprecation": {
            "description": "Use card_upserted_v2"
          }
        },
        {
          "type": "card_upserted_v2",
          "attributes": []
        },
        {
          "type": "card_deleted",
          "attributes": []
        },
        {
          "type": "payment_upserted",
          "attributes": []
        },
        {
          "type": "payment_deleted",
          "attributes": []
        },
        {
          "type": "refund_upserted",
          "attributes": [],
          "deprecation": {
            "description": "Use refund_upserted_v2"
          }
        },
        {
          "type": "refund_upserted_v2",
          "attributes": []
        },
        {
          "type": "return_upserted",
          "attributes": []
        },
        {
          "type": "return_deleted",
          "attributes": []
        },
        {
          "type": "targeting_item_upserted",
          "attributes": []
        },
        {
          "type": "targeting_item_deleted",
          "attributes": []
        },
        {
          "type": "tracking_label_event_upserted",
          "attributes": []
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "webhook"
          }
        }
      ],
      "discriminator": "discriminator"
    },
    {
      "name": "expandable_card",
      "plural": "expandable_cards",
      "types": [
        {
          "type": "card",
          "attributes": []
        },
        {
          "type": "card_reference",
          "attributes": []
        }
      ],
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "name": "expandable_experience",
      "plural": "expandable_experiences",
      "types": [
        {
          "type": "experience",
          "attributes": []
        },
        {
          "type": "experience_reference",
          "attributes": []
        }
      ],
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "name": "expandable_item_function",
      "plural": "expandable_item_functions",
      "types": [
        {
          "type": "item_function",
          "attributes": []
        },
        {
          "type": "item_function_reference",
          "attributes": []
        }
      ],
      "attributes": [],
      "discriminator": "discriminator",
      "description": "An item function can be represented with just its Id, or the entire model"
    },
    {
      "name": "expandable_order",
      "plural": "expandable_orders",
      "types": [
        {
          "type": "order",
          "attributes": []
        },
        {
          "type": "order_reference",
          "attributes": []
        }
      ],
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "name": "expandable_organization",
      "plural": "expandable_organizations",
      "types": [
        {
          "type": "organization",
          "attributes": []
        },
        {
          "type": "organization_reference",
          "attributes": []
        }
      ],
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "name": "expandable_payment",
      "plural": "expandable_payments",
      "types": [
        {
          "type": "payment_paypal",
          "attributes": []
        },
        {
          "type": "payment_reference",
          "attributes": []
        }
      ],
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "name": "expandable_subcatalog",
      "plural": "expandable_subcatalogs",
      "types": [
        {
          "type": "subcatalog",
          "attributes": []
        },
        {
          "type": "subcatalog_reference",
          "attributes": []
        }
      ],
      "attributes": [],
      "discriminator": "discriminator",
      "description": "A subcatalog can be represented with just it's ID, or the entire model"
    },
    {
      "name": "expandable_user",
      "plural": "expandable_users",
      "types": [
        {
          "type": "user",
          "attributes": []
        },
        {
          "type": "user_reference",
          "attributes": []
        }
      ],
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "name": "export_delivery",
      "plural": "export_deliveries",
      "types": [
        {
          "type": "export_delivery_email",
          "attributes": []
        }
      ],
      "attributes": [],
      "discriminator": "discriminator",
      "description": "Export deliveries represent actions to take once a requested export has completed. A common pattern would be to request delivery of the export via email - you will then receive an email notification once the requested export is ready"
    },
    {
      "name": "export_type",
      "plural": "export_types",
      "types": [
        {
          "type": "account_transactions_export_type",
          "attributes": []
        },
        {
          "type": "account_orders_export_type",
          "attributes": []
        },
        {
          "type": "catalog_item_export_type",
          "attributes": []
        },
        {
          "type": "harmonization_overview_export_type",
          "attributes": []
        },
        {
          "type": "harmonization_hs6_export_type",
          "attributes": []
        },
        {
          "type": "harmonization_hs10_export_type",
          "attributes": []
        },
        {
          "type": "unharmonized_item_export_type",
          "attributes": []
        },
        {
          "type": "order_export_type",
          "attributes": []
        },
        {
          "type": "solidus_product_export_type",
          "attributes": []
        },
        {
          "type": "solidus_variant_export_type",
          "attributes": []
        }
      ],
      "attributes": [],
      "discriminator": "discriminator",
      "description": "Defines the specific export data that defines which records are exported and into which format"
    },
    {
      "name": "feed",
      "plural": "feeds",
      "types": [
        {
          "type": "catalog_feed",
          "attributes": [],
          "description": "A localized product catalog."
        }
      ],
      "attributes": [],
      "discriminator": "discriminator",
      "description": "Describes types of feeds that may be produced by Flow."
    },
    {
      "name": "hint_form",
      "plural": "hint_forms",
      "types": [
        {
          "type": "phrase_hint_form",
          "attributes": [],
          "description": "A short phrase describing a product in generic terms, intended to uniquely identify a code from a harmonization system. Hints of this type must provide an exact match and will never return more than one result."
        }
      ],
      "attributes": [],
      "discriminator": "discriminator",
      "description": "Describes types of forms that can be used to assign an HS code based on product data."
    },
    {
      "name": "inventory_strategy",
      "plural": "inventory_strategies",
      "types": [
        {
          "type": "inventory_backorder",
          "attributes": [],
          "description": "Enables backorders, setting an optional number of units that we allow for backorder. For example, a backorder w/ quantity 10 will enable selling until the actual inventory quantity is -10."
        },
        {
          "type": "inventory_stock",
          "attributes": [],
          "description": "Treats inventory as available as long as the actual inventory quantity is > the specified quantity. A common use case is to set quantity to zero to indicate availability as long as there is at least 1 unit available."
        },
        {
          "type": "inventory_unlimited",
          "attributes": [],
          "description": "Items affected with rules pursuing an unlimited strategy will always be available"
        }
      ],
      "attributes": [],
      "discriminator": "discriminator",
      "description": "Types of rules used to apply on inventory to calculate available quantity"
    },
    {
      "name": "localized_price",
      "plural": "localized_prices",
      "types": [
        {
          "type": "localized_item_price",
          "attributes": []
        },
        {
          "type": "localized_item_vat",
          "attributes": []
        },
        {
          "type": "localized_item_duty",
          "attributes": []
        },
        {
          "type": "localized_total",
          "attributes": []
        }
      ],
      "attributes": [
        {
          "name": "linter",
          "value": {
            "ignore": [
              "discriminator"
            ]
          }
        }
      ],
      "discriminator": "key",
      "description": "The localized prices for an item are returned as a list - the key of each element is defined here"
    },
    {
      "name": "payment",
      "plural": "payments",
      "types": [
        {
          "type": "payment_paypal",
          "attributes": []
        }
      ],
      "attributes": [],
      "discriminator": "discriminator",
      "description": "Represents data for a specific online payment method"
    },
    {
      "name": "payment_form",
      "plural": "payment_forms",
      "types": [
        {
          "type": "merchant_of_record_payment_form",
          "attributes": []
        }
      ],
      "attributes": [],
      "discriminator": "discriminator",
      "description": "Represents the data needed to initiate an online payment"
    },
    {
      "name": "payment_method_tag",
      "plural": "payment_method_tags",
      "types": [
        {
          "type": "organization_payment_method_tag",
          "attributes": []
        },
        {
          "type": "experience_payment_method_tag",
          "attributes": []
        }
      ],
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "name": "promotion",
      "plural": "promotions",
      "types": [
        {
          "type": "free_shipping",
          "attributes": []
        }
      ],
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "name": "session",
      "plural": "sessions",
      "types": [
        {
          "type": "organization_session",
          "attributes": []
        }
      ],
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "name": "session_authorization",
      "plural": "session_authorizations",
      "types": [
        {
          "type": "organization_session_authorization",
          "attributes": []
        }
      ],
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "name": "tier_rule_outcome",
      "plural": "tier_rule_outcomes",
      "types": [
        {
          "type": "amount_margin",
          "attributes": [],
          "description": "Add a certain amount on the actual base cost"
        },
        {
          "type": "at_cost",
          "attributes": []
        },
        {
          "type": "flat_rate",
          "attributes": []
        },
        {
          "type": "percent_margin",
          "attributes": [],
          "description": "Add a certain percentage of the actual base cost"
        }
      ],
      "attributes": [],
      "discriminator": "discriminator",
      "description": "Possible outcome types from a tier rule"
    },
    {
      "name": "tier_rule_outcome_form",
      "plural": "tier_rule_outcome_forms",
      "types": [
        {
          "type": "amount_margin_form",
          "attributes": []
        },
        {
          "type": "flat_rate_form",
          "attributes": []
        },
        {
          "type": "at_cost",
          "attributes": []
        },
        {
          "type": "percent_margin",
          "attributes": []
        }
      ],
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "name": "token",
      "plural": "tokens",
      "types": [
        {
          "type": "organization_token",
          "attributes": []
        },
        {
          "type": "partner_token",
          "attributes": []
        }
      ],
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "name": "token_form",
      "plural": "token_forms",
      "types": [
        {
          "type": "organization_token_form",
          "attributes": []
        },
        {
          "type": "partner_token_form",
          "attributes": []
        }
      ],
      "attributes": [],
      "discriminator": "discriminator"
    },
    {
      "name": "token_reference",
      "plural": "token_references",
      "types": [
        {
          "type": "organization_token_reference",
          "attributes": []
        },
        {
          "type": "partner_token_reference",
          "attributes": []
        }
      ],
      "attributes": [],
      "discriminator": "discriminator"
    }
  ],
  "models": [
    {
      "name": "account_orders_export_type",
      "plural": "account_orders_export_types",
      "fields": [
        {
          "name": "statement_id",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "transaction_summary_id",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "transaction_posted_from",
          "type": "date-iso8601",
          "required": false,
          "attributes": []
        },
        {
          "name": "transaction_posted_to",
          "type": "date-iso8601",
          "required": false,
          "attributes": []
        },
        {
          "name": "transaction_posted_on_or_after",
          "type": "date-time-iso8601",
          "required": false,
          "attributes": []
        },
        {
          "name": "transaction_posted_after",
          "type": "date-time-iso8601",
          "required": false,
          "attributes": []
        },
        {
          "name": "transaction_posted_on_or_before",
          "type": "date-time-iso8601",
          "required": false,
          "attributes": []
        },
        {
          "name": "transaction_posted_before",
          "type": "date-time-iso8601",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "account_transactions_export_type",
      "plural": "account_transactions_export_types",
      "fields": [
        {
          "name": "statement_id",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "transaction_summary_id",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "posted_from",
          "type": "date-iso8601",
          "required": false,
          "attributes": []
        },
        {
          "name": "posted_to",
          "type": "date-iso8601",
          "required": false,
          "attributes": []
        },
        {
          "name": "posted_on_or_after",
          "type": "date-time-iso8601",
          "required": false,
          "attributes": []
        },
        {
          "name": "posted_after",
          "type": "date-time-iso8601",
          "required": false,
          "attributes": []
        },
        {
          "name": "posted_on_or_before",
          "type": "date-time-iso8601",
          "required": false,
          "attributes": []
        },
        {
          "name": "posted_before",
          "type": "date-time-iso8601",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "address",
      "plural": "addresses",
      "fields": [
        {
          "name": "text",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Full text version of address"
        },
        {
          "name": "streets",
          "type": "[string]",
          "required": false,
          "attributes": [],
          "description": "Array for street line 1, street line 2, etc., in order"
        },
        {
          "name": "city",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "province",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "postal",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "country",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "The ISO 3166-3 country code. Case insensitive. See https://api.flow.io/reference/countries",
          "example": "CAN"
        },
        {
          "name": "latitude",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "longitude",
          "type": "string",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Defines structured fields for address to be used in user/form input. Either text or the structured input needs to be present."
    },
    {
      "name": "address_suggestion",
      "plural": "address_suggestions",
      "fields": [
        {
          "name": "address",
          "type": "address",
          "required": true,
          "attributes": [],
          "description": "The suggested address"
        },
        {
          "name": "streets",
          "type": "boolean",
          "required": true,
          "attributes": [],
          "description": "True if the streets are updated; false otherwise"
        },
        {
          "name": "city",
          "type": "boolean",
          "required": true,
          "attributes": [],
          "description": "True if the city is updated; false otherwise"
        },
        {
          "name": "province",
          "type": "boolean",
          "required": true,
          "attributes": [],
          "description": "True if the province is updated; false otherwise"
        },
        {
          "name": "postal",
          "type": "boolean",
          "required": true,
          "attributes": [],
          "description": "True if the postal is updated; false otherwise"
        },
        {
          "name": "country",
          "type": "boolean",
          "required": true,
          "attributes": [],
          "description": "True if the country is updated; false otherwise"
        }
      ],
      "attributes": [],
      "description": "A suggested address (usually providing more accurate information). This object contains both the suggested address as well as metadata on which fields are actually different"
    },
    {
      "name": "address_verification",
      "plural": "address_verifications",
      "fields": [
        {
          "name": "address",
          "type": "address",
          "required": true,
          "attributes": [],
          "description": "The address we are verifying"
        },
        {
          "name": "valid",
          "type": "boolean",
          "required": true,
          "attributes": [],
          "description": "True if the address is valid; false otherwise"
        },
        {
          "name": "suggestions",
          "type": "[address_suggestion]",
          "required": true,
          "attributes": [],
          "description": "Where available, we return a list of suggestions for verified addresses. Each suggestion contains both the suggested address as well as the specific fields that are different",
          "default": "[]"
        }
      ],
      "attributes": [],
      "description": "Address verification returns information on whether or not an address is valid and deliverable - meaning carriers will accept this address. Also returns suggestions for address correction, including data to highlight specific fields to correct."
    },
    {
      "name": "adjustment_reason",
      "plural": "adjustment_reasons",
      "fields": [
        {
          "name": "key",
          "type": "adjustment_reason_key",
          "required": true,
          "attributes": []
        },
        {
          "name": "label",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The label for the adjustment reason that can be displayed as a tooltip on the product detail page."
        }
      ],
      "attributes": []
    },
    {
      "name": "allocation",
      "plural": "allocations",
      "fields": [
        {
          "name": "order",
          "type": "order_reference",
          "required": true,
          "attributes": []
        },
        {
          "name": "details",
          "type": "[allocation_detail]",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "allocation_deleted",
      "plural": "allocation_deleteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "allocation_detail_component",
      "plural": "allocation_detail_components",
      "fields": [
        {
          "name": "key",
          "type": "order_price_detail_component_key",
          "required": true,
          "attributes": []
        },
        {
          "name": "total",
          "type": "price_with_base",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Represents any component that is not VAT or duty, such as item price, rounding, shipping, etc."
    },
    {
      "name": "allocation_levy_component",
      "plural": "allocation_levy_components",
      "fields": [
        {
          "name": "key",
          "type": "order_price_detail_component_key",
          "required": true,
          "attributes": []
        },
        {
          "name": "total",
          "type": "price_with_base",
          "required": true,
          "attributes": []
        },
        {
          "name": "rate",
          "type": "decimal",
          "required": true,
          "attributes": [],
          "description": "The rate of the levy."
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The name of the levy, for display purposes."
        }
      ],
      "attributes": [],
      "description": "Represents either a VAT or duty component."
    },
    {
      "name": "allocation_line_detail",
      "plural": "allocation_line_details",
      "fields": [
        {
          "name": "number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Client's unique identifier for this object"
        },
        {
          "name": "quantity",
          "type": "long",
          "required": true,
          "attributes": []
        },
        {
          "name": "key",
          "type": "order_price_detail_key",
          "required": true,
          "attributes": []
        },
        {
          "name": "price",
          "type": "price_with_base",
          "required": true,
          "attributes": [],
          "description": "Represents the price of all included detail components for one unit of this line item."
        },
        {
          "name": "total",
          "type": "price_with_base",
          "required": true,
          "attributes": [],
          "description": "Represents the total price of this line item, which equals the price times the quantity."
        },
        {
          "name": "included",
          "type": "[allocation_component]",
          "required": true,
          "attributes": [],
          "description": "Contains all components that are included in this detail's total."
        },
        {
          "name": "not_included",
          "type": "[allocation_component]",
          "required": true,
          "attributes": [],
          "description": "Contains all components that are not included in this detail's total. For example, this may contain VAT components when the VAT pricing setting is displayed or ignored."
        }
      ],
      "attributes": []
    },
    {
      "name": "allocation_order_detail",
      "plural": "allocation_order_details",
      "fields": [
        {
          "name": "key",
          "type": "order_price_detail_key",
          "required": true,
          "attributes": []
        },
        {
          "name": "total",
          "type": "price_with_base",
          "required": true,
          "attributes": []
        },
        {
          "name": "included",
          "type": "[allocation_component]",
          "required": true,
          "attributes": [],
          "description": "Contains all components that are included in this detail's total."
        },
        {
          "name": "not_included",
          "type": "[allocation_component]",
          "required": true,
          "attributes": [],
          "description": "Contains all components that are not included in this detail's total. For example, this may contain VAT components when the VAT pricing setting is displayed or ignored."
        }
      ],
      "attributes": [],
      "description": "Represents an order-specific detail such as shipping, insurance, or an order-level discount."
    },
    {
      "name": "allocation_upserted",
      "plural": "allocation_upserteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "order_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "order_number",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "details",
          "type": "[object]",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "amount_margin",
      "plural": "amount_margins",
      "fields": [
        {
          "name": "margin",
          "type": "price",
          "required": true,
          "attributes": [],
          "description": "Additional cost to be added to actual cost to get quote amount to show to customer"
        }
      ],
      "attributes": [],
      "description": "Rule outcome where shipping surfaced in quote is actual cost plus a predefined margin price"
    },
    {
      "name": "amount_margin_form",
      "plural": "amount_margin_forms",
      "fields": [
        {
          "name": "margin",
          "type": "money",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "at_cost",
      "plural": "at_costs",
      "fields": [
        {
          "name": "ignore",
          "type": "string",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Rule outcome where shipping surfaced in quote is actual cost of the service"
    },
    {
      "name": "attribute",
      "plural": "attributes",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The unique identifier for the attribute."
        },
        {
          "name": "key",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The key of the attribute that identifies it within a map of attributes."
        },
        {
          "name": "options",
          "type": "options",
          "required": true,
          "attributes": [],
          "description": "Defines special rules for handling this attribute."
        },
        {
          "name": "label",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "A human-readable label used for display purposes."
        },
        {
          "name": "intent",
          "type": "attribute_intent",
          "required": false,
          "attributes": [],
          "description": "Optionally specify the meaning of this attribute to ensure accurate processing, such as marking a price that should be localized. Note that specifying an intent may restrict what data types are legal -- for example, a price must also be of type decimal.",
          "example": "price"
        },
        {
          "name": "type",
          "type": "attribute_data_type",
          "required": false,
          "attributes": [],
          "description": "Optionally tag attributes with their data type so they are properly validated. If omitted, we will default to string",
          "example": "string"
        }
      ],
      "attributes": [],
      "description": "An attribute can be configured to be used in different ways throughout Flow. A common example is to identify a meaningful attribute (e.g. brand) that can then be displayed throughout the Flow console."
    },
    {
      "name": "attribute_deleted",
      "plural": "attribute_deleteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "key",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "attribute_form",
      "plural": "attribute_forms",
      "fields": [
        {
          "name": "key",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The actual attribute key. This key should match the keys used in the item.attributes maps",
          "example": "brand"
        },
        {
          "name": "options",
          "type": "options",
          "required": true,
          "attributes": [],
          "description": "Defines the configuration for how the options are used through flow"
        },
        {
          "name": "label",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "A human-readable label used for display purposes",
          "example": "Brand"
        },
        {
          "name": "intent",
          "type": "attribute_intent",
          "required": false,
          "attributes": [],
          "description": "Optionally specify the meaning of this attribute to ensure accurate processing, such as marking a price that should be localized. Note that specifying an intent may restrict what data types are legal -- for example, a price must also be of type decimal.",
          "example": "price"
        },
        {
          "name": "type",
          "type": "attribute_data_type",
          "required": false,
          "attributes": [],
          "description": "Optionally tag attributes with their data type so they are properly validated. If omitted, we will default to string",
          "example": "string"
        }
      ],
      "attributes": []
    },
    {
      "name": "attribute_upserted",
      "plural": "attribute_upserteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "key",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "label",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "intent",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "type",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "attribute_version",
      "plural": "attribute_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "attribute",
          "type": "attribute",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Retrieve journaled history of an attribute"
    },
    {
      "name": "authentication_form",
      "plural": "authentication_forms",
      "fields": [
        {
          "name": "email",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "password",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "authorization_delete_error",
      "plural": "authorization_delete_errors",
      "fields": [
        {
          "name": "code",
          "type": "authorization_delete_error_code",
          "required": true,
          "attributes": [],
          "description": "Specific reason for the error"
        },
        {
          "name": "messages",
          "type": "[string]",
          "required": true,
          "attributes": [],
          "minimum": 1
        }
      ],
      "attributes": []
    },
    {
      "name": "authorization_deleted",
      "plural": "authorization_deleteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "key",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "authorization_deleted_v2",
      "plural": "authorization_deleted_v2s",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "authorization_order_reference",
      "plural": "authorization_order_references",
      "fields": [
        {
          "name": "number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Client's unique identifier for this object"
        }
      ],
      "attributes": []
    },
    {
      "name": "authorization_reference",
      "plural": "authorization_references",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "key",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "authorization_result",
      "plural": "authorization_results",
      "fields": [
        {
          "name": "status",
          "type": "authorization_status",
          "required": true,
          "attributes": []
        },
        {
          "name": "decline_code",
          "type": "authorization_decline_code",
          "required": false,
          "attributes": [],
          "description": "If status is declined, will contain the details behind the decline"
        },
        {
          "name": "avs",
          "type": "avs",
          "required": false,
          "attributes": []
        },
        {
          "name": "cvv",
          "type": "cvv",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Contains the result of the authorization. If an immediate response is not available, the state will be 'pending' - this usually indicates fraud review requires additional time / verification (or a potential network issue with the issuing bank)."
    },
    {
      "name": "authorization_status_changed",
      "plural": "authorization_status_changeds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The authorization id"
        },
        {
          "name": "authorization",
          "type": "authorization",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "authorization_upserted",
      "plural": "authorization_upserteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "key",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "order_number",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "card",
          "type": "object",
          "required": true,
          "attributes": []
        },
        {
          "name": "amount",
          "type": "decimal",
          "required": true,
          "attributes": []
        },
        {
          "name": "currency",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "customer",
          "type": "object",
          "required": true,
          "attributes": []
        },
        {
          "name": "attributes",
          "type": "map[string]",
          "required": true,
          "attributes": []
        },
        {
          "name": "destination",
          "type": "object",
          "required": false,
          "attributes": []
        },
        {
          "name": "result",
          "type": "object",
          "required": true,
          "attributes": []
        },
        {
          "name": "ip",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "created_at",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "authorization_version",
      "plural": "authorization_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "authorization",
          "type": "authorization",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "available_promotions_deleted",
      "plural": "available_promotions_deleteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "experience_key",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "available_promotions_upserted",
      "plural": "available_promotions_upserteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "experience_key",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "available_promotions",
          "type": "[object]",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "available_service",
      "plural": "available_services",
      "fields": [
        {
          "name": "service",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Carrier service level ID",
          "example": "ups-ground"
        },
        {
          "name": "scheduled_pickups",
          "type": "[scheduled_pickup]",
          "required": false,
          "attributes": [],
          "description": "Schedule day/times of carrier or affiliated line-haul pickup at this center. If not available, assume every day."
        },
        {
          "name": "lead_days",
          "type": "number_range",
          "required": false,
          "attributes": [],
          "description": "Additional lead time required for processing or freight-based domestic transit for this service from this center. This will go in to padding the final delivery windows."
        }
      ],
      "attributes": [],
      "description": "Representation of a service level available at a center and the special pickup times during the week. If pickup schedules are not provided, assumption is once a day during the weekdays."
    },
    {
      "name": "avs",
      "plural": "avses",
      "fields": [
        {
          "name": "code",
          "type": "avs_code",
          "required": true,
          "attributes": []
        },
        {
          "name": "name",
          "type": "boolean",
          "required": false,
          "attributes": [],
          "description": "If available, indicates whether the cardholder's name matches."
        },
        {
          "name": "address",
          "type": "boolean",
          "required": false,
          "attributes": [],
          "description": "If available, indicates whether the cardholder's address matches."
        },
        {
          "name": "postal",
          "type": "boolean",
          "required": false,
          "attributes": [],
          "description": "If available, indicates whether the cardholder's postal code matches."
        },
        {
          "name": "description",
          "type": "string",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Represents the address verification results"
    },
    {
      "name": "capture",
      "plural": "captures",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "key",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "authorization",
          "type": "authorization_reference",
          "required": true,
          "attributes": []
        },
        {
          "name": "amount",
          "type": "decimal",
          "required": true,
          "attributes": [],
          "description": "The amount to capture in the currency of the associated authorization. If not specified, defaults to the full amount of the authorization (minus any prior captures).",
          "example": "120.38"
        },
        {
          "name": "currency",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Required if amount is specified. The ISO 4217-3 code for the currency. Case insensitive. See https://api.flow.io/reference/currencies",
          "example": "CAD"
        },
        {
          "name": "created_at",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "attributes",
          "type": "map[string]",
          "required": false,
          "attributes": [],
          "description": "A set of key/value pairs that you can attach to a capture object"
        }
      ],
      "attributes": [],
      "description": "Capture actually transfers funds. You can capture as many times as you'd like up until the total amount of the authorization has been captured or the authorization otherwise becomes unavailable (e.g. expires)."
    },
    {
      "name": "capture_form",
      "plural": "capture_forms",
      "fields": [
        {
          "name": "authorization_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "key",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Your unique identifier for this transaction, which if provided is used to implement idempotency. If not provided, we will assign."
        },
        {
          "name": "amount",
          "type": "decimal",
          "required": false,
          "attributes": [],
          "description": "The amount to capture in the currency of the associated authorization. If not specified, defaults to the full amount of the authorization (minus any prior captures).",
          "example": "120.38"
        },
        {
          "name": "currency",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Required if amount is specified. The ISO 4217-3 code for the currency. Case insensitive. See https://api.flow.io/reference/currencies",
          "example": "CAD"
        },
        {
          "name": "attributes",
          "type": "map[string]",
          "required": false,
          "attributes": [],
          "description": "A set of key/value pairs that you can attach to a capture object"
        }
      ],
      "attributes": [],
      "description": "Capture actually transfers funds. You can capture as many times as you'd like up until the total amount of the authorization has been captured or the authorization otherwise becomes unavailable (e.g. expires)."
    },
    {
      "name": "capture_upserted",
      "plural": "capture_upserteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "key",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "authorization_key",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "amount",
          "type": "decimal",
          "required": true,
          "attributes": []
        },
        {
          "name": "currency",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "created_at",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "capture_upserted_v2",
      "plural": "capture_upserted_v2s",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "capture",
          "type": "capture",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "capture_version",
      "plural": "capture_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "capture",
          "type": "capture",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "card",
      "plural": "cards",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "token",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Unique, cryptographically secure token by which this card can be identified in the future. This value should be kept secure in your system's as payment authorizations are created against this token."
        },
        {
          "name": "type",
          "type": "card_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "expiration",
          "type": "expiration",
          "required": true,
          "attributes": []
        },
        {
          "name": "iin",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The issuer identification number (IIN) (formerly known as the Bank Identification Number) which are the leading digits of the card number."
        },
        {
          "name": "last4",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Cleartext last 4 numbers of the card"
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Cardholder name"
        },
        {
          "name": "address",
          "type": "address",
          "required": false,
          "attributes": [],
          "description": "Cardholder billing address"
        }
      ],
      "attributes": [],
      "description": "Card represents the metadata about a secure, tokenized card. The card 'token' is a unique, cryptographically secure token by which this card can be identified in the future. The card token itself will either be a permanent card token (denoted by a prefix of F96) or a one time nonce (denoted by a prefix of F17). Nonces represent cards that were encrypted from public channels (like the user's browser via JavaScript) and can be used once only. If you have a nonce you can exchange it for a permanent card token via the operation POST /:organization/cards/nonces"
    },
    {
      "name": "card_authorization",
      "plural": "card_authorizations",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "key",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "card",
          "type": "expandable_card",
          "required": true,
          "attributes": [],
          "description": "If this authorization was made for a card payment method, this field will contain the details of the card used on the transaction"
        },
        {
          "name": "amount",
          "type": "decimal",
          "required": true,
          "attributes": [],
          "description": "The amount to authorize",
          "example": "120.38"
        },
        {
          "name": "currency",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The ISO 4217-3 code for the currency. Case insensitive. See https://api.flow.io/reference/currencies",
          "example": "CAD"
        },
        {
          "name": "customer",
          "type": "customer",
          "required": true,
          "attributes": [],
          "description": "The customer who is actually receiving the goods. Providing name and email at a minimum will significantly increase the acceptance rate and are recommended."
        },
        {
          "name": "attributes",
          "type": "map[string]",
          "required": true,
          "attributes": [],
          "description": "A set of key/value pairs that you can attach to an authorization object"
        },
        {
          "name": "destination",
          "type": "address",
          "required": false,
          "attributes": [],
          "description": "Destination address, if relevant"
        },
        {
          "name": "order",
          "type": "authorization_order_reference",
          "required": false,
          "attributes": [],
          "description": "If this authorization was made for a specific order number, that order will be referenced here"
        },
        {
          "name": "ip",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "The IP address of the consumer",
          "example": "96.242.151.245"
        },
        {
          "name": "result",
          "type": "authorization_result",
          "required": true,
          "attributes": []
        },
        {
          "name": "created_at",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "An authorization is used to check and reserve funds w/ a given payment method. No funds are actually transferred; once you have you an authorization, you can capture up to the amount of the authorization."
    },
    {
      "name": "card_authorization_upserted",
      "plural": "card_authorization_upserteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "authorization",
          "type": "card_authorization",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Represents an authorization for a card payment method"
    },
    {
      "name": "card_authorization_upserted_v2",
      "plural": "card_authorization_upserted_v2s",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "authorization",
          "type": "card_authorization",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Represents an authorization for a card payment method"
    },
    {
      "name": "card_deleted",
      "plural": "card_deleteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "card_error",
      "plural": "card_errors",
      "fields": [
        {
          "name": "code",
          "type": "card_error_code",
          "required": true,
          "attributes": [],
          "description": "Specific reason for the error"
        },
        {
          "name": "messages",
          "type": "[string]",
          "required": true,
          "attributes": [],
          "minimum": 1
        },
        {
          "name": "avs",
          "type": "avs",
          "required": false,
          "attributes": [],
          "description": "Specific AVS information if applicable"
        },
        {
          "name": "cvv",
          "type": "cvv",
          "required": false,
          "attributes": [],
          "description": "Specific CVV information if applicable"
        }
      ],
      "attributes": [],
      "description": "Details for why a card was declined"
    },
    {
      "name": "card_form",
      "plural": "card_forms",
      "fields": [
        {
          "name": "number",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Cleartext card number. You must provide either this field or 'cipher', but not both. May contain integers only or integers with dashes. If dashes are provided, we will remove them, storing only the raw number.",
          "example": "4111111111111111 or 4111-1111-1111-1111"
        },
        {
          "name": "cipher",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Card number encrypted using your assigned public key. You must provide either this field or 'number', but not both. Card number itself may contain integers only or integers with dashes. If dashes are provided, we will remove them, storing only the raw number."
        },
        {
          "name": "expiration_month",
          "type": "integer",
          "required": true,
          "attributes": [],
          "description": "The month of expiration expressed as a number. 1 = January, 12 = December",
          "minimum": 1,
          "maximum": 12,
          "example": "4"
        },
        {
          "name": "expiration_year",
          "type": "integer",
          "required": true,
          "attributes": [],
          "description": "The 4 digit expiration year",
          "example": "2016"
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Cardholder name."
        },
        {
          "name": "cvv",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The card verification number for the card that is used to verify the card details at creation time, making cvv optional for future payment authorizations."
        },
        {
          "name": "address",
          "type": "address",
          "required": false,
          "attributes": [],
          "description": "Cardholder billing address"
        },
        {
          "name": "ip",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "The IP address of the consumer",
          "example": "96.242.151.245"
        },
        {
          "name": "challenge_text",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "When providing a cipher, you can optionally provide a challenge text and challenge cipher that will allow us to verify that client side encryption worked properly, returning better error messages in some cases. The Flow JavaScript API uses the challenge to verify that the assymetric encryption is working properly in the client."
        },
        {
          "name": "challenge_cipher",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "When providing a cipher, you can optionally provide a challenge text and challenge cipher that will allow us to verify that client side encryption worked properly, returning better error messages in some cases. The Flow JavaScript API uses the challenge to verify that the assymetric encryption is working properly in the client."
        }
      ],
      "attributes": []
    },
    {
      "name": "card_nonce_form",
      "plural": "card_nonce_forms",
      "fields": [
        {
          "name": "token",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The one time card nonce to exchange for a permanent card token. This value will start with F17",
          "example": "F17JNt5CXc0TsY8txqTRx9F40Cqn5YuQ30PkIMTTnnJSxLsmGmeDOrJ2wr4h"
        }
      ],
      "attributes": [],
      "description": "The card nonce form presents a one time token to exchance server side for a permanent, secure tokenized card"
    },
    {
      "name": "card_reference",
      "plural": "card_references",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "token",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "card_upserted",
      "plural": "card_upserteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "type",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "expiration",
          "type": "object",
          "required": true,
          "attributes": []
        },
        {
          "name": "iin",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "last4",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "address",
          "type": "object",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "card_upserted_v2",
      "plural": "card_upserted_v2s",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "card",
          "type": "card",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "card_version",
      "plural": "card_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "card",
          "type": "card",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "carrier",
      "plural": "carriers",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "DHL, Fedex, etc."
        },
        {
          "name": "facilities",
          "type": "[shipping_address]",
          "required": true,
          "attributes": [],
          "description": "List of facilities available for consolidation"
        },
        {
          "name": "visibility",
          "type": "visibility",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Partner that actually take a shipment between places (ex: FedEx, DHL, SF Express)"
    },
    {
      "name": "carrier_reference",
      "plural": "carrier_references",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "cart_reference",
      "plural": "cart_references",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Equivalent of the cart token"
        }
      ],
      "attributes": []
    },
    {
      "name": "catalog",
      "plural": "catalogs",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "catalog_deleted",
      "plural": "catalog_deleteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "catalog",
          "type": "string",
          "required": true,
          "attributes": [],
          "example": "master"
        }
      ],
      "attributes": []
    },
    {
      "name": "catalog_feed",
      "plural": "catalog_feeds",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "experience_feed_summaries",
          "type": "[experience_feed_summary]",
          "required": true,
          "attributes": []
        },
        {
          "name": "incoming_feed",
          "type": "incoming_feed",
          "required": true,
          "attributes": [],
          "description": "When augmenting a feed, indicates the details of the the augmented feed."
        },
        {
          "name": "outgoing_feed",
          "type": "outgoing_feed",
          "required": true,
          "attributes": [],
          "description": "Indicates the details of the outgoing feed."
        },
        {
          "name": "feed_statistics_summary",
          "type": "feed_statistics_summary",
          "required": true,
          "attributes": [],
          "description": "Statistics about the feed."
        }
      ],
      "attributes": [],
      "description": "Describes a catalog feed."
    },
    {
      "name": "catalog_feed_form_post",
      "plural": "catalog_feed_form_posts",
      "fields": [
        {
          "name": "experience_keys",
          "type": "[string]",
          "required": true,
          "attributes": [],
          "description": "Experiences to produce feeds for. You can specify either '*' to select all experiences, or specify experience keys.",
          "example": "'*', 'france'"
        },
        {
          "name": "incoming_feed",
          "type": "incoming_feed",
          "required": true,
          "attributes": [],
          "description": "When augmenting a feed, indicates the details of the the augmented feed."
        },
        {
          "name": "outgoing_feed_form",
          "type": "outgoing_feed",
          "required": true,
          "attributes": [],
          "description": "Indicates the details of the outgoing feed."
        }
      ],
      "attributes": [],
      "description": "Specify a catalog feed for one or more experiences."
    },
    {
      "name": "catalog_feed_form_put",
      "plural": "catalog_feed_form_puts",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "experience_keys",
          "type": "[string]",
          "required": true,
          "attributes": [],
          "description": "Experiences to produce feeds for. You can specify either '*' to select all experiences, or specify experience keys.",
          "example": "'*', 'france'"
        },
        {
          "name": "incoming_feed",
          "type": "incoming_feed",
          "required": true,
          "attributes": [],
          "description": "When augmenting a feed, indicates the details of the the augmented feed."
        },
        {
          "name": "outgoing_feed_form",
          "type": "outgoing_feed",
          "required": true,
          "attributes": [],
          "description": "Indicates the details of the outgoing feed."
        }
      ],
      "attributes": [],
      "description": "Specify a catalog feed for one or more experiences."
    },
    {
      "name": "catalog_item_deleted",
      "plural": "catalog_item_deleteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Client's unique identifier for this object"
        },
        {
          "name": "catalog",
          "type": "string",
          "required": true,
          "attributes": [],
          "example": "master"
        }
      ],
      "attributes": []
    },
    {
      "name": "catalog_item_document",
      "plural": "catalog_item_documents",
      "fields": [
        {
          "name": "number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Client's unique identifier for this object"
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "categories",
          "type": "[string]",
          "required": true,
          "attributes": [],
          "minimum": 0
        },
        {
          "name": "experiences",
          "type": "[experience_summary]",
          "required": true,
          "attributes": [],
          "minimum": 0
        },
        {
          "name": "attributes",
          "type": "map[string]",
          "required": true,
          "attributes": [],
          "minimum": 0
        },
        {
          "name": "images",
          "type": "catalog_item_document_images",
          "required": true,
          "attributes": [],
          "description": "Available images"
        }
      ],
      "attributes": []
    },
    {
      "name": "catalog_item_document_images",
      "plural": "catalog_item_document_images",
      "fields": [
        {
          "name": "thumbnail",
          "type": "image",
          "required": false,
          "attributes": [],
          "description": "The thumbnail image is the first image associated with the item that has a tag named 'thumbnail'"
        }
      ],
      "attributes": []
    },
    {
      "name": "catalog_item_export_type",
      "plural": "catalog_item_export_types",
      "fields": [
        {
          "name": "numbers",
          "type": "[string]",
          "required": false,
          "attributes": [],
          "description": "The specific list of item numbers to export"
        },
        {
          "name": "q",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "If specified, we select items by executing this search query"
        },
        {
          "name": "sort",
          "type": "string",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Defines the filters that can be applied when requesting a catalog item data export"
    },
    {
      "name": "catalog_item_summary",
      "plural": "catalog_item_summaries",
      "fields": [
        {
          "name": "number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Client's unique identifier for this object"
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "attributes",
          "type": "map[string]",
          "required": true,
          "attributes": [],
          "minimum": 0
        }
      ],
      "attributes": []
    },
    {
      "name": "catalog_item_upserted",
      "plural": "catalog_item_upserteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Client's unique identifier for this object"
        },
        {
          "name": "catalog",
          "type": "string",
          "required": true,
          "attributes": [],
          "example": "master"
        },
        {
          "name": "locale",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "currency",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "price",
          "type": "double",
          "required": true,
          "attributes": []
        },
        {
          "name": "categories",
          "type": "[string]",
          "required": true,
          "attributes": []
        },
        {
          "name": "description",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "attributes",
          "type": "map[string]",
          "required": true,
          "attributes": []
        },
        {
          "name": "dimensions",
          "type": "object",
          "required": true,
          "attributes": []
        },
        {
          "name": "images",
          "type": "[object]",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "catalog_reference",
      "plural": "catalog_references",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "catalog_statistics",
      "plural": "catalog_statisticses",
      "fields": [
        {
          "name": "items",
          "type": "long",
          "required": true,
          "attributes": [],
          "description": "Total number of catalog items available from master catalog"
        },
        {
          "name": "categories",
          "type": "long",
          "required": true,
          "attributes": [],
          "description": "Distinct number of catalog item categories"
        }
      ],
      "attributes": [],
      "description": "Statistics covering product catalog item information, including total catalog item count, number of distinct categories, etc."
    },
    {
      "name": "catalog_upserted",
      "plural": "catalog_upserteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "catalog",
          "type": "string",
          "required": true,
          "attributes": [],
          "example": "master"
        }
      ],
      "attributes": []
    },
    {
      "name": "catalog_version",
      "plural": "catalog_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "catalog",
          "type": "catalog",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "category_summary",
      "plural": "category_summaries",
      "fields": [
        {
          "name": "name",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "The category, if known. If there is no category name, this indicates that the items in this bucket do not belong to any categories."
        },
        {
          "name": "count",
          "type": "long",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "center",
      "plural": "centers",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "key",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The key to use. If not provided, we will generate a unique key based on the name."
        },
        {
          "name": "address",
          "type": "shipping_address",
          "required": true,
          "attributes": [],
          "description": "Shipping address used for the 'from' field in generating carrier labels and customs-related documentation such as the CN22 or commercial invoice."
        },
        {
          "name": "packaging",
          "type": "[packaging]",
          "required": true,
          "attributes": [],
          "description": "Available types of packaging for shipment at this center"
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Long name of the facility. ex: Fosdick CT, Quiet Logistics Andover"
        },
        {
          "name": "services",
          "type": "[available_service]",
          "required": true,
          "attributes": [],
          "description": "List of carrier service levels available at this center"
        },
        {
          "name": "schedule",
          "type": "schedule",
          "required": true,
          "attributes": [],
          "description": "Schedule of the origin center where shipment is originating. Contains normal operating hours, holiday periods, and cutoff."
        },
        {
          "name": "timezone",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The timezone name. Case insensitive. See https://api.flow.io/reference/timezones"
        }
      ],
      "attributes": [],
      "description": "Represents a facility capable of fulfilling a shipment"
    },
    {
      "name": "center_form",
      "plural": "center_forms",
      "fields": [
        {
          "name": "address",
          "type": "shipping_address",
          "required": true,
          "attributes": [],
          "description": "Shipping address used for the 'from' field in generating carrier labels and customs-related documentation such as the CN22 or commercial invoice."
        },
        {
          "name": "packaging",
          "type": "[packaging]",
          "required": true,
          "attributes": [],
          "description": "Available types of packaging for shipment at this center"
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Organization-provided name for the center",
          "minimum": 3
        },
        {
          "name": "services",
          "type": "[available_service]",
          "required": true,
          "attributes": [],
          "description": "List of carrier service levels available at this center"
        },
        {
          "name": "schedule",
          "type": "schedule",
          "required": true,
          "attributes": [],
          "description": "Schedule of the origin center where shipment is originating. Contains normal operating hours, holiday periods, and cutoff."
        },
        {
          "name": "timezone",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "The timezone name. Case insensitive. See https://api.flow.io/reference/timezones. If not explicitly provided, Flow will estimate the timezone based on address of the Center."
        },
        {
          "name": "key",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "The key to use. If not provided, we will generate a unique key based on the name."
        }
      ],
      "attributes": []
    },
    {
      "name": "center_summary",
      "plural": "center_summaries",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "key",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "center_version",
      "plural": "center_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "center",
          "type": "center",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "cleartext",
      "plural": "cleartexts",
      "fields": [
        {
          "name": "value",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The actual cleartext value of the token"
        }
      ],
      "attributes": [],
      "description": "The actual value of the API token. This is modeled as a separate resource as it is fetched only on demand."
    },
    {
      "name": "contact",
      "plural": "contacts",
      "fields": [
        {
          "name": "name",
          "type": "name",
          "required": true,
          "attributes": [],
          "description": "Personal information of point-of-contact"
        },
        {
          "name": "company",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Busisiness entity or organization name of this contact"
        },
        {
          "name": "email",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "phone",
          "type": "string",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Defines structured fields for a contact person. Typically used for specifying contact person for an account, shipment, or organization representative"
    },
    {
      "name": "country",
      "plural": "countries",
      "fields": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": [],
          "example": "United States of America"
        },
        {
          "name": "iso_3166_2",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "ISO 3166 2-character country code. See https://api.flow.io/reference/countries",
          "example": "US"
        },
        {
          "name": "iso_3166_3",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "ISO 3166 3-character country code. See https://api.flow.io/reference/countries",
          "example": "USA"
        },
        {
          "name": "languages",
          "type": "[string]",
          "required": true,
          "attributes": [],
          "description": "A list of the languages spoken in this country",
          "minimum": 0
        },
        {
          "name": "measurement_system",
          "type": "string",
          "required": true,
          "attributes": [],
          "example": "metric or imperial"
        },
        {
          "name": "default_currency",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "ISO 4217 3-character currency code. See https://api.flow.io/reference/currencies",
          "example": "USD"
        },
        {
          "name": "timezones",
          "type": "[string]",
          "required": true,
          "attributes": [],
          "description": "A list of canonical timezone IDs for the country. See http://joda-time.sourceforge.net/timezones.html",
          "example": "America/New_York"
        },
        {
          "name": "default_delivered_duty",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Default delivered duty value. See https://en.wikipedia.org/wiki/Incoterms for more information",
          "example": "unpaid"
        }
      ],
      "attributes": [],
      "description": "ISO 3166 country codes. Note Flow APIs will accept either the 2 or 3 character country code, but internally we normalize data and store as the 3 character, upper case ISO code. See https://api.flow.io/reference/countries"
    },
    {
      "name": "country_defaults",
      "plural": "country_defaults",
      "fields": [
        {
          "name": "country",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The ISO 3166-3 code for the country. Case insensitive. See https://api.flow.io/reference/countries",
          "example": "CAN"
        },
        {
          "name": "currency",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The default currency for this country as a ISO 4217 3 currency code as defined in https://api.flow.io/reference/currencies",
          "example": "CAD"
        },
        {
          "name": "language",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The default language for this country as a ISO 639 2 language code as defined in https://api.flow.io/reference/languages",
          "example": "fr"
        }
      ],
      "attributes": [],
      "description": "Provides country level default settings for currency, language, etc."
    },
    {
      "name": "credit_payment",
      "plural": "credit_payments",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "order",
          "type": "expandable_order",
          "required": true,
          "attributes": []
        },
        {
          "name": "key",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "description",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Description to show to the user describing the source of this credit payment"
        },
        {
          "name": "value",
          "type": "price_with_base",
          "required": true,
          "attributes": [],
          "description": "The value of the credit in the local and base currencies of the associated order. This value will match the original credit payment if the currency is the same as the order or otherwise will match the currency of the order"
        },
        {
          "name": "original",
          "type": "price",
          "required": true,
          "attributes": [],
          "description": "The original value and currency of the store credit"
        },
        {
          "name": "attributes",
          "type": "map[string]",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "A Credit Payment records a 'non cash' payment against an order (e.g. a store credit, gift card, etc.), recording the amount of that credit and additional details to reconcile payments. The primary purpose of the credit payment is to record that a payment has been made against an order so the remaining balance can be correctly computed."
    },
    {
      "name": "credit_payment_error",
      "plural": "credit_payment_errors",
      "fields": [
        {
          "name": "code",
          "type": "credit_payment_error_code",
          "required": true,
          "attributes": []
        },
        {
          "name": "messages",
          "type": "[string]",
          "required": true,
          "attributes": [],
          "minimum": 1
        },
        {
          "name": "codes",
          "type": "[credit_payment_error_code]",
          "required": true,
          "attributes": [],
          "minimum": 1
        }
      ],
      "attributes": []
    },
    {
      "name": "credit_payment_form",
      "plural": "credit_payment_forms",
      "fields": [
        {
          "name": "order_number",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "key",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "If provided, a unique key to identify this credit payment in your systems. This key is used to implement idempotency"
        },
        {
          "name": "description",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Description to show to the user describing the source of this credit payment"
        },
        {
          "name": "amount",
          "type": "decimal",
          "required": true,
          "attributes": []
        },
        {
          "name": "currency",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The ISO-4217 3 character currency code in which the amount is calculated."
        },
        {
          "name": "attributes",
          "type": "map[string]",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "credit_payment_put_form",
      "plural": "credit_payment_put_forms",
      "fields": [
        {
          "name": "order_number",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "description",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Description to show to the user describing the source of this credit payment"
        },
        {
          "name": "amount",
          "type": "decimal",
          "required": true,
          "attributes": []
        },
        {
          "name": "currency",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The ISO-4217 3 character currency code in which the amount is calculated."
        },
        {
          "name": "attributes",
          "type": "map[string]",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "credit_payment_version",
      "plural": "credit_payment_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "credit_payment",
          "type": "credit_payment",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "currency",
      "plural": "currencies",
      "fields": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": [],
          "example": "US Dollar"
        },
        {
          "name": "iso_4217_3",
          "type": "string",
          "required": true,
          "attributes": [],
          "example": "USD"
        },
        {
          "name": "number_decimals",
          "type": "integer",
          "required": true,
          "attributes": [],
          "description": "The number of decimal places used by the given currency. For example, USD has 2 decimals while JPY has 0.",
          "minimum": 0
        },
        {
          "name": "symbols",
          "type": "currency_symbols",
          "required": false,
          "attributes": []
        },
        {
          "name": "default_locale",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "The locale id of the default locale to use when rendering this currency"
        }
      ],
      "attributes": [],
      "description": "ISO 4217 3-character currency code. See https://api.flow.io/reference/currencies"
    },
    {
      "name": "currency_symbols",
      "plural": "currency_symbolses",
      "fields": [
        {
          "name": "primary",
          "type": "string",
          "required": true,
          "attributes": [],
          "example": "A$"
        },
        {
          "name": "narrow",
          "type": "string",
          "required": false,
          "attributes": [],
          "example": "$"
        }
      ],
      "attributes": [],
      "description": "Defines one or more symbols representing this currency"
    },
    {
      "name": "customer",
      "plural": "customers",
      "fields": [
        {
          "name": "name",
          "type": "name",
          "required": true,
          "attributes": []
        },
        {
          "name": "number",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Client's unique identifier for this object"
        },
        {
          "name": "phone",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Customer phone number. Useful for both fraud and order delivery."
        },
        {
          "name": "email",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Customer email address. Useful for fraud."
        }
      ],
      "attributes": [],
      "description": "A customer represents the actual person purchasing from you. This information is needed primarily to support logistics (delivery to this person), fraud management (verification of who the person is), and reporting. We also recommend including your customer number whenever possible as doing so will allow Flow to link up transactions for this customer making customer service easier."
    },
    {
      "name": "cvv",
      "plural": "cvvs",
      "fields": [
        {
          "name": "code",
          "type": "cvv_code",
          "required": true,
          "attributes": []
        },
        {
          "name": "description",
          "type": "string",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Represents the card verification results"
    },
    {
      "name": "datetime_range",
      "plural": "datetime_ranges",
      "fields": [
        {
          "name": "from",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "to",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "delivered_duty_setting",
      "plural": "delivered_duty_settings",
      "fields": [
        {
          "name": "default",
          "type": "delivered_duty",
          "required": true,
          "attributes": [],
          "description": "Default delivered duty setting based on experience default settings and reference data."
        },
        {
          "name": "available",
          "type": "[delivered_duty]",
          "required": true,
          "attributes": [],
          "description": "Available delivered duty options to pick."
        }
      ],
      "attributes": []
    },
    {
      "name": "delivery_option",
      "plural": "delivery_options",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "cost",
          "type": "price_with_base",
          "required": true,
          "attributes": [],
          "description": "Actual shipping cost to be charged to the merchant by Flow"
        },
        {
          "name": "delivered_duty",
          "type": "delivered_duty",
          "required": true,
          "attributes": []
        },
        {
          "name": "price",
          "type": "price_with_base",
          "required": true,
          "attributes": [],
          "description": "Price of shipping to be used for the end-customer selecting this option. Can be actual cost, etc."
        },
        {
          "name": "service",
          "type": "service_summary",
          "required": true,
          "attributes": []
        },
        {
          "name": "tier",
          "type": "tier_summary",
          "required": true,
          "attributes": []
        },
        {
          "name": "window",
          "type": "delivery_window",
          "required": true,
          "attributes": []
        },
        {
          "name": "rule_outcome",
          "type": "tier_rule_outcome",
          "required": false,
          "attributes": [],
          "description": "Tier rule outcome used to generate the delivery option price. This would be an indication whethere something was a flat rate or at cost."
        },
        {
          "name": "weight",
          "type": "option_weight_estimates",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Represents a way to fulfill a delivery, including an estimates for the date range and cost"
    },
    {
      "name": "delivery_option_form",
      "plural": "delivery_option_forms",
      "fields": [
        {
          "name": "delivery",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "items",
          "type": "[line_item_form]",
          "required": true,
          "attributes": []
        },
        {
          "name": "destination",
          "type": "shipping_address",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Represents a way to fulfill a delivery, including an estimates for the date range and cost"
    },
    {
      "name": "delivery_option_reference",
      "plural": "delivery_option_references",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "delivery_option_summary",
      "plural": "delivery_option_summaries",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "cost",
          "type": "price",
          "required": true,
          "attributes": [],
          "description": "Actual shipping cost to be charged to the merchant by Flow"
        },
        {
          "name": "delivered_duty",
          "type": "delivered_duty",
          "required": true,
          "attributes": []
        },
        {
          "name": "price",
          "type": "price",
          "required": true,
          "attributes": [],
          "description": "Price of shipping to be used for the end-customer selecting this option. Can be actual cost, etc."
        },
        {
          "name": "service",
          "type": "service_reference",
          "required": true,
          "attributes": []
        },
        {
          "name": "tier",
          "type": "tier_reference",
          "required": true,
          "attributes": []
        },
        {
          "name": "window",
          "type": "datetime_range",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "delivery_option_version",
      "plural": "delivery_option_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "delivery_option",
          "type": "delivery_option_summary",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "delivery_summary",
      "plural": "delivery_summaries",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "items",
          "type": "[line_item_form]",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "delivery_version",
      "plural": "delivery_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "delivery",
          "type": "delivery_summary",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "delivery_window",
      "plural": "delivery_windows",
      "fields": [
        {
          "name": "from",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "to",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "label",
          "type": "string",
          "required": false,
          "attributes": [],
          "example": "1-3 days"
        }
      ],
      "attributes": []
    },
    {
      "name": "deminimis_per_item",
      "plural": "deminimis_per_items",
      "fields": [
        {
          "name": "currency",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The ISO-4217 3 character currency code in which the value is calculated"
        },
        {
          "name": "minimum",
          "type": "decimal",
          "required": false,
          "attributes": [],
          "description": "If specified, the minimum amount due per item",
          "minimum": 0
        },
        {
          "name": "maximum",
          "type": "decimal",
          "required": false,
          "attributes": [],
          "description": "If specified, the maximum amount due per item",
          "minimum": 0
        }
      ],
      "attributes": [],
      "description": "De Minimis per item describes rules which require minimum and/or maximum values per item"
    },
    {
      "name": "deminimis_simple",
      "plural": "deminimis_simples",
      "fields": [
        {
          "name": "value",
          "type": "decimal",
          "required": false,
          "attributes": [],
          "description": "The value below which no tax or duty is collected, which is a sum of the values associated with the de minimis components."
        },
        {
          "name": "currency",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The ISO-4217 3 character currency code in which the value is calculated."
        },
        {
          "name": "components",
          "type": "[levy_component]",
          "required": true,
          "attributes": [],
          "description": "The components that are used to determine the value. Note that these components may be different from the components for the VAT or duty itself."
        },
        {
          "name": "minimum",
          "type": "decimal",
          "required": false,
          "attributes": [],
          "description": "If the calculated VAT or duty amount is less than the minimum, no VAT or duty is owed. In other words, this is the minimum payable amount.",
          "minimum": 0
        }
      ],
      "attributes": [],
      "description": "De Minimis for most common example which includes a value threshold and rules on what components are used in the duty calculation"
    },
    {
      "name": "digital_delivery",
      "plural": "digital_deliveries",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "items",
          "type": "[line_item_form]",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Represents a collection of items that are digitally available and do not require a physical shipment"
    },
    {
      "name": "dimension",
      "plural": "dimensions",
      "fields": [
        {
          "name": "depth",
          "type": "measurement",
          "required": false,
          "attributes": []
        },
        {
          "name": "diameter",
          "type": "measurement",
          "required": false,
          "attributes": []
        },
        {
          "name": "length",
          "type": "measurement",
          "required": false,
          "attributes": []
        },
        {
          "name": "weight",
          "type": "measurement",
          "required": false,
          "attributes": []
        },
        {
          "name": "width",
          "type": "measurement",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "dimensions",
      "plural": "dimensionses",
      "fields": [
        {
          "name": "product",
          "type": "dimension",
          "required": false,
          "attributes": []
        },
        {
          "name": "packaging",
          "type": "dimension",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "direct_authorization_form",
      "plural": "direct_authorization_forms",
      "fields": [
        {
          "name": "token",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The token of the payment method to use when authorizing this transaction"
        },
        {
          "name": "amount",
          "type": "decimal",
          "required": true,
          "attributes": [],
          "description": "The amount to authorize",
          "example": "120.38"
        },
        {
          "name": "currency",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The ISO 4217-3 code for the currency. Case insensitive. See https://api.flow.io/reference/currencies",
          "example": "CAD"
        },
        {
          "name": "customer",
          "type": "customer",
          "required": false,
          "attributes": [],
          "description": "The customer who is actually making the purchase. While optional, providing name and email at a minimum will significantly increase the acceptance rate."
        },
        {
          "name": "key",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Your unique identifier for this transaction, which if provided is used to implement idempotency. If not provided, we will assign."
        },
        {
          "name": "cvv",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "The card verification number. Note this number is never stored and thus is presented on each auth. Presenting the CVV may increase acceptance rates"
        },
        {
          "name": "attributes",
          "type": "map[string]",
          "required": false,
          "attributes": [],
          "description": "A set of key/value pairs that you can attach to an authorization object"
        },
        {
          "name": "destination",
          "type": "address",
          "required": false,
          "attributes": [],
          "description": "Destination address, if relevant"
        },
        {
          "name": "ip",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "The IP address of the consumer",
          "example": "96.242.151.245"
        },
        {
          "name": "options",
          "type": "[authorization_option]",
          "required": false,
          "attributes": [],
          "description": "Optional behaviors to enable for this authorization"
        }
      ],
      "attributes": [],
      "description": "Creates an authorization for a transaction in which you remain the merchant of record. An authorization is used to check and reserve funds w/ a given payment method. No funds are actually transferred; once you have you an authorization, you can capture up to the amount of the authorization."
    },
    {
      "name": "duration",
      "plural": "durations",
      "fields": [
        {
          "name": "unit",
          "type": "unit_of_time",
          "required": true,
          "attributes": []
        },
        {
          "name": "value",
          "type": "long",
          "required": true,
          "attributes": [],
          "minimum": 0
        }
      ],
      "attributes": [],
      "description": "Represents a duration of time."
    },
    {
      "name": "duty",
      "plural": "duties",
      "fields": [
        {
          "name": "rate",
          "type": "decimal",
          "required": true,
          "attributes": [],
          "description": "The combined duty rate. A value of 25 indicates a duty rate of 25%",
          "minimum": 0,
          "example": "25"
        },
        {
          "name": "components",
          "type": "[levy_component]",
          "required": true,
          "attributes": [],
          "description": "The components to which duty is applied.",
          "minimum": 1
        },
        {
          "name": "deminimis",
          "type": "deminimis",
          "required": false,
          "attributes": [],
          "description": "Describes the duty de minimis if there is one for this destination"
        }
      ],
      "attributes": [],
      "description": "Represents a simple model of duties that apply to a given item / trade lane."
    },
    {
      "name": "email_verification",
      "plural": "email_verifications",
      "fields": [
        {
          "name": "email",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Represents the successful response of an email verification token. We return the email address in this case to allow the UI to display which email address was verified."
    },
    {
      "name": "estimated_window",
      "plural": "estimated_windows",
      "fields": [
        {
          "name": "from",
          "type": "long",
          "required": true,
          "attributes": []
        },
        {
          "name": "to",
          "type": "long",
          "required": true,
          "attributes": []
        },
        {
          "name": "unit",
          "type": "unit_of_time",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Range of time given a from and to number and the unit. For example: 1-4 hours or 4-7 days"
    },
    {
      "name": "exception",
      "plural": "exceptions",
      "fields": [
        {
          "name": "type",
          "type": "exception_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "datetime_range",
          "type": "datetime_range",
          "required": true,
          "attributes": [],
          "description": "Range for the holiday. For single-day holidays, from and to should just be the same.",
          "example": "2016/12/24 12:00 am to 2016/12/25 11:59 pm"
        }
      ],
      "attributes": [],
      "description": "Represents an exception to the schedule of a center."
    },
    {
      "name": "experience",
      "plural": "experiences",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "key",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "delivered_duty",
          "type": "delivered_duty",
          "required": true,
          "attributes": [],
          "description": "Determines if a given experience should be DDP, DDU, or customer choice. If DDP, note that in some cases if a customer is shipping to a country where DDP is not available, information may still come back as DDU"
        },
        {
          "name": "region",
          "type": "region_reference",
          "required": true,
          "attributes": [],
          "description": "Reference to region as defined in https://api.flow.io/reference/regions",
          "example": "can or eurozone"
        },
        {
          "name": "country",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "When otherwise not known, the default country to use for this experience. One example would be an experience setup for Europe - when you request landed cost, if there is no geolocation information available, we will use this country as the basis for landed cost. ISO 3166 3 currency code as defined in https://api.flow.io/reference/countries",
          "example": "CAN"
        },
        {
          "name": "currency",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "This currency defines the base currency for all pricing related features - e.g. pricing functions. ISO 4217 3 currency code as defined in https://api.flow.io/reference/currencies",
          "example": "CAD"
        },
        {
          "name": "language",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The default language to use for when displaying products, e.g. to display product information in this language by default. ISO 639 2 language code as defined in https://api.flow.io/reference/languages",
          "example": "en"
        },
        {
          "name": "measurement_system",
          "type": "measurement_system",
          "required": true,
          "attributes": []
        },
        {
          "name": "subcatalog",
          "type": "subcatalog_reference",
          "required": true,
          "attributes": []
        },
        {
          "name": "position",
          "type": "long",
          "required": true,
          "attributes": [],
          "description": "Position of this experience relative to other experiences. Lower position indicates experience should be considered first. Main use is to resolve incoming geolocation data (e.g. ip, country) to pick an experience. We do this by walking through the list of experiences to find the first one that matches the user's geography.",
          "minimum": 0
        },
        {
          "name": "settings",
          "type": "experience_settings",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Experiences define a local experience for a given geographic region"
    },
    {
      "name": "experience_defaults",
      "plural": "experience_defaults",
      "fields": [
        {
          "name": "key",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Default key - guaranteed to be unique"
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Default name for the experience - guaranteed to be unique"
        },
        {
          "name": "delivered_duty",
          "type": "delivered_duty",
          "required": true,
          "attributes": []
        },
        {
          "name": "country",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "currency",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "language",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "measurement_system",
          "type": "measurement_system",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Defines a set of defaults for a given organization and region"
    },
    {
      "name": "experience_deleted",
      "plural": "experience_deleteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "key",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "subcatalog_id",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "experience_feed_summary",
      "plural": "experience_feed_summaries",
      "fields": [
        {
          "name": "experience",
          "type": "experience_reference",
          "required": true,
          "attributes": []
        },
        {
          "name": "url",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The URL where this feed can be accessed after it is constructed."
        },
        {
          "name": "last_construct_date",
          "type": "date-time-iso8601",
          "required": false,
          "attributes": [],
          "description": "The date of the last successful construction of a feed for this experience."
        }
      ],
      "attributes": []
    },
    {
      "name": "experience_form",
      "plural": "experience_forms",
      "fields": [
        {
          "name": "region_id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The actual geographic area to which this experience is targeted. Value is the region Id as defined in https://api.flow.io/reference/regions - To create a 'default' experience, set region_id to 'world'",
          "minimum": 3,
          "example": "can or eurozone or world"
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Name for the experience"
        },
        {
          "name": "delivered_duty",
          "type": "delivered_duty",
          "required": false,
          "attributes": [],
          "description": "Determines if a given experience should be DDP, DDU, or customer choice. If DDP, note that in some cases if a customer is shipping to a country where DDP is not available, information may still come back as DDU. If not provided, Flow will set a base default based on the country"
        },
        {
          "name": "country",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "When otherwise not known, the default country to use for this experience. One example would be an experience setup for Europe - when you request landed cost, if there is no geolocation information available, we will use this country as the basis for landed cost. ISO 3166 3 currency code as defined in https://api.flow.io/reference/countries",
          "example": "CAN"
        },
        {
          "name": "currency",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "The default currency for this experience which will define the currency of the pricing for this experience as well as the default currency displayed when no other information is available. Value is an ISO 4217 3 currency code as defined in https://api.flow.io/reference/currencies",
          "minimum": 3,
          "maximum": 3,
          "example": "CAD"
        },
        {
          "name": "language",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "The default language in which to display information for this experience, when no other information is present. Value is an ISO 639 2 language code as defined in https://api.flow.io/reference/languages",
          "example": "en"
        },
        {
          "name": "key",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "The key to use for this experience. If not provided, we will generate a unique key based on the experience name."
        },
        {
          "name": "measurement_system",
          "type": "measurement_system",
          "required": false,
          "attributes": []
        },
        {
          "name": "subcatalog_id",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "The Id of the subcatalog that will define the specific list of products to offer in this experience. If not specified, a new subcatalog will be created."
        },
        {
          "name": "position",
          "type": "long",
          "required": false,
          "attributes": [],
          "description": "Position of this experience relative to other experiences. Lower position indicates experience should be considered first. Main use is to resolve incoming geolocation data (e.g. ip, country) to pick an experience. We do this by walking through the list of experiences to find the first one that matches the user's geography. If not specified, then defaults to a: if region is not world, the last non world experience or b: If region is world, the end of the list.",
          "minimum": 0
        }
      ],
      "attributes": [],
      "description": "Experiences define a local experience for a given geographic region"
    },
    {
      "name": "experience_geo",
      "plural": "experience_geos",
      "fields": [
        {
          "name": "key",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "region",
          "type": "region_reference",
          "required": true,
          "attributes": [],
          "description": "Reference to region as defined in https://api.flow.io/reference/regions",
          "example": "can or eurozone"
        },
        {
          "name": "country",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "ISO 3166 3 currency code as defined in https://api.flow.io/reference/countries",
          "example": "CAN"
        },
        {
          "name": "currency",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "ISO 4217 3 currency code as defined in https://api.flow.io/reference/currencies",
          "example": "CAD"
        },
        {
          "name": "language",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "ISO 639 2 language code as defined in https://api.flow.io/reference/languages",
          "example": "en"
        },
        {
          "name": "measurement_system",
          "type": "measurement_system",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Experience Geo summarizes an experience along with geographic info"
    },
    {
      "name": "experience_payment_method_rule_form",
      "plural": "experience_payment_method_rule_forms",
      "fields": [
        {
          "name": "payment_method_id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The id of a payment method."
        },
        {
          "name": "tags",
          "type": "[experience_payment_method_tag]",
          "required": true,
          "attributes": [],
          "description": "A collection of active tags for this payment such as whether it is to be displayed at checkout."
        }
      ],
      "attributes": []
    },
    {
      "name": "experience_reference",
      "plural": "experience_references",
      "fields": [
        {
          "name": "key",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "experience_settings",
      "plural": "experience_settingses",
      "fields": [
        {
          "name": "delivered_duty",
          "type": "delivered_duty_setting",
          "required": true,
          "attributes": [],
          "description": "Wrapper for settings around delivered duties. This includes the default for the experience and the choices available for a customer to pick."
        }
      ],
      "attributes": []
    },
    {
      "name": "experience_summary",
      "plural": "experience_summaries",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "key",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Some important fields related to experiences used in various APIs"
    },
    {
      "name": "experience_upserted",
      "plural": "experience_upserteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "key",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "delivered_duty",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "subcatalog_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "region_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "country",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "currency",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "language",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "measurement_system",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "position",
          "type": "long",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "experience_version",
      "plural": "experience_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "experience",
          "type": "experience",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "experiment",
      "plural": "experiments",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "key",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Represents a single experiment / test (e.g. for an incremental rollout or AB Test)"
    },
    {
      "name": "experiment_status",
      "plural": "experiment_statuses",
      "fields": [
        {
          "name": "enabled",
          "type": "boolean",
          "required": true,
          "attributes": [],
          "description": "If true, this experiment is enabled"
        }
      ],
      "attributes": [],
      "description": "Represents a single instance of an experiment (e.g. page request) resulting in a decision as to the status of a given experiment"
    },
    {
      "name": "expiration",
      "plural": "expirations",
      "fields": [
        {
          "name": "month",
          "type": "integer",
          "required": true,
          "attributes": [],
          "description": "The month of expiration expressed as a number. 1 = January, 12 = December",
          "minimum": 1,
          "maximum": 12,
          "example": "4"
        },
        {
          "name": "year",
          "type": "integer",
          "required": true,
          "attributes": [],
          "description": "The 4 digit expiration year",
          "example": "2016"
        }
      ],
      "attributes": [],
      "description": "The month and year at which a card expires"
    },
    {
      "name": "export",
      "plural": "exports",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "type",
          "type": "export_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "status",
          "type": "export_status",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization_q",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Search query to select the organizations for which to export data",
          "example": "'*' or 'environment:production' or 'environment:production id:demo -id:demo2'"
        },
        {
          "name": "created_at",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "started_at",
          "type": "date-time-iso8601",
          "required": false,
          "attributes": []
        },
        {
          "name": "completed_at",
          "type": "date-time-iso8601",
          "required": false,
          "attributes": []
        },
        {
          "name": "url",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Once this export is complete, this will be the URL at which the data are available for download. URLs are in s3 and will expire (currently after 7 days)"
        },
        {
          "name": "deliveries",
          "type": "[export_delivery]",
          "required": true,
          "attributes": [],
          "description": "Optionally specify 1 or more delivery mechanisms for the export - e.g. send an email once ready"
        }
      ],
      "attributes": [],
      "description": "Exports represent data extraction requests (e.g. download my catalog items to a CSV file)"
    },
    {
      "name": "export_delivery_email",
      "plural": "export_delivery_emails",
      "fields": [
        {
          "name": "email",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Triggers an email notification once the requested export is ready"
    },
    {
      "name": "export_form",
      "plural": "export_forms",
      "fields": [
        {
          "name": "type",
          "type": "export_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "emails",
          "type": "[string]",
          "required": false,
          "attributes": [],
          "description": "Once the export has completed, we will send an email notification to all of the emails provided."
        },
        {
          "name": "organization_q",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Search query to select the organizations for which to export data. Defaults to the organization for which the export was created.",
          "example": "'*' or 'environment:production' or 'environment:production id:demo -id:demo2'"
        }
      ],
      "attributes": [],
      "description": "Export forms are used to create exports. The export type defines both the type of the export (e.g. the CSV File format) and the available parameters for each export (e.g. the filters to apply to select the desired data)."
    },
    {
      "name": "export_version",
      "plural": "export_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "export",
          "type": "export",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "feed_statistics_summary",
      "plural": "feed_statistics_summaries",
      "fields": [
        {
          "name": "last_incoming_date",
          "type": "date-time-iso8601",
          "required": false,
          "attributes": [],
          "description": "The date of the last successful access of the incoming feed"
        }
      ],
      "attributes": [],
      "description": "A brief packet of statistics about a live feed. Will be blank for most new feeds."
    },
    {
      "name": "ference",
      "plural": "ferences",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "flat_rate",
      "plural": "flat_rates",
      "fields": [
        {
          "name": "price",
          "type": "price",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Rule outcome where shipping surfaced in quote is pre-defined flat rate"
    },
    {
      "name": "flat_rate_form",
      "plural": "flat_rate_forms",
      "fields": [
        {
          "name": "price",
          "type": "money",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "flow_item_index_metadata",
      "plural": "flow_item_index_metadata",
      "fields": [
        {
          "name": "status",
          "type": "subcatalog_item_status",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "free_shipping",
      "plural": "free_shippings",
      "fields": [
        {
          "name": "trigger",
          "type": "promotion_trigger",
          "required": true,
          "attributes": [],
          "description": "Trigger used to calculate eligibility for free shipping, showing information necessary."
        }
      ],
      "attributes": []
    },
    {
      "name": "fulfillment_experience_reference",
      "plural": "fulfillment_experience_references",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "currency",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "ISO 4217 3 currency code as defined in https://api.flow.io/reference/currencies",
          "example": "USD"
        }
      ],
      "attributes": []
    },
    {
      "name": "generic_error",
      "plural": "generic_errors",
      "fields": [
        {
          "name": "code",
          "type": "generic_error_code",
          "required": true,
          "attributes": [],
          "description": "Generic errors will always have a code set to 'generic_error'",
          "default": "generic_error"
        },
        {
          "name": "messages",
          "type": "[string]",
          "required": true,
          "attributes": [],
          "minimum": 1
        }
      ],
      "attributes": [],
      "description": "An error of some type has occured. The most common error will be validation on input. See messages for details."
    },
    {
      "name": "harmonization_document",
      "plural": "harmonization_documents",
      "fields": [
        {
          "name": "code",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "categories",
          "type": "[category_summary]",
          "required": true,
          "attributes": [],
          "minimum": 1
        },
        {
          "name": "origin",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "ISO 3166 3-character code for country of origin. See https://api.flow.io/reference/countries",
          "example": "USA"
        }
      ],
      "attributes": []
    },
    {
      "name": "harmonization_hs10_export_type",
      "plural": "harmonization_hs10_export_types",
      "fields": [
        {
          "name": "origin",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "The specific origin to export"
        },
        {
          "name": "destination",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "The specific destination to export"
        },
        {
          "name": "numbers",
          "type": "[string]",
          "required": false,
          "attributes": [],
          "description": "The specific list of item numbers to export"
        },
        {
          "name": "has_codes",
          "type": "boolean",
          "required": false,
          "attributes": [],
          "description": "Indicates items with assigned or unassigned codes should be exported"
        },
        {
          "name": "has_origins",
          "type": "boolean",
          "required": false,
          "attributes": [],
          "description": "Indicates items with assigned or unassigned origins should be exported"
        },
        {
          "name": "sort",
          "type": "string",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Exports harmonization HS10 codes"
    },
    {
      "name": "harmonization_hs6_export_type",
      "plural": "harmonization_hs6_export_types",
      "fields": [
        {
          "name": "numbers",
          "type": "[string]",
          "required": false,
          "attributes": [],
          "description": "The specific list of item numbers to export"
        },
        {
          "name": "has_codes",
          "type": "boolean",
          "required": false,
          "attributes": [],
          "description": "Indicates items with assigned or unassigned codes should be exported"
        },
        {
          "name": "sort",
          "type": "string",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Exports HS6 codes"
    },
    {
      "name": "harmonization_overview_export_type",
      "plural": "harmonization_overview_export_types",
      "fields": [
        {
          "name": "origin",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "The specific of origin to export"
        },
        {
          "name": "destination",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "The specific destination to export"
        },
        {
          "name": "sort",
          "type": "string",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Exports HS10 code overview details"
    },
    {
      "name": "harmonization_settings",
      "plural": "harmonization_settings",
      "fields": [
        {
          "name": "duty_strategy",
          "type": "levy_strategy",
          "required": true,
          "attributes": [],
          "description": "Documents what will happen if we are unable to get an actual duty rate for this item, i.e. there will be estimation of some sort",
          "default": "maximum"
        },
        {
          "name": "tax_strategy",
          "type": "levy_strategy",
          "required": true,
          "attributes": [],
          "description": "Documents what will happen if we are unable to get an actual duty rate for this item, i.e. there will be estimation of some sort",
          "default": "maximum"
        }
      ],
      "attributes": [],
      "description": "Organization level settings."
    },
    {
      "name": "harmonization_settings_form",
      "plural": "harmonization_settings_forms",
      "fields": [
        {
          "name": "duty_strategy",
          "type": "levy_strategy",
          "required": false,
          "attributes": []
        },
        {
          "name": "tax_strategy",
          "type": "levy_strategy",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "harmonized_category",
      "plural": "harmonized_categories",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "parent",
          "type": "harmonized_category_reference",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Categories optimized for harmonization"
    },
    {
      "name": "harmonized_category_reference",
      "plural": "harmonized_category_references",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "harmonized_item",
      "plural": "harmonized_items",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Client's unique identifier for this object"
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "categories",
          "type": "[string]",
          "required": true,
          "attributes": [],
          "default": "[]"
        },
        {
          "name": "attributes",
          "type": "map[string]",
          "required": true,
          "attributes": [],
          "default": "{}"
        },
        {
          "name": "description",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Generic description used to harmonize/classify the item and assign hs6 and hs10 codes."
        }
      ],
      "attributes": [],
      "description": "A harmonized item stores explicit information about this item for the purposes of harmonization / classification. The harmonization process begins by creating a harmonized item; this kicks off the internal processes. Once assigned, codes will be available via the hs6 and hs10 resources"
    },
    {
      "name": "harmonized_item_deleted",
      "plural": "harmonized_item_deleteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Client's unique identifier for this object"
        }
      ],
      "attributes": []
    },
    {
      "name": "harmonized_item_duty",
      "plural": "harmonized_item_duties",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "item",
          "type": "harmonized_item_reference",
          "required": true,
          "attributes": []
        },
        {
          "name": "origin",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The ISO 3166 3 character code for the country of origin. Case insensitive. See https://api.flow.io/reference/countries",
          "example": "CHN"
        },
        {
          "name": "destination",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The ISO 3166 3 character code for the destination country. Case insensitive. See https://api.flow.io/reference/countries",
          "example": "CAN"
        },
        {
          "name": "rate",
          "type": "decimal",
          "required": true,
          "attributes": [],
          "description": "The actual duty rate as a percentage. A value of 15, for example, indicates a duty rate of 15%",
          "minimum": 0,
          "example": "15.00"
        }
      ],
      "attributes": [],
      "description": "Used to specifically set an item's duty rate for a given trade lane."
    },
    {
      "name": "harmonized_item_duty_form",
      "plural": "harmonized_item_duty_forms",
      "fields": [
        {
          "name": "number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Client's unique identifier for this object"
        },
        {
          "name": "origin",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The ISO 3166 3 character code for the country of origin. Case insensitive. See https://api.flow.io/reference/countries",
          "example": "CHN"
        },
        {
          "name": "destination",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The ISO 3166 3 character code for the destination country. Case insensitive. See https://api.flow.io/reference/countries",
          "example": "CAN"
        },
        {
          "name": "rate",
          "type": "decimal",
          "required": true,
          "attributes": [],
          "description": "The actual duty rate as a percentage. A value of 15, for example, indicates a duty rate of 15%",
          "minimum": 0,
          "example": "15.00"
        }
      ],
      "attributes": []
    },
    {
      "name": "harmonized_item_duty_version",
      "plural": "harmonized_item_duty_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "harmonized_item_duty",
          "type": "harmonized_item_duty",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "harmonized_item_form",
      "plural": "harmonized_item_forms",
      "fields": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Client's unique identifier for this object"
        },
        {
          "name": "categories",
          "type": "[string]",
          "required": false,
          "attributes": []
        },
        {
          "name": "description",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "attributes",
          "type": "map[string]",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "harmonized_item_put_form",
      "plural": "harmonized_item_put_forms",
      "fields": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "categories",
          "type": "[string]",
          "required": false,
          "attributes": []
        },
        {
          "name": "description",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "attributes",
          "type": "map[string]",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "harmonized_item_reference",
      "plural": "harmonized_item_references",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Client's unique identifier for this object"
        }
      ],
      "attributes": []
    },
    {
      "name": "harmonized_item_upserted",
      "plural": "harmonized_item_upserteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Client's unique identifier for this object"
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "categories",
          "type": "[string]",
          "required": true,
          "attributes": []
        },
        {
          "name": "attributes",
          "type": "map[string]",
          "required": true,
          "attributes": []
        },
        {
          "name": "description",
          "type": "string",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "harmonized_item_version",
      "plural": "harmonized_item_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "harmonized_item",
          "type": "harmonized_item",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "harmonized_landed_cost",
      "plural": "harmonized_landed_costs",
      "fields": [
        {
          "name": "address",
          "type": "address",
          "required": true,
          "attributes": [],
          "description": "The destination address"
        },
        {
          "name": "items",
          "type": "[harmonized_landed_cost_item]",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Summary of landed cost data (taxes and duties) for 1 or more items going to a single destination country. Records are unique based on (item.number, country of origin)."
    },
    {
      "name": "harmonized_landed_cost_form",
      "plural": "harmonized_landed_cost_forms",
      "fields": [
        {
          "name": "address",
          "type": "address",
          "required": true,
          "attributes": [],
          "description": "The destination address. At a minimum, country code is required, but more precise information will lead to more precise rates."
        },
        {
          "name": "item_numbers",
          "type": "[string]",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Allows calculation of duty and tax for multiple items in one API call for items going to a specific destination country"
    },
    {
      "name": "harmonized_landed_cost_item",
      "plural": "harmonized_landed_cost_items",
      "fields": [
        {
          "name": "item",
          "type": "harmonized_item_reference",
          "required": true,
          "attributes": []
        },
        {
          "name": "duty",
          "type": "duty",
          "required": true,
          "attributes": []
        },
        {
          "name": "tax",
          "type": "tax",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Duty and tax information for a given item. Note that the internal implementation supports multiple countries of origin."
    },
    {
      "name": "header",
      "plural": "headers",
      "fields": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "value",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "healthcheck",
      "plural": "healthchecks",
      "fields": [
        {
          "name": "status",
          "type": "string",
          "required": true,
          "attributes": [],
          "example": "healthy"
        }
      ],
      "attributes": []
    },
    {
      "name": "hint_result",
      "plural": "hint_results",
      "fields": [
        {
          "name": "hs10_code",
          "type": "hs10_code",
          "required": true,
          "attributes": [],
          "description": "The actual HS-10 code for a destination country.",
          "example": "392620123"
        },
        {
          "name": "likelihood",
          "type": "decimal",
          "required": true,
          "attributes": [],
          "description": "The likelihood of this code being the correct one for the provided hint. Higher numbers are more likely to be correct. Some types of hint will only return results with a likelihood of 100."
        }
      ],
      "attributes": [],
      "description": "Result of looking up a code using a hint."
    },
    {
      "name": "hs10",
      "plural": "hs10",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "item",
          "type": "harmonized_item_reference",
          "required": true,
          "attributes": [],
          "description": "The item to which this code is assigned"
        },
        {
          "name": "origin",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The ISO 3166 3 character code for the country of origin"
        },
        {
          "name": "destination",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The ISO 3166 3 character code for the destination country"
        },
        {
          "name": "code",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The assigned HS-10 code",
          "minimum": 10
        }
      ],
      "attributes": [],
      "description": "The (Harmonized System) HS-10 code assigned to an item with a given origin/destination pair."
    },
    {
      "name": "hs10_code",
      "plural": "hs10_codes",
      "fields": [
        {
          "name": "code",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The actual HS-10 code for a destination country.",
          "example": "392620123"
        },
        {
          "name": "destination",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The ISO 3166 3 character code for the destination country"
        },
        {
          "name": "parent",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "The parent harmonization code, if there is one.",
          "example": "392620"
        },
        {
          "name": "description",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Description of this code"
        }
      ],
      "attributes": [],
      "description": "Harmonized System codes for specific countries, up to 10 digits (HS-10). Not all countries use all 10 digits of precision."
    },
    {
      "name": "hs10_code_deleted",
      "plural": "hs10_code_deleteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Client's unique identifier for this object"
        },
        {
          "name": "origin",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "ISO 3166 3 character code for country of origin"
        },
        {
          "name": "destination",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "ISO 3166 3 character code for destination country"
        }
      ],
      "attributes": [],
      "description": "Event raised whenever an HS-10 code is unassigned from an item"
    },
    {
      "name": "hs10_code_upserted",
      "plural": "hs10_code_upserteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Client's unique identifier for this object"
        },
        {
          "name": "origin",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "ISO 3166 3 character code for country of origin"
        },
        {
          "name": "destination",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "ISO 3166 3 character code for destination country"
        },
        {
          "name": "code",
          "type": "string",
          "required": true,
          "attributes": [],
          "example": "6209410000"
        }
      ],
      "attributes": [],
      "description": "Event raised whenever an HS-10 code is assigned to an item"
    },
    {
      "name": "hs10_version",
      "plural": "hs10_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "hs10",
          "type": "hs10",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "hs6",
      "plural": "hs6",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "item",
          "type": "harmonized_item_reference",
          "required": true,
          "attributes": [],
          "description": "The item to which this code is assigned"
        },
        {
          "name": "code",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The assigned HS-6 code",
          "minimum": 6,
          "maximum": 6
        }
      ],
      "attributes": [],
      "description": "The (Harmonized System) HS-6 code assigned to an item."
    },
    {
      "name": "hs6_code_deleted",
      "plural": "hs6_code_deleteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Client's unique identifier for this object"
        }
      ],
      "attributes": [],
      "description": "Event raised whenever an HS-6 code is deleted"
    },
    {
      "name": "hs6_code_upserted",
      "plural": "hs6_code_upserteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Client's unique identifier for this object"
        },
        {
          "name": "code",
          "type": "string",
          "required": true,
          "attributes": [],
          "example": "620941"
        }
      ],
      "attributes": [],
      "description": "Event raised whenever an HS-6 code is assigned to an item"
    },
    {
      "name": "hs6_version",
      "plural": "hs6_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "hs6",
          "type": "hs6",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "hs_code",
      "plural": "hs_codes",
      "fields": [
        {
          "name": "code",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The actual HS code",
          "example": "392620"
        },
        {
          "name": "parent",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "The parent harmonization code, if there is one.",
          "example": "3926"
        },
        {
          "name": "description",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Description of this code"
        }
      ],
      "attributes": [],
      "description": "Harmonized System codes, up to 6 digits (HS-6). These codes should be the same for all countries."
    },
    {
      "name": "image",
      "plural": "images",
      "fields": [
        {
          "name": "url",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The full URL to the image",
          "example": "https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png"
        },
        {
          "name": "tags",
          "type": "[string]",
          "required": true,
          "attributes": [],
          "description": "Tags can be used to identify the type of image being sent",
          "default": "[]"
        }
      ],
      "attributes": [],
      "description": "The URL to an image, with optional tags. Flow Commerce primarily uses images to enhance the administrative tools (e.g. showing an item image in console)"
    },
    {
      "name": "image_form",
      "plural": "image_forms",
      "fields": [
        {
          "name": "url",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The full URL to the image",
          "example": "https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png"
        },
        {
          "name": "tags",
          "type": "[string]",
          "required": false,
          "attributes": [],
          "description": "Optional tags that can keep track of which image this is"
        }
      ],
      "attributes": [],
      "description": "Image form defines the data needed to create an image"
    },
    {
      "name": "import",
      "plural": "imports",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "type",
          "type": "import_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "source_url",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The URL from which we download the file to import"
        },
        {
          "name": "status",
          "type": "export_status",
          "required": true,
          "attributes": []
        },
        {
          "name": "created_at",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "started_at",
          "type": "date-time-iso8601",
          "required": false,
          "attributes": []
        },
        {
          "name": "completed_at",
          "type": "date-time-iso8601",
          "required": false,
          "attributes": []
        },
        {
          "name": "results",
          "type": "import_results",
          "required": false,
          "attributes": []
        },
        {
          "name": "deliveries",
          "type": "[export_delivery]",
          "required": true,
          "attributes": [],
          "description": "Optionally specify 1 or more delivery mechanisms for the import - e.g. send an email once ready"
        }
      ],
      "attributes": [],
      "description": "Imports allow you to upload data to Flow via files in batch. Each import fetches data from a given URL. The type of the import determines which file format to expect and what data to update"
    },
    {
      "name": "import_form",
      "plural": "import_forms",
      "fields": [
        {
          "name": "type",
          "type": "import_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "source_url",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "emails",
          "type": "[string]",
          "required": false,
          "attributes": [],
          "description": "Once the import has completed, we will send an email notification to all of the emails provided."
        }
      ],
      "attributes": [],
      "description": "Import forms create imports. The import type defines both the type of the import (e.g. the CSV File format) and the URL at which the source data are available. If you do not have a URL readily available, you can first upload a file via the Flow API - see the resource named 'Upload'"
    },
    {
      "name": "import_results",
      "plural": "import_results",
      "fields": [
        {
          "name": "number_successful",
          "type": "long",
          "required": true,
          "attributes": []
        },
        {
          "name": "number_errors",
          "type": "long",
          "required": true,
          "attributes": []
        },
        {
          "name": "url",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "If there were any errors, this URL wil contain detailed information on the lines that failed to import and why."
        }
      ],
      "attributes": []
    },
    {
      "name": "import_version",
      "plural": "import_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "import",
          "type": "import",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "included_levies",
      "plural": "included_levies",
      "fields": [
        {
          "name": "key",
          "type": "included_levy_key",
          "required": true,
          "attributes": []
        },
        {
          "name": "label",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The label for the included levies that can be displayed as a tooltip on the product detail page."
        }
      ],
      "attributes": []
    },
    {
      "name": "incoming_feed",
      "plural": "incoming_feeds",
      "fields": [
        {
          "name": "url",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "When augmenting a feed, indicates the url we pull from to collect the augmented feed."
        },
        {
          "name": "format",
          "type": "incoming_feed_format",
          "required": true,
          "attributes": [],
          "description": "The format of the feed."
        },
        {
          "name": "minute",
          "type": "integer",
          "required": true,
          "attributes": [],
          "description": "How many minutes past the hour should we attempt to pick up the incoming feed.",
          "default": "55"
        },
        {
          "name": "item_link",
          "type": "item_link",
          "required": true,
          "attributes": [],
          "description": "Describes the field in an incoming catalog feed that will be used to link to a Flow catalog."
        }
      ],
      "attributes": [],
      "description": "Describe a feed incoming to Flow"
    },
    {
      "name": "inventory_backorder",
      "plural": "inventory_backorders",
      "fields": [
        {
          "name": "quantity",
          "type": "long",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Enables backorders, setting an optional number of units that we allow for backorder. For example, a backorder w/ quantity 10 will enable selling until the actual inventory quantity is -10."
    },
    {
      "name": "inventory_center_reference",
      "plural": "inventory_center_references",
      "fields": [
        {
          "name": "key",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "inventory_item_reference",
      "plural": "inventory_item_references",
      "fields": [
        {
          "name": "number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Client's unique identifier for this object"
        }
      ],
      "attributes": []
    },
    {
      "name": "inventory_rule",
      "plural": "inventory_rules",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "position",
          "type": "long",
          "required": true,
          "attributes": [],
          "description": "Order in which rule applicability will be checked"
        },
        {
          "name": "query",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Query to be used to apply this rule. Only '*' is available for now, which will apply to all cases",
          "example": "*"
        },
        {
          "name": "strategy",
          "type": "inventory_strategy",
          "required": true,
          "attributes": [],
          "description": "Type of inventory strategy to be used for this rule",
          "example": "in_stock, backorder"
        }
      ],
      "attributes": [],
      "description": "Ordered list of rules to apply, from first to last, to get available quantity. This is unique per organization"
    },
    {
      "name": "inventory_rule_form",
      "plural": "inventory_rule_forms",
      "fields": [
        {
          "name": "position",
          "type": "long",
          "required": true,
          "attributes": [],
          "description": "Order in which rule applicability will be checked"
        },
        {
          "name": "query",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Query to be used to apply this rule. Only '*' is available for now, which will apply to all cases",
          "example": "*"
        },
        {
          "name": "strategy",
          "type": "inventory_strategy",
          "required": true,
          "attributes": [],
          "description": "Type of inventory strategy to be used for this rule",
          "example": "in_stock, backorder"
        }
      ],
      "attributes": []
    },
    {
      "name": "inventory_rule_version",
      "plural": "inventory_rule_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "inventory_rule",
          "type": "inventory_rule",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "inventory_snapshot",
      "plural": "inventory_snapshots",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "available",
          "type": "long",
          "required": true,
          "attributes": [],
          "description": "Actual available quantity for an item at a given center"
        },
        {
          "name": "center",
          "type": "inventory_center_reference",
          "required": true,
          "attributes": [],
          "description": "Location capable of fulfilling a shipment for item in inventory"
        },
        {
          "name": "item",
          "type": "inventory_item_reference",
          "required": true,
          "attributes": [],
          "description": "Client item being stored in inventory"
        },
        {
          "name": "quantity",
          "type": "long",
          "required": true,
          "attributes": [],
          "description": "Running total of inventory update quantities provided"
        }
      ],
      "attributes": [],
      "description": "Inventory snapshot reflects the current quantity and available number of units for a given center / item"
    },
    {
      "name": "inventory_snapshot_version",
      "plural": "inventory_snapshot_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "inventory_snapshot",
          "type": "inventory_snapshot",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "inventory_stock",
      "plural": "inventory_stocks",
      "fields": [
        {
          "name": "quantity",
          "type": "long",
          "required": true,
          "attributes": [],
          "minimum": 0
        }
      ],
      "attributes": [],
      "description": "Treats inventory as available as long as the actual inventory quantity is > the specified quantity. A common use case is to set quantity to zero to indicate availability as long as there is at least 1 unit available."
    },
    {
      "name": "inventory_unlimited",
      "plural": "inventory_unlimiteds",
      "fields": [
        {
          "name": "quantity",
          "type": "string",
          "required": true,
          "attributes": [],
          "default": "unlimited"
        }
      ],
      "attributes": [],
      "description": "Items affected with rules pursuing an unlimited strategy will always be available"
    },
    {
      "name": "inventory_update",
      "plural": "inventory_updates",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "idempotency_key",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "center",
          "type": "inventory_center_reference",
          "required": true,
          "attributes": [],
          "description": "Location capable of fulfilling a shipment for item in inventory"
        },
        {
          "name": "item",
          "type": "inventory_item_reference",
          "required": true,
          "attributes": [],
          "description": "Client item number being stored in inventory"
        },
        {
          "name": "notes",
          "type": "object",
          "required": true,
          "attributes": []
        },
        {
          "name": "quantity",
          "type": "long",
          "required": true,
          "attributes": [],
          "description": "Amount of the update made"
        },
        {
          "name": "type",
          "type": "update_type",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Represents a single update on inventory quantity"
    },
    {
      "name": "inventory_update_form",
      "plural": "inventory_update_forms",
      "fields": [
        {
          "name": "center",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Center capable of fulfilling a shipment for item in inventory"
        },
        {
          "name": "idempotency_key",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "item_number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Summary about the item being kept in inventory"
        },
        {
          "name": "quantity",
          "type": "long",
          "required": true,
          "attributes": [],
          "description": "Amount of the update to be made"
        },
        {
          "name": "type",
          "type": "update_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "notes",
          "type": "object",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Form used to create an update on inventory. If inventory for center/item has not been previously created, a new row is created for the center/item tuple."
    },
    {
      "name": "inventory_update_version",
      "plural": "inventory_update_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "inventory_update",
          "type": "inventory_update",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "invitation",
      "plural": "invitations",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "organization",
          "type": "expandable_organization",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "email",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The email address to which we send this invitation"
        },
        {
          "name": "name",
          "type": "name",
          "required": true,
          "attributes": []
        },
        {
          "name": "role",
          "type": "role",
          "required": true,
          "attributes": []
        },
        {
          "name": "expiration",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": [],
          "description": "The date / time on which this token expires. Current default is for tokens to live for 1 week"
        }
      ],
      "attributes": [],
      "description": "An invitation via email to a user to join this organization. The user will then walk through a user login/registration process and will immediately become a member of the organization."
    },
    {
      "name": "invitation_error",
      "plural": "invitation_errors",
      "fields": [
        {
          "name": "code",
          "type": "invitation_error_code",
          "required": true,
          "attributes": []
        },
        {
          "name": "messages",
          "type": "[string]",
          "required": true,
          "attributes": [],
          "minimum": 1
        }
      ],
      "attributes": [],
      "description": "Returns information as to why a particular invitation could not be accepted."
    },
    {
      "name": "invitation_form",
      "plural": "invitation_forms",
      "fields": [
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "email",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "name",
          "type": "name",
          "required": false,
          "attributes": []
        },
        {
          "name": "role",
          "type": "role",
          "required": true,
          "attributes": [],
          "default": "member"
        }
      ],
      "attributes": []
    },
    {
      "name": "invitation_version",
      "plural": "invitation_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "invitation",
          "type": "invitation",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "item",
      "plural": "items",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Client's unique identifier for this object"
        },
        {
          "name": "locale",
          "type": "string",
          "required": true,
          "attributes": [],
          "example": "en_US"
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "price",
          "type": "price",
          "required": true,
          "attributes": []
        },
        {
          "name": "categories",
          "type": "[string]",
          "required": true,
          "attributes": [],
          "default": "[]"
        },
        {
          "name": "description",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "attributes",
          "type": "map[string]",
          "required": true,
          "attributes": [],
          "default": "{}"
        },
        {
          "name": "dimensions",
          "type": "dimensions",
          "required": true,
          "attributes": []
        },
        {
          "name": "images",
          "type": "[image]",
          "required": true,
          "attributes": [],
          "default": "[]"
        },
        {
          "name": "local",
          "type": "local",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "The Flow item defines a specific item that can be purchased by a consumer. For many clients, this will map to a Sku."
    },
    {
      "name": "item_form",
      "plural": "item_forms",
      "fields": [
        {
          "name": "number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Client's unique identifier for this object"
        },
        {
          "name": "locale",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The locale in which the content of this item is written.",
          "example": "en_US"
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The customer friendly name of the actual item in the catalog.",
          "example": "Drawstring linen pants"
        },
        {
          "name": "currency",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "ISO 4217 3 currency code as defined in https://api.flow.io/reference/currencies",
          "example": "usd"
        },
        {
          "name": "price",
          "type": "double",
          "required": true,
          "attributes": [],
          "description": "The actual price of the item as offered to a customer. This price must be in the currency specified for this item."
        },
        {
          "name": "categories",
          "type": "[string]",
          "required": false,
          "attributes": [],
          "description": "A list of categories associated with this item."
        },
        {
          "name": "description",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "If provided, the item description is used to improve classification."
        },
        {
          "name": "attributes",
          "type": "map[string]",
          "required": false,
          "attributes": [],
          "description": "Attributes represent all other product data that you have regarding this item. Common attributes include 'country_of_origin', 'color', 'size', 'material', etc. We recommend including as many attributes as possible, even if you are not currently planning to use them."
        },
        {
          "name": "dimensions",
          "type": "dimensions",
          "required": false,
          "attributes": [],
          "description": "If provided, dimensions are used to drive more accurate shipping estimates."
        },
        {
          "name": "images",
          "type": "[image_form]",
          "required": false,
          "attributes": [],
          "description": "If provided, the item images will be used to enhance the user experience in Flow's online tools."
        }
      ],
      "attributes": [],
      "description": "The item form defines the data required to create an item."
    },
    {
      "name": "item_function",
      "plural": "item_functions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "key",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Unique, url friendly key identifying this function"
        },
        {
          "name": "description",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Details of what the item function actually does"
        },
        {
          "name": "code",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Item Functions are javascript code used to calculate the localized price of an additional item. Each function can be associated with an optional query identifying the products to which the function applies. Flow selects the first function matching an item, then uses that function to calculate local prices whenever any data relevant to the item changes (e.g. on update in master catalog, on change in relevant exchange rate, etc.). Item functions are immutable once created."
    },
    {
      "name": "item_function_post_form",
      "plural": "item_function_post_forms",
      "fields": [
        {
          "name": "description",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Details of what the item function actually does"
        },
        {
          "name": "code",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "key",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Unique key to identify this function. If not specified, generated server side as the lowercase, hex encoded, Sha-256 of the source code itself"
        }
      ],
      "attributes": [],
      "description": "Item Functions are javascript code used to calculate the localized price of an additional item. Each function can be associated with an optional query identifying the products to which the function applies. Flow selects the first function matching an item, then uses that function to calculate local prices whenever any data relevant to the item changes (e.g. on update in master catalog, on change in relevant exchange rate, etc.). Item functions are immutable once created."
    },
    {
      "name": "item_function_put_form",
      "plural": "item_function_put_forms",
      "fields": [
        {
          "name": "description",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Details of what the item function actually does"
        },
        {
          "name": "code",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Item Functions are javascript code used to calculate the localized price of an additional item. Each function can be associated with an optional query identifying the products to which the function applies. Flow selects the first function matching an item, then uses that function to calculate local prices whenever any data relevant to the item changes (e.g. on update in master catalog, on change in relevant exchange rate, etc.). Item functions are immutable once created."
    },
    {
      "name": "item_function_reference",
      "plural": "item_function_references",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "item_function_version",
      "plural": "item_function_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "item_function",
          "type": "item_function",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "item_link",
      "plural": "item_links",
      "fields": [
        {
          "name": "incoming_field_name",
          "type": "incoming_field_name",
          "required": true,
          "attributes": [],
          "description": "Describes the field in an incoming catalog feed that will be used to link to a Flow catalog."
        },
        {
          "name": "flow_field_name",
          "type": "flow_field_name",
          "required": true,
          "attributes": [],
          "description": "Describes the field in a Flow catalog that will be used to link to an incoming catalog feed."
        }
      ],
      "attributes": [],
      "description": "Describes how items from an incoming feed will link with localized items in a Flow catalog to create an outgoing feed."
    },
    {
      "name": "item_margin",
      "plural": "item_margins",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "key",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "q",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The query used to select items to which the margins are applied."
        },
        {
          "name": "fixed",
          "type": "decimal",
          "required": true,
          "attributes": [],
          "description": "A fixed amount to add to an item in the base currency, e.g 1.25.",
          "example": "1.25"
        },
        {
          "name": "percent",
          "type": "decimal",
          "required": true,
          "attributes": [],
          "description": "A percent of the base cost to add, e.g. 2.25 would indicate 2.25%.",
          "example": "2.25"
        },
        {
          "name": "position",
          "type": "long",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Defines a fixed and percent margin to apply to items matching a query."
    },
    {
      "name": "item_margin_deleted",
      "plural": "item_margin_deleteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "item_margin_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "experience_key",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "item_margin_post_form",
      "plural": "item_margin_post_forms",
      "fields": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "q",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "key",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "fixed",
          "type": "decimal",
          "required": false,
          "attributes": [],
          "description": "A fixed amount to add to an item in the base currency, e.g 1.25.",
          "example": "1.25"
        },
        {
          "name": "percent",
          "type": "decimal",
          "required": false,
          "attributes": [],
          "description": "A percent of the base cost to add, e.g. 2.25 would indicate 2.25%.",
          "example": "2.25"
        },
        {
          "name": "position",
          "type": "long",
          "required": false,
          "attributes": [],
          "description": "Defaults to end of list"
        }
      ],
      "attributes": [],
      "description": "A percent and/or fixed margin to apply to items based on query."
    },
    {
      "name": "item_margin_put_form",
      "plural": "item_margin_put_forms",
      "fields": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "q",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "fixed",
          "type": "decimal",
          "required": false,
          "attributes": [],
          "description": "A fixed amount to add to an item in the base currency, e.g 1.25.",
          "example": "1.25"
        },
        {
          "name": "percent",
          "type": "decimal",
          "required": false,
          "attributes": [],
          "description": "A percent of the base cost to add, e.g. 2.25 would indicate 2.25%.",
          "example": "2.25"
        },
        {
          "name": "position",
          "type": "long",
          "required": false,
          "attributes": [],
          "description": "Defaults to end of list"
        }
      ],
      "attributes": [],
      "description": "A percent and/or fixed margin to apply to items based on query."
    },
    {
      "name": "item_margin_upserted",
      "plural": "item_margin_upserteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "item_margin_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "experience_key",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "q",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "fixed",
          "type": "decimal",
          "required": true,
          "attributes": []
        },
        {
          "name": "percent",
          "type": "decimal",
          "required": true,
          "attributes": []
        },
        {
          "name": "position",
          "type": "long",
          "required": true,
          "attributes": []
        },
        {
          "name": "key",
          "type": "string",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "item_margin_version",
      "plural": "item_margin_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "item_margin",
          "type": "item_margin",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "item_origin_deleted",
      "plural": "item_origin_deleteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Client's unique identifier for this object"
        },
        {
          "name": "origin",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "ISO 3166 3 character code for country of origin"
        }
      ],
      "attributes": []
    },
    {
      "name": "item_origin_upserted",
      "plural": "item_origin_upserteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Client's unique identifier for this object"
        },
        {
          "name": "origin",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "ISO 3166 3 character code for country of origin"
        }
      ],
      "attributes": [],
      "description": "Event raised whenever an item is assigned a country of origin. Note that one item may have multiple countries of origin."
    },
    {
      "name": "item_sales_margin_deleted",
      "plural": "item_sales_margin_deleteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "item_sales_margin_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "experience_key",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "item_sales_margin_upserted",
      "plural": "item_sales_margin_upserteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "item_sales_margin_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "experience_key",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "q",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "fixed",
          "type": "decimal",
          "required": true,
          "attributes": []
        },
        {
          "name": "percent",
          "type": "decimal",
          "required": true,
          "attributes": []
        },
        {
          "name": "position",
          "type": "long",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "item_statistics",
      "plural": "item_statisticses",
      "fields": [
        {
          "name": "items",
          "type": "long",
          "required": true,
          "attributes": [],
          "description": "Total number of catalog items available from master catalog"
        },
        {
          "name": "categories",
          "type": "long",
          "required": true,
          "attributes": [],
          "description": "Distinct number of catalog item categories"
        }
      ],
      "attributes": [],
      "description": "Statistics covering product catalog item information, including total catalog item count, number of distinct categories, etc."
    },
    {
      "name": "item_version",
      "plural": "item_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "item",
          "type": "item",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "jsonp_response",
      "plural": "jsonp_responses",
      "fields": [
        {
          "name": "status",
          "type": "integer",
          "required": true,
          "attributes": [],
          "description": "The HTTP response code"
        },
        {
          "name": "headers",
          "type": "map[[string]]",
          "required": true,
          "attributes": [],
          "description": "The HTTP response headers"
        },
        {
          "name": "body",
          "type": "object",
          "required": true,
          "attributes": [],
          "description": "The HTTP response body as a JSON object"
        }
      ],
      "attributes": [],
      "description": "The jsonp_response defines the schema for all Flow APIs calls made over JSONP, providing access to the specific response status, headers, and body from the underlying service.  See https://docs.flow.io/#jsonp for details"
    },
    {
      "name": "label_format_deleted",
      "plural": "label_format_deleteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "experience_key",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "label_format_upserted",
      "plural": "label_format_upserteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "experience_key",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "format",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "label_order_summary",
      "plural": "label_order_summaries",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Client's unique identifier for this object"
        }
      ],
      "attributes": []
    },
    {
      "name": "label_upserted",
      "plural": "label_upserteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "label_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "carrier_tracking_number",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "commercial_invoice",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "flow_tracking_number",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "destination",
          "type": "object",
          "required": true,
          "attributes": []
        },
        {
          "name": "origin",
          "type": "object",
          "required": true,
          "attributes": []
        },
        {
          "name": "carrier",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "service",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "zpl",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "pdf",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "png",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "order",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "carrier_tracking_number_url",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "flow_tracking_number_url",
          "type": "string",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "language",
      "plural": "languages",
      "fields": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": [],
          "example": "English"
        },
        {
          "name": "iso_639_2",
          "type": "string",
          "required": true,
          "attributes": [],
          "example": "en"
        }
      ],
      "attributes": [],
      "description": "ISO 639 2-character language code. See https://api.flow.io/reference/languages"
    },
    {
      "name": "line",
      "plural": "lines",
      "fields": [
        {
          "name": "item_number",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "quantity",
          "type": "long",
          "required": true,
          "attributes": [],
          "minimum": 1
        },
        {
          "name": "price",
          "type": "price_with_base",
          "required": true,
          "attributes": []
        },
        {
          "name": "total",
          "type": "price_with_base",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Provides display data for a line item."
    },
    {
      "name": "line_item",
      "plural": "line_items",
      "fields": [
        {
          "name": "number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Client's unique identifier for this object"
        },
        {
          "name": "quantity",
          "type": "long",
          "required": true,
          "attributes": [],
          "minimum": 1
        },
        {
          "name": "price",
          "type": "money",
          "required": true,
          "attributes": [],
          "description": "The price of this item for this order. If not specified, we will use the item price from the experience. Note that this price represents the price of a single line item - the total price to the consumer will be quantity * price."
        },
        {
          "name": "attributes",
          "type": "map[string]",
          "required": true,
          "attributes": [],
          "description": "A set of key/value pairs that you can attach to the order. It can be useful for storing additional information about the charge in a structured format."
        },
        {
          "name": "center",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Optional center key associated with this item. Used for orders and quotes to specify where to ship an item from. If not specified, Flow will infer based on inventory setup."
        },
        {
          "name": "discount",
          "type": "money",
          "required": false,
          "attributes": [],
          "description": "The total discount, if any, to apply to this line item. Note that the discount is the total discount to apply regardless of the quantity here"
        }
      ],
      "attributes": [],
      "description": "Line items represent the items a consumer is purchasing, including additional information to complete the transaction. Note that you may pass in as many line items as you like - including repeating item numbers across line items."
    },
    {
      "name": "line_item_form",
      "plural": "line_item_forms",
      "fields": [
        {
          "name": "number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Client's unique identifier for this object"
        },
        {
          "name": "quantity",
          "type": "long",
          "required": true,
          "attributes": [],
          "minimum": 1
        },
        {
          "name": "price",
          "type": "money",
          "required": false,
          "attributes": [],
          "description": "The price of this item for this order. If not specified, we will use the item price from the experience"
        },
        {
          "name": "attributes",
          "type": "map[string]",
          "required": false,
          "attributes": [],
          "description": "A set of key/value pairs that you can attach to the order. It can be useful for storing additional information about the charge in a structured format."
        },
        {
          "name": "center",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Optional center key associated with this item. Used for orders and quotes to specify where to ship an item from. If not specified, Flow will infer based on inventory setup."
        },
        {
          "name": "discount",
          "type": "money",
          "required": false,
          "attributes": [],
          "description": "The total discount, if any, to apply to this line item. Note that the discount is the total discount to apply regardless of the quantity here"
        }
      ],
      "attributes": [],
      "description": "Line items represent the items a consumer is purchasing, including additional information to complete the transaction. Note that you may pass in as many line items as you like - including repeating item numbers across line items."
    },
    {
      "name": "link",
      "plural": "links",
      "fields": [
        {
          "name": "url",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "local",
      "plural": "locals",
      "fields": [
        {
          "name": "experience",
          "type": "experience_summary",
          "required": true,
          "attributes": []
        },
        {
          "name": "prices",
          "type": "[localized_price]",
          "required": true,
          "attributes": []
        },
        {
          "name": "rates",
          "type": "[rate]",
          "required": true,
          "attributes": []
        },
        {
          "name": "spot_rates",
          "type": "[object]",
          "required": true,
          "attributes": [],
          "deprecation": {
            "description": "This field is deprecated - you will see an empty array in the response"
          }
        },
        {
          "name": "status",
          "type": "subcatalog_item_status",
          "required": true,
          "attributes": [],
          "default": "included"
        },
        {
          "name": "attributes",
          "type": "object",
          "required": false,
          "attributes": [],
          "description": "This contains localized attributes, such as prices."
        }
      ],
      "attributes": []
    },
    {
      "name": "local_price_details",
      "plural": "local_price_detailses",
      "fields": [
        {
          "name": "base",
          "type": "price_details",
          "required": true,
          "attributes": [],
          "description": "Contains the localized price details, but converted to the base currency of the organization."
        },
        {
          "name": "local",
          "type": "price_details",
          "required": true,
          "attributes": [],
          "description": "Contains the localized price details in the currency of the experience."
        },
        {
          "name": "discount",
          "type": "price_detail",
          "required": false,
          "attributes": [],
          "description": "Contains the amount subtracted post-VAT/Duty/Rounding due to a percent discount."
        },
        {
          "name": "local_before_discount",
          "type": "price_detail",
          "required": false,
          "attributes": [],
          "description": "Contains the amount subtracted post-VAT/Duty/Rounding due to a percent discount."
        }
      ],
      "attributes": []
    },
    {
      "name": "local_session",
      "plural": "local_sessions",
      "fields": [
        {
          "name": "country",
          "type": "country",
          "required": true,
          "attributes": []
        },
        {
          "name": "currency",
          "type": "currency",
          "required": true,
          "attributes": []
        },
        {
          "name": "language",
          "type": "language",
          "required": true,
          "attributes": []
        },
        {
          "name": "locale",
          "type": "locale",
          "required": true,
          "attributes": []
        },
        {
          "name": "experience",
          "type": "experience_geo",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "If we found an experience for the given session, the localized information will be presented here"
    },
    {
      "name": "locale",
      "plural": "locales",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier",
          "example": "en_GB or fr_BE or fr_CA"
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": [],
          "example": "English - United Kingdom"
        },
        {
          "name": "country",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "ISO 3166 3 country code",
          "example": "CAN"
        },
        {
          "name": "language",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "ISO 639 2 language code",
          "example": "fr"
        },
        {
          "name": "numbers",
          "type": "locale_numbers",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Locales defines standard conventions for presentation of content. See https://api.flow.io/reference/locales"
    },
    {
      "name": "locale_numbers",
      "plural": "locale_numberses",
      "fields": [
        {
          "name": "decimal",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Decimal separator",
          "example": "."
        },
        {
          "name": "group",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Group separator (e.g. 1,000 have a group separator of ',')",
          "example": ","
        }
      ],
      "attributes": [],
      "description": "Number formats defined for a given locale"
    },
    {
      "name": "localized_adjustment",
      "plural": "localized_adjustments",
      "fields": [
        {
          "name": "currency",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "amount",
          "type": "double",
          "required": true,
          "attributes": []
        },
        {
          "name": "label",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "base",
          "type": "price",
          "required": true,
          "attributes": []
        },
        {
          "name": "reason",
          "type": "adjustment_reason",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "localized_item_deleted",
      "plural": "localized_item_deleteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Client's unique identifier for this object"
        },
        {
          "name": "catalog",
          "type": "string",
          "required": true,
          "attributes": [],
          "example": "master"
        }
      ],
      "attributes": []
    },
    {
      "name": "localized_item_duty",
      "plural": "localized_item_duties",
      "fields": [
        {
          "name": "currency",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "amount",
          "type": "double",
          "required": true,
          "attributes": []
        },
        {
          "name": "label",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "base",
          "type": "price",
          "required": true,
          "attributes": []
        },
        {
          "name": "adjustment",
          "type": "localized_adjustment",
          "required": false,
          "attributes": [],
          "description": "An adjustment may need to be applied to VAT at the order level if the de minimis value is met; if so, its value is stored here."
        }
      ],
      "attributes": []
    },
    {
      "name": "localized_item_price",
      "plural": "localized_item_prices",
      "fields": [
        {
          "name": "currency",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "amount",
          "type": "double",
          "required": true,
          "attributes": []
        },
        {
          "name": "label",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "base",
          "type": "price",
          "required": true,
          "attributes": []
        },
        {
          "name": "includes",
          "type": "included_levies",
          "required": false,
          "attributes": [],
          "description": "Describes which levies are included in the price, if any."
        }
      ],
      "attributes": []
    },
    {
      "name": "localized_item_snapshot",
      "plural": "localized_item_snapshots",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "subcatalog_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "url",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "localized_item_upserted",
      "plural": "localized_item_upserteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Client's unique identifier for this object"
        },
        {
          "name": "catalog",
          "type": "string",
          "required": true,
          "attributes": [],
          "example": "master"
        },
        {
          "name": "locale",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "currency",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "price",
          "type": "double",
          "required": true,
          "attributes": []
        },
        {
          "name": "categories",
          "type": "[string]",
          "required": true,
          "attributes": []
        },
        {
          "name": "description",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "attributes",
          "type": "map[string]",
          "required": true,
          "attributes": []
        },
        {
          "name": "dimensions",
          "type": "object",
          "required": true,
          "attributes": []
        },
        {
          "name": "images",
          "type": "[object]",
          "required": true,
          "attributes": []
        },
        {
          "name": "local",
          "type": "object",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "localized_item_vat",
      "plural": "localized_item_vats",
      "fields": [
        {
          "name": "currency",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "amount",
          "type": "double",
          "required": true,
          "attributes": []
        },
        {
          "name": "label",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "base",
          "type": "price",
          "required": true,
          "attributes": []
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The specific name of the tax in the local region.",
          "example": "VAT, GST, HST, etc."
        },
        {
          "name": "adjustment",
          "type": "localized_adjustment",
          "required": false,
          "attributes": [],
          "description": "An adjustment may need to be applied to VAT at the order level if the de minimis value is met; if so, its value is stored here."
        }
      ],
      "attributes": []
    },
    {
      "name": "localized_line_item",
      "plural": "localized_line_items",
      "fields": [
        {
          "name": "number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Client's unique identifier for this object"
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The item name associated to the number (e.g. Long Sleeve Dress)."
        },
        {
          "name": "quantity",
          "type": "long",
          "required": true,
          "attributes": [],
          "minimum": 1
        },
        {
          "name": "center",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Optional center key associated with this item. Used for orders and quotes to specify where to ship an item from. If not specified, Flow will infer based on inventory setup."
        },
        {
          "name": "price",
          "type": "money",
          "required": false,
          "attributes": [],
          "description": "The price of this item for this order. If not specified, we will use the item price from the experience"
        },
        {
          "name": "discount",
          "type": "money",
          "required": false,
          "attributes": [],
          "description": "The total discount, if any, to apply to this line item. Note that the discount is the total discount to apply regardless of the quantity here"
        },
        {
          "name": "attributes",
          "type": "map[string]",
          "required": false,
          "attributes": [],
          "description": "A set of key/value pairs that you can attach to the order. It can be useful for storing additional information about the charge in a structured format."
        },
        {
          "name": "local",
          "type": "local",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Line items on the order, with localized pricing information"
    },
    {
      "name": "localized_total",
      "plural": "localized_totals",
      "fields": [
        {
          "name": "currency",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "amount",
          "type": "double",
          "required": true,
          "attributes": []
        },
        {
          "name": "label",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "base",
          "type": "price",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "manifest",
      "plural": "manifests",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "type",
          "type": "manifest_type",
          "required": true,
          "attributes": [],
          "description": "Can be all or specific: This field tells us whether labels on this manifest were generated because an external party told us they were actually shipped or if we just do a manifest on all open shipments that do not already have one."
        },
        {
          "name": "service",
          "type": "service_summary",
          "required": true,
          "attributes": [],
          "description": "Carrier service level used for generation and shipment of this label",
          "example": "ups-ground, dhl-express-worldwide"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "shipping_labels",
          "type": "[shipping_label_summary]",
          "required": true,
          "attributes": [],
          "description": "Labels that are part of this manifest"
        },
        {
          "name": "pdf",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "URL where to download generated manifest confirmation or bill of lading, if the service requires one be generated for pickup."
        }
      ],
      "attributes": [],
      "description": "Represents closeout of a group of labels that have been transfered to the carrier for shipping"
    },
    {
      "name": "manifest_form",
      "plural": "manifest_forms",
      "fields": [
        {
          "name": "service",
          "type": "string",
          "required": true,
          "attributes": [],
          "example": "dhl-express-worldwide"
        },
        {
          "name": "tracking_number_type",
          "type": "tracking_number_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "tracking_numbers",
          "type": "[string]",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "margin",
      "plural": "margins",
      "fields": [
        {
          "name": "type",
          "type": "margin_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "value",
          "type": "decimal",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "measurement",
      "plural": "measurements",
      "fields": [
        {
          "name": "value",
          "type": "string",
          "required": true,
          "attributes": [],
          "example": "12.23"
        },
        {
          "name": "units",
          "type": "unit_of_measurement",
          "required": true,
          "attributes": [],
          "example": "inch"
        }
      ],
      "attributes": []
    },
    {
      "name": "membership",
      "plural": "memberships",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "organization",
          "type": "expandable_organization",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "user",
          "type": "expandable_user",
          "required": true,
          "attributes": []
        },
        {
          "name": "role",
          "type": "role",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Represents the users that are part of this organization. Primary purpose is to manage which users have access to the organization's data and to provide a simple user interface to assign roles and permissions to each member of the organization"
    },
    {
      "name": "membership_deleted",
      "plural": "membership_deleteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "membership_form",
      "plural": "membership_forms",
      "fields": [
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The id of the organization"
        },
        {
          "name": "user",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The id of the user to add to this organization"
        },
        {
          "name": "role",
          "type": "role",
          "required": true,
          "attributes": [],
          "default": "member"
        }
      ],
      "attributes": [],
      "description": "Top level resource to create a membership."
    },
    {
      "name": "membership_put_form",
      "plural": "membership_put_forms",
      "fields": [
        {
          "name": "role",
          "type": "role",
          "required": true,
          "attributes": [],
          "default": "member"
        }
      ],
      "attributes": [],
      "description": "Top level resource to create a membership."
    },
    {
      "name": "membership_upserted",
      "plural": "membership_upserteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "user_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "role",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "membership_version",
      "plural": "membership_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "membership",
          "type": "membership",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "merchant_of_record_authorization_form",
      "plural": "merchant_of_record_authorization_forms",
      "fields": [
        {
          "name": "token",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The token of the payment method to use when authorizing this transaction"
        },
        {
          "name": "order_number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Client order number for which to authorize payment. We will automatically verify that this order exists and will authorize the total amount of the order in the currency of the order."
        },
        {
          "name": "amount",
          "type": "decimal",
          "required": false,
          "attributes": [],
          "description": "The amount to authorize - if specified, will be used to confirm that the amount exactly matches the order total",
          "example": "120.38"
        },
        {
          "name": "currency",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Required if amount is specified. The ISO 4217-3 code for the currency. Case insensitive. See https://api.flow.io/reference/currencies",
          "example": "CAD"
        },
        {
          "name": "key",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Your unique identifier for this transaction, which if provided is used to implement idempotency. If not provided, we will assign."
        },
        {
          "name": "cvv",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "The card verification number. Note this number is never stored and thus is presented on each auth. Presenting the CVV may increase acceptance rates"
        },
        {
          "name": "attributes",
          "type": "map[string]",
          "required": false,
          "attributes": [],
          "description": "A set of key/value pairs that you can attach to an authorization object"
        },
        {
          "name": "ip",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "The IP address of the consumer",
          "example": "96.242.151.245"
        },
        {
          "name": "options",
          "type": "[authorization_option]",
          "required": false,
          "attributes": [],
          "description": "Optional behaviors to enable for this authorization"
        }
      ],
      "attributes": [],
      "description": "Creates an authorization for a transaction for which Flow is the merchant of record. In this case, you must provide your order number for a valid Flow order. An authorization is used to check and reserve funds w/ a given payment method. No funds are actually transferred; once you have you an authorization, you can capture up to the amount of the authorization"
    },
    {
      "name": "merchant_of_record_payment_form",
      "plural": "merchant_of_record_payment_forms",
      "fields": [
        {
          "name": "method",
          "type": "string",
          "required": true,
          "attributes": [],
          "example": "paypal"
        },
        {
          "name": "order_number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Client order number for which to authorize payment. We will automatically verify that this order exists and will authorize the total amount of the order in the currency of the order."
        },
        {
          "name": "amount",
          "type": "decimal",
          "required": true,
          "attributes": [],
          "description": "The amount to authorize - will be used to confirm that the amount exactly matches the order total",
          "example": "120.38"
        },
        {
          "name": "currency",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The ISO 4217-3 code for the currency. Case insensitive. See https://api.flow.io/reference/currencies",
          "example": "CAD"
        }
      ],
      "attributes": [],
      "description": "Creates an online payment"
    },
    {
      "name": "money",
      "plural": "moneys",
      "fields": [
        {
          "name": "amount",
          "type": "double",
          "required": true,
          "attributes": []
        },
        {
          "name": "currency",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "ISO 4217 3 currency code as defined in https://api.flow.io/reference/currencies",
          "example": "CAD"
        }
      ],
      "attributes": [],
      "description": "Money represents an amount in a given currency"
    },
    {
      "name": "name",
      "plural": "names",
      "fields": [
        {
          "name": "first",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "last",
          "type": "string",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "name_form",
      "plural": "name_forms",
      "fields": [
        {
          "name": "first",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "last",
          "type": "string",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "notification_deleted",
      "plural": "notification_deleteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "notification_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "carrier_tracking_number",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "flow_tracking_number",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "destination",
          "type": "object",
          "required": true,
          "attributes": []
        },
        {
          "name": "origin",
          "type": "object",
          "required": true,
          "attributes": []
        },
        {
          "name": "carrier",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "service",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "order",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "package",
          "type": "object",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "notification_upserted",
      "plural": "notification_upserteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "notification_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "carrier_tracking_number",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "flow_tracking_number",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "destination",
          "type": "object",
          "required": true,
          "attributes": []
        },
        {
          "name": "origin",
          "type": "object",
          "required": true,
          "attributes": []
        },
        {
          "name": "carrier",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "service",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "order",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "package",
          "type": "object",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "number_range",
      "plural": "number_ranges",
      "fields": [
        {
          "name": "min",
          "type": "long",
          "required": true,
          "attributes": []
        },
        {
          "name": "max",
          "type": "long",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "online_authorization",
      "plural": "online_authorizations",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "key",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "payment",
          "type": "expandable_payment",
          "required": true,
          "attributes": [],
          "description": "The associated online payment"
        },
        {
          "name": "amount",
          "type": "decimal",
          "required": true,
          "attributes": [],
          "description": "The amount to authorize",
          "example": "120.38"
        },
        {
          "name": "currency",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The ISO 4217-3 code for the currency. Case insensitive. See https://api.flow.io/reference/currencies",
          "example": "CAD"
        },
        {
          "name": "customer",
          "type": "customer",
          "required": true,
          "attributes": [],
          "description": "The customer who is actually receiving the goods. Providing name and email at a minimum will significantly increase the acceptance rate and are recommended."
        },
        {
          "name": "attributes",
          "type": "map[string]",
          "required": true,
          "attributes": [],
          "description": "A set of key/value pairs that you can attach to an authorization object"
        },
        {
          "name": "destination",
          "type": "address",
          "required": false,
          "attributes": [],
          "description": "Destination address, if relevant"
        },
        {
          "name": "order",
          "type": "authorization_order_reference",
          "required": false,
          "attributes": [],
          "description": "If this authorization was made for a specific order number, that order will be referenced here"
        },
        {
          "name": "ip",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "The IP address of the consumer",
          "example": "96.242.151.245"
        },
        {
          "name": "result",
          "type": "authorization_result",
          "required": true,
          "attributes": []
        },
        {
          "name": "created_at",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "online_authorization_upserted",
      "plural": "online_authorization_upserteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "authorization",
          "type": "online_authorization",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Represents an authorization for a card payment method"
    },
    {
      "name": "online_authorization_upserted_v2",
      "plural": "online_authorization_upserted_v2s",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "authorization",
          "type": "online_authorization",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Represents an authorization for a card payment method"
    },
    {
      "name": "option_weight_estimates",
      "plural": "option_weight_estimates",
      "fields": [
        {
          "name": "gravitational",
          "type": "measurement",
          "required": true,
          "attributes": []
        },
        {
          "name": "dimensional",
          "type": "measurement",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "options",
      "plural": "optionses",
      "fields": [
        {
          "name": "required",
          "type": "boolean",
          "required": true,
          "attributes": [],
          "description": "If true, when you create or update items in Flow, we will validate that data presented contains an attribute with this key.",
          "default": "false",
          "example": "brand"
        },
        {
          "name": "show_in_catalog",
          "type": "boolean",
          "required": true,
          "attributes": [],
          "description": "Flag indicating that a feature is applicable to catalog and can be used in Console",
          "default": "false"
        },
        {
          "name": "show_in_harmonization",
          "type": "boolean",
          "required": true,
          "attributes": [],
          "description": "Flag indicating that a feature is applicable to harmoniztion and can be used in Console",
          "default": "false"
        }
      ],
      "attributes": [],
      "description": "Flags to indicate whether a feature is enabled/disabled on a particular model (e.g. show/do not show attribute as a column in harmonization table view of items)"
    },
    {
      "name": "order",
      "plural": "orders",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Client's unique identifier for this object"
        },
        {
          "name": "experience",
          "type": "expandable_experience",
          "required": false,
          "attributes": [],
          "description": "Contains information on the experience on which this order was submitted."
        },
        {
          "name": "customer",
          "type": "customer",
          "required": true,
          "attributes": [],
          "description": "The customer who is actually making the purchase"
        },
        {
          "name": "delivered_duty",
          "type": "delivered_duty",
          "required": true,
          "attributes": [],
          "description": "Options returned will only use tiers with the matching delivered duty. This would also affect whether duties are included in the total or not. If not specified, defaults based on the experience default setting."
        },
        {
          "name": "destination",
          "type": "order_address",
          "required": true,
          "attributes": []
        },
        {
          "name": "expires_at",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": [],
          "description": "The date and time on which this order will expire unless submitted. Used only when the order status is 'open'. New orders will expire 1 hour after creation."
        },
        {
          "name": "items",
          "type": "[localized_line_item]",
          "required": true,
          "attributes": []
        },
        {
          "name": "deliveries",
          "type": "[delivery]",
          "required": true,
          "attributes": [],
          "minimum": 1
        },
        {
          "name": "selections",
          "type": "[string]",
          "required": true,
          "attributes": [],
          "description": "The currently selected delivery option ids. These IDs represent the shipping tiers that the customer has chosen (e.g. standard or express) for each delivery. The shipping price is then based on these selections (and included in the prices array). You can update an order before it has been submitted to change the delivery options, getting back accurate pricing for the order.",
          "minimum": 1
        },
        {
          "name": "prices",
          "type": "[order_price_detail]",
          "required": true,
          "attributes": []
        },
        {
          "name": "total",
          "type": "localized_total",
          "required": true,
          "attributes": []
        },
        {
          "name": "attributes",
          "type": "map[string]",
          "required": true,
          "attributes": [],
          "description": "A set of key/value pairs that you can attach to the order. It can be useful for storing additional information about the charge in a structured format."
        },
        {
          "name": "submitted_at",
          "type": "date-time-iso8601",
          "required": false,
          "attributes": [],
          "description": "The timestamp on which the order is submitted. Once submitted, production orders can no longer be deleted as they represent transactions in the real world"
        },
        {
          "name": "lines",
          "type": "[line]",
          "required": false,
          "attributes": [],
          "description": "Provides display data for each of the line items belonging to this order."
        },
        {
          "name": "identifiers",
          "type": "[string]",
          "required": false,
          "attributes": [],
          "description": "Other identifiers which are used to identify this order, if available."
        },
        {
          "name": "promotions",
          "type": "promotions",
          "required": false,
          "attributes": [],
          "description": "The current available and applied promotions for this order"
        },
        {
          "name": "payments",
          "type": "[order_payment]",
          "required": false,
          "attributes": [],
          "description": "Represents the list of payments on an order. Each payment will be typed - supporting options like a $25 account credit applied to an order plus a balance baid by a card, paypal, cash on delivery, etc. The list of payments here is summary information only for display back to the user; each individual payment will have varying levels of detail based on the actual type of the payment"
        },
        {
          "name": "balance",
          "type": "localized_total",
          "required": false,
          "attributes": [],
          "description": "The remaining balance on this order. Will be marked required in a future version of the Flow API"
        }
      ],
      "attributes": [],
      "description": "An order represents all of the information about a particular line item, including pricing, currency rates, delivery options, etc. All information in an order is guaranteed by Flow - if an order is submitted before its expiration. The intended use case is to create an order as a consumer enters checkout, then to submit that order as part of the user submitting their order. Note that Flow will automatically mark an order submitted if we see a payment authorization for an order."
    },
    {
      "name": "order_address",
      "plural": "order_addresses",
      "fields": [
        {
          "name": "text",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Full text version of address"
        },
        {
          "name": "streets",
          "type": "[string]",
          "required": false,
          "attributes": [],
          "description": "Array for street line 1, street line 2, etc., in order"
        },
        {
          "name": "city",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "province",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "postal",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "country",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "The ISO 3166-3 country code. Case insensitive. See https://api.flow.io/reference/countries",
          "example": "CAN"
        },
        {
          "name": "latitude",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "longitude",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "contact",
          "type": "contact",
          "required": false,
          "attributes": [],
          "description": "Contact information of entity at the address"
        }
      ],
      "attributes": []
    },
    {
      "name": "order_deleted",
      "plural": "order_deleteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Client's unique identifier for this object"
        }
      ],
      "attributes": []
    },
    {
      "name": "order_error",
      "plural": "order_errors",
      "fields": [
        {
          "name": "code",
          "type": "order_error_code",
          "required": true,
          "attributes": []
        },
        {
          "name": "messages",
          "type": "[string]",
          "required": true,
          "attributes": [],
          "description": "A summary of the errors",
          "minimum": 1
        },
        {
          "name": "numbers",
          "type": "[string]",
          "required": false,
          "attributes": [],
          "description": "A list of all of the item numbers that are not available"
        },
        {
          "name": "destination_country",
          "type": "country",
          "required": false,
          "attributes": [],
          "description": "Destination country of the order, if available."
        }
      ],
      "attributes": []
    },
    {
      "name": "order_estimate",
      "plural": "order_estimates",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "items",
          "type": "[localized_line_item]",
          "required": true,
          "attributes": []
        },
        {
          "name": "destination",
          "type": "order_address",
          "required": true,
          "attributes": []
        },
        {
          "name": "deliveries",
          "type": "[delivery]",
          "required": true,
          "attributes": [],
          "minimum": 1
        },
        {
          "name": "prices",
          "type": "[order_price_detail]",
          "required": true,
          "attributes": []
        },
        {
          "name": "selections",
          "type": "[string]",
          "required": true,
          "attributes": [],
          "description": "The currently selected delivery option ids. These IDs represent the shipping tiers that the customer has chosen (e.g. standard or express) for each delivery. The shipping price is then based on these selections (and included in the prices array). You can update an order before it has been submitted to change the delivery options, getting back accurate pricing for the order.",
          "minimum": 1
        },
        {
          "name": "total",
          "type": "localized_total",
          "required": true,
          "attributes": []
        },
        {
          "name": "lines",
          "type": "[line]",
          "required": false,
          "attributes": [],
          "description": "Provides display data for each of the line items belonging to this order estimate."
        },
        {
          "name": "promotions",
          "type": "promotions",
          "required": false,
          "attributes": [],
          "description": "The current available and applied promotions for this order"
        }
      ],
      "attributes": [],
      "description": "Lightweight estimate for a group of items without any customer-related information. This will contain available estimates on shipping, taxes, and duties.",
      "deprecation": {
        "description": "Estimates are deprecated. Please use orders with optional destination"
      }
    },
    {
      "name": "order_estimate_form",
      "plural": "order_estimate_forms",
      "fields": [
        {
          "name": "items",
          "type": "[line_item_form]",
          "required": true,
          "attributes": [],
          "minimum": 1
        },
        {
          "name": "destination",
          "type": "order_address",
          "required": false,
          "attributes": []
        },
        {
          "name": "selections",
          "type": "[string]",
          "required": false,
          "attributes": [],
          "description": "Selected list of delivery options for this quote. The original order will contain one or more deliveries. Each delivery will contain one or more shipping options (e.g. standard or express). We need to know which shipping options the user selected in order to provide accurate, local shipping pricing. You should only specify if you are explicitly changing the delivery options",
          "minimum": 1
        }
      ],
      "attributes": [],
      "description": "Form to get a lightweight estimate of an order.",
      "deprecation": {
        "description": "Estimates are deprecated. Please use orders with optional destination"
      }
    },
    {
      "name": "order_export_type",
      "plural": "order_export_types",
      "fields": [
        {
          "name": "numbers",
          "type": "[string]",
          "required": false,
          "attributes": [],
          "description": "The specific list of order numbers to export"
        },
        {
          "name": "min_hours_since_submitted_at",
          "type": "integer",
          "required": false,
          "attributes": [],
          "description": "The minimum number of hours since submission. For example, specifying 24 would select all orders submitted at least 24 hours ago.",
          "example": "24"
        },
        {
          "name": "submitted_on_or_before",
          "type": "date-time-iso8601",
          "required": false,
          "attributes": []
        },
        {
          "name": "submitted_on_or_after",
          "type": "date-time-iso8601",
          "required": false,
          "attributes": []
        },
        {
          "name": "status",
          "type": "order_status",
          "required": false,
          "attributes": []
        },
        {
          "name": "has_tracking_label",
          "type": "boolean",
          "required": false,
          "attributes": [],
          "description": "If true, we filter to orders with a tracking label. If false, we filter orders that do not have any tracking label events."
        },
        {
          "name": "sort",
          "type": "string",
          "required": false,
          "attributes": [],
          "example": "number"
        }
      ],
      "attributes": [],
      "description": "Exports orders"
    },
    {
      "name": "order_form",
      "plural": "order_forms",
      "fields": [
        {
          "name": "customer",
          "type": "customer",
          "required": false,
          "attributes": [],
          "description": "The customer who actually is making the purchase. We recommend providing as much information as you have, notably email address which can be used to increase acceptance rates if Flow is processing payment for this order. If you can also provide your customer number - we can link multiple orders for each customer in the Flow console."
        },
        {
          "name": "items",
          "type": "[line_item_form]",
          "required": true,
          "attributes": [],
          "minimum": 1
        },
        {
          "name": "delivered_duty",
          "type": "delivered_duty",
          "required": false,
          "attributes": [],
          "description": "Options returned will only use tiers with the matching delivered duty. This would also affect whether duties are included in the total or not. If not specified, defaults based on the experience default setting."
        },
        {
          "name": "number",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "If not provided, will default to the generated unique order identifier."
        },
        {
          "name": "destination",
          "type": "order_address",
          "required": false,
          "attributes": []
        },
        {
          "name": "discount",
          "type": "money",
          "required": false,
          "attributes": [],
          "description": "An optional discount to apply to the entire order"
        },
        {
          "name": "attributes",
          "type": "map[string]",
          "required": false,
          "attributes": [],
          "description": "A set of key/value pairs that you can attach to the order. It can be useful for storing additional information about the charge in a structured format."
        }
      ],
      "attributes": [],
      "description": "The order form is used to create an open order, providing the details on pricing and delivery options for destination and items/quantities specified"
    },
    {
      "name": "order_identifier",
      "plural": "order_identifiers",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "order",
          "type": "order_reference",
          "required": true,
          "attributes": []
        },
        {
          "name": "number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Client's unique identifier for this object"
        }
      ],
      "attributes": [],
      "description": "Represents alternate numbers with which to identify an order."
    },
    {
      "name": "order_identifier_deleted",
      "plural": "order_identifier_deleteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "order_identifier_form",
      "plural": "order_identifier_forms",
      "fields": [
        {
          "name": "order",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Client's unique identifier for this object"
        }
      ],
      "attributes": []
    },
    {
      "name": "order_identifier_put_form",
      "plural": "order_identifier_put_forms",
      "fields": [
        {
          "name": "order",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "order_identifier_upserted",
      "plural": "order_identifier_upserteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Client's unique identifier for this object"
        },
        {
          "name": "order_number",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "order_identifier_version",
      "plural": "order_identifier_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "order_identifier",
          "type": "order_identifier",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "order_payment",
      "plural": "order_payments",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "type",
          "type": "order_payment_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "reference",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The reference identifier for the details behind this order payment. For example, if this payment was a card payment, the reference will be the unique authorization key."
        },
        {
          "name": "description",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Human understandable description of this payment method",
          "example": "VISA ending with 4111"
        },
        {
          "name": "total",
          "type": "price_with_base",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "An Order Payment represents an individual payment applied to an order. The type of the payment can be used to further lookup transaction level detail"
    },
    {
      "name": "order_price_detail",
      "plural": "order_price_details",
      "fields": [
        {
          "name": "key",
          "type": "order_price_detail_key",
          "required": true,
          "attributes": [],
          "description": "The key indicating what this price detail represents."
        },
        {
          "name": "currency",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The ISO-4217 3 character currency code in which the amount is calculated."
        },
        {
          "name": "amount",
          "type": "decimal",
          "required": true,
          "attributes": [],
          "description": "The total cost of the price detail in the currency of the experience in which the order is placed."
        },
        {
          "name": "label",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The formatted label for this price detail that should be displayed to the user."
        },
        {
          "name": "base",
          "type": "price",
          "required": true,
          "attributes": [],
          "description": "The amount of this price detail in the base currency of the organization."
        },
        {
          "name": "components",
          "type": "[order_price_detail_component]",
          "required": true,
          "attributes": [],
          "description": "Contains the components of this price detail that are used to calculate the total."
        },
        {
          "name": "name",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "The display name for this order price detail."
        }
      ],
      "attributes": [],
      "description": "Represents a top-level order price detail, e.g. 'Subtotal' or 'VAT'."
    },
    {
      "name": "order_price_detail_component",
      "plural": "order_price_detail_components",
      "fields": [
        {
          "name": "key",
          "type": "order_price_detail_component_key",
          "required": true,
          "attributes": []
        },
        {
          "name": "currency",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The ISO-4217 3 character currency code in which the amount is calculated."
        },
        {
          "name": "amount",
          "type": "decimal",
          "required": true,
          "attributes": [],
          "description": "The total cost of the price detail component in the currency of the experience in which the order is placed."
        },
        {
          "name": "label",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "base",
          "type": "price",
          "required": true,
          "attributes": [],
          "description": "The amount of this price detail component in the base currency of the organization."
        },
        {
          "name": "name",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "The display name for this order price detail component."
        }
      ],
      "attributes": []
    },
    {
      "name": "order_put_form",
      "plural": "order_put_forms",
      "fields": [
        {
          "name": "items",
          "type": "[line_item_form]",
          "required": true,
          "attributes": [],
          "minimum": 1
        },
        {
          "name": "customer",
          "type": "customer",
          "required": false,
          "attributes": [],
          "description": "The customer who actually is making the purchase. We recommend providing as much information as you have, notably email address which can be used to increase acceptance rates if Flow is processing payment for this order. If you can also provide your customer number - we can link multiple orders for each customer in the Flow console."
        },
        {
          "name": "delivered_duty",
          "type": "delivered_duty",
          "required": false,
          "attributes": [],
          "description": "Options returned will only use tiers with the matching delivered duty. This would also affect whether duties are included in the total or not. If not specified, defaults based on the experience default setting."
        },
        {
          "name": "selections",
          "type": "[string]",
          "required": false,
          "attributes": [],
          "description": "Selected list of delivery options for this quote. The original order will contain one or more deliveries. Each delivery will contain one or more shipping options (e.g. standard or express). We need to know which shipping options the user selected in order to provide accurate, local shipping pricing. You should only specify if you are explicitly changing the delivery options",
          "minimum": 1
        },
        {
          "name": "destination",
          "type": "order_address",
          "required": false,
          "attributes": []
        },
        {
          "name": "discount",
          "type": "money",
          "required": false,
          "attributes": [],
          "description": "An optional discount to apply to the entire order"
        },
        {
          "name": "attributes",
          "type": "map[string]",
          "required": false,
          "attributes": [],
          "description": "A set of key/value pairs that you can attach to the order. It can be useful for storing additional information about the charge in a structured format."
        }
      ],
      "attributes": [],
      "description": "The order put form is used to upsert an order, providing the details on pricing and delivery options for destination and items/quantities specified."
    },
    {
      "name": "order_reference",
      "plural": "order_references",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Client's unique identifier for this object"
        }
      ],
      "attributes": []
    },
    {
      "name": "order_upserted",
      "plural": "order_upserteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Client's unique identifier for this object"
        },
        {
          "name": "environment",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "experience_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "expires_at",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "customer",
          "type": "object",
          "required": true,
          "attributes": []
        },
        {
          "name": "selections",
          "type": "[string]",
          "required": true,
          "attributes": []
        },
        {
          "name": "items",
          "type": "[object]",
          "required": true,
          "attributes": []
        },
        {
          "name": "destination",
          "type": "object",
          "required": true,
          "attributes": []
        },
        {
          "name": "deliveries",
          "type": "[object]",
          "required": true,
          "attributes": []
        },
        {
          "name": "prices",
          "type": "[object]",
          "required": true,
          "attributes": []
        },
        {
          "name": "payments",
          "type": "[object]",
          "required": false,
          "attributes": []
        },
        {
          "name": "discount",
          "type": "object",
          "required": false,
          "attributes": []
        },
        {
          "name": "delivered_duty",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "total",
          "type": "object",
          "required": true,
          "attributes": []
        },
        {
          "name": "created_at",
          "type": "date-time-iso8601",
          "required": false,
          "attributes": []
        },
        {
          "name": "updated_at",
          "type": "date-time-iso8601",
          "required": false,
          "attributes": []
        },
        {
          "name": "submitted_at",
          "type": "date-time-iso8601",
          "required": false,
          "attributes": []
        },
        {
          "name": "lines",
          "type": "[object]",
          "required": false,
          "attributes": []
        },
        {
          "name": "attributes",
          "type": "map[string]",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "order_version",
      "plural": "order_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "order",
          "type": "order",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "organization",
      "plural": "organizations",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "environment",
          "type": "environment",
          "required": true,
          "attributes": []
        },
        {
          "name": "parent",
          "type": "organization_reference",
          "required": false,
          "attributes": [],
          "description": "When creating an organization in the test environment, it is linked to your production organization. This allows you to have as many test organizations as you like."
        }
      ],
      "attributes": [],
      "description": "Represents a single organization in the system, and what environment it is currently operating in."
    },
    {
      "name": "organization_authorization",
      "plural": "organization_authorizations",
      "fields": [
        {
          "name": "role",
          "type": "role",
          "required": true,
          "attributes": []
        },
        {
          "name": "environment",
          "type": "environment",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Defines the data used for broad authorization of user access to org level data"
    },
    {
      "name": "organization_authorization_form",
      "plural": "organization_authorization_forms",
      "fields": [
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "environment",
          "type": "environment",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "organization_currency_setting",
      "plural": "organization_currency_settings",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "base",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The base currency's ISO 4217 3-character code as defined in https://api.flow.io/reference/currencies"
        },
        {
          "name": "target",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The target currency's ISO 4217 3-character code as defined in https://api.flow.io/reference/currencies"
        },
        {
          "name": "margin",
          "type": "decimal",
          "required": true,
          "attributes": [],
          "description": "A percent of the base currency value added to the base currency before conversion.",
          "example": "5.0"
        }
      ],
      "attributes": [],
      "description": "Represents organization-specific currency conversion adjustments."
    },
    {
      "name": "organization_currency_setting_form",
      "plural": "organization_currency_setting_forms",
      "fields": [
        {
          "name": "base",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The base currency's ISO 4217 3-character code as defined in https://api.flow.io/reference/currencies"
        },
        {
          "name": "target",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The target currency's ISO 4217 3-character code as defined in https://api.flow.io/reference/currencies"
        },
        {
          "name": "margin",
          "type": "decimal",
          "required": true,
          "attributes": [],
          "description": "A percent of the base currency value added to the base currency before conversion.",
          "example": "5.0"
        }
      ],
      "attributes": [],
      "description": "Represents the parts of an organization setting that can be updated."
    },
    {
      "name": "organization_currency_setting_version",
      "plural": "organization_currency_setting_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization_currency_setting",
          "type": "organization_currency_setting",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "organization_deleted",
      "plural": "organization_deleteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "organization_form",
      "plural": "organization_forms",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Defaults to a URL safe and unique version of the name",
          "minimum": 3
        },
        {
          "name": "name",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Defaults to the id",
          "minimum": 3
        },
        {
          "name": "environment",
          "type": "environment",
          "required": true,
          "attributes": [],
          "default": "production"
        },
        {
          "name": "parent_id",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "When creating an organization in the test environment, you must specify your production organization id."
        }
      ],
      "attributes": [],
      "description": "Either id or name is required."
    },
    {
      "name": "organization_put_form",
      "plural": "organization_put_forms",
      "fields": [
        {
          "name": "name",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Defaults to the id",
          "minimum": 3
        },
        {
          "name": "environment",
          "type": "environment",
          "required": false,
          "attributes": [],
          "description": "If updating, defaults to the current environment. If creating, defaults to production"
        },
        {
          "name": "parent_id",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "When creating an organization in the test environment, you must specify your production organization id."
        }
      ],
      "attributes": [],
      "description": "Data required to upsert an organization."
    },
    {
      "name": "organization_reference",
      "plural": "organization_references",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "organization_session",
      "plural": "organization_sessions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "visitor",
          "type": "session_visitor",
          "required": true,
          "attributes": []
        },
        {
          "name": "visit",
          "type": "session_visit",
          "required": true,
          "attributes": []
        },
        {
          "name": "environment",
          "type": "environment",
          "required": true,
          "attributes": [],
          "description": "The Flow organization environment",
          "example": "sandbox"
        },
        {
          "name": "attributes",
          "type": "map[string]",
          "required": true,
          "attributes": []
        },
        {
          "name": "ip",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "The latest IP Address associated with this session, if known"
        },
        {
          "name": "local",
          "type": "local_session",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Represents a session created for an organization. Primary method to select an experience for a given user session and ensure that experience does not change throughout the user's activity. Provides authentication to objects created during this session (e.g. order)."
    },
    {
      "name": "organization_session_authorization",
      "plural": "organization_session_authorizations",
      "fields": [
        {
          "name": "organization",
          "type": "organization_reference",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "environment",
          "type": "environment",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Represents a session authorized access to the specified organization's data"
    },
    {
      "name": "organization_summary",
      "plural": "organization_summaries",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "organization_token",
      "plural": "organization_tokens",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "organization",
          "type": "organization_reference",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "user",
          "type": "user_reference",
          "required": true,
          "attributes": []
        },
        {
          "name": "environment",
          "type": "environment",
          "required": true,
          "attributes": []
        },
        {
          "name": "partial",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The partial API token",
          "example": "a21TK-XXXXX-lJ38i"
        },
        {
          "name": "created_at",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": [],
          "description": "The date/time on which this token was created"
        },
        {
          "name": "description",
          "type": "string",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "All of the metadata associated with a given token."
    },
    {
      "name": "organization_token_form",
      "plural": "organization_token_forms",
      "fields": [
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "environment",
          "type": "environment",
          "required": true,
          "attributes": []
        },
        {
          "name": "description",
          "type": "string",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Used to create a new token. User making the request must be authorized to create a token for this organization."
    },
    {
      "name": "organization_token_reference",
      "plural": "organization_token_references",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "organization",
          "type": "organization_reference",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "environment",
          "type": "environment",
          "required": true,
          "attributes": []
        },
        {
          "name": "user",
          "type": "user_reference",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Summary data for a given token"
    },
    {
      "name": "organization_upserted",
      "plural": "organization_upserteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "environment",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "currencies",
          "type": "[string]",
          "required": true,
          "attributes": [],
          "deprecation": {
            "description": "Replaced by default base currency"
          },
          "minimum": 0
        },
        {
          "name": "parent_id",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "default_base_currency",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Unless otherwise specified, this is the currency in which all 'base' prices will be presented in. Will be made required once deployed.",
          "minimum": 3,
          "maximum": 3
        },
        {
          "name": "default_country",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "ISO 3166 3-character country code. See https://api.flow.io/reference/countries",
          "minimum": 3,
          "maximum": 3
        },
        {
          "name": "default_language",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "ISO 639 2-character language code. See https://api.flow.io/reference/languages",
          "minimum": 2,
          "maximum": 2
        },
        {
          "name": "default_locale",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "The ID of the default locale for this organization. See https://api.flow.io/reference/locales",
          "minimum": 2,
          "maximum": 2,
          "example": "en-US"
        },
        {
          "name": "default_timezone",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "The name of the default timezone for this organization. See https://api.flow.io/reference/timezones",
          "minimum": 3,
          "maximum": 3,
          "example": "America/New_York"
        }
      ],
      "attributes": []
    },
    {
      "name": "organization_version",
      "plural": "organization_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization",
          "type": "organization",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "outgoing_feed",
      "plural": "outgoing_feeds",
      "fields": [
        {
          "name": "format",
          "type": "outgoing_feed_format",
          "required": true,
          "attributes": [],
          "description": "The format of the feed."
        },
        {
          "name": "minute",
          "type": "integer",
          "required": true,
          "attributes": [],
          "description": "How many minutes past the hour should we attempt to construct the feed.",
          "default": "0"
        }
      ],
      "attributes": [],
      "description": "Describes the outgoing feed constructed by Flow"
    },
    {
      "name": "outgoing_feed_form",
      "plural": "outgoing_feed_forms",
      "fields": [
        {
          "name": "format",
          "type": "outgoing_feed_format",
          "required": true,
          "attributes": [],
          "description": "The format of the feed."
        },
        {
          "name": "minute",
          "type": "integer",
          "required": true,
          "attributes": [],
          "description": "How many minutes past the hour should we attempt to construct the feed.",
          "default": "0"
        }
      ],
      "attributes": [],
      "description": "Describes the outgoing feed constructed by Flow"
    },
    {
      "name": "packaging",
      "plural": "packagings",
      "fields": [
        {
          "name": "dimensions",
          "type": "dimensions",
          "required": true,
          "attributes": [],
          "minimum": 1
        },
        {
          "name": "name",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "User-friendly name for the package. Defaults to concatenation of dimension values. e.g. box-12x4x30"
        },
        {
          "name": "number",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Client's unique identifier for this object"
        }
      ],
      "attributes": [],
      "description": "Represents packaging available to ship items"
    },
    {
      "name": "partner_token",
      "plural": "partner_tokens",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "partner",
          "type": "token_partner_reference",
          "required": true,
          "attributes": []
        },
        {
          "name": "user",
          "type": "user_reference",
          "required": true,
          "attributes": []
        },
        {
          "name": "environment",
          "type": "environment",
          "required": true,
          "attributes": []
        },
        {
          "name": "partial",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The partial API token",
          "example": "a21TK-XXXXX-lJ38i"
        },
        {
          "name": "created_at",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": [],
          "description": "The date/time on which this token was created"
        },
        {
          "name": "description",
          "type": "string",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "All of the metadata associated with a given token."
    },
    {
      "name": "partner_token_form",
      "plural": "partner_token_forms",
      "fields": [
        {
          "name": "partner",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "environment",
          "type": "environment",
          "required": true,
          "attributes": []
        },
        {
          "name": "description",
          "type": "string",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Used to create a new token. User making the request must be authorized to create a token for this partner."
    },
    {
      "name": "partner_token_reference",
      "plural": "partner_token_references",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "partner",
          "type": "token_partner_reference",
          "required": true,
          "attributes": [],
          "description": "The Id of the partner for which this token was created"
        },
        {
          "name": "environment",
          "type": "environment",
          "required": true,
          "attributes": []
        },
        {
          "name": "user",
          "type": "user_reference",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Summary data for a given token"
    },
    {
      "name": "password_change_form",
      "plural": "password_change_forms",
      "fields": [
        {
          "name": "current",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The current valid account password"
        },
        {
          "name": "new",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The new password"
        }
      ],
      "attributes": []
    },
    {
      "name": "password_reset_form",
      "plural": "password_reset_forms",
      "fields": [
        {
          "name": "token",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The token for the password reset request"
        },
        {
          "name": "password",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The new password"
        }
      ],
      "attributes": []
    },
    {
      "name": "password_reset_request_form",
      "plural": "password_reset_request_forms",
      "fields": [
        {
          "name": "email",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "payment_deleted",
      "plural": "payment_deleteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "payment_error",
      "plural": "payment_errors",
      "fields": [
        {
          "name": "code",
          "type": "string",
          "required": true,
          "attributes": [],
          "default": "payment_error"
        },
        {
          "name": "messages",
          "type": "[string]",
          "required": true,
          "attributes": [],
          "minimum": 1
        },
        {
          "name": "codes",
          "type": "[payment_error_code]",
          "required": true,
          "attributes": [],
          "minimum": 1
        }
      ],
      "attributes": [],
      "description": "Details for why a payment failed"
    },
    {
      "name": "payment_method",
      "plural": "payment_methods",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier",
          "example": "visa"
        },
        {
          "name": "type",
          "type": "payment_method_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": [],
          "example": "VISA"
        },
        {
          "name": "images",
          "type": "payment_method_images",
          "required": true,
          "attributes": []
        },
        {
          "name": "regions",
          "type": "[string]",
          "required": true,
          "attributes": [],
          "description": "List of region ids in which this payment method is available"
        }
      ],
      "attributes": [],
      "description": "Represents a single payment method - e.g VISA or Paypal - and any associated metadata required for processing"
    },
    {
      "name": "payment_method_image",
      "plural": "single_payment_method_images",
      "fields": [
        {
          "name": "url",
          "type": "string",
          "required": true,
          "attributes": [],
          "example": "https://www.paypalobjects.com/webstatic/mktg/logo-center/PP_Acceptance_Marks_for_LogoCenter_150x94.png"
        },
        {
          "name": "width",
          "type": "integer",
          "required": true,
          "attributes": [],
          "example": "150"
        },
        {
          "name": "height",
          "type": "integer",
          "required": true,
          "attributes": [],
          "example": "94"
        }
      ],
      "attributes": []
    },
    {
      "name": "payment_method_images",
      "plural": "payment_method_images",
      "fields": [
        {
          "name": "small",
          "type": "payment_method_image",
          "required": true,
          "attributes": []
        },
        {
          "name": "medium",
          "type": "payment_method_image",
          "required": true,
          "attributes": []
        },
        {
          "name": "large",
          "type": "payment_method_image",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "payment_method_rule",
      "plural": "payment_method_rules",
      "fields": [
        {
          "name": "tags",
          "type": "[payment_method_tag]",
          "required": true,
          "attributes": [],
          "description": "A collection of active tags for this payment such as whether it is denied for an organization or to be displayed at checkout."
        },
        {
          "name": "payment_method",
          "type": "payment_method",
          "required": true,
          "attributes": []
        },
        {
          "name": "display_position",
          "type": "integer",
          "required": true,
          "attributes": [],
          "description": "The order in which payment methods will be displayed. Lower numbers will have priority."
        }
      ],
      "attributes": []
    },
    {
      "name": "payment_paypal",
      "plural": "payment_paypals",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "order",
          "type": "authorization_order_reference",
          "required": false,
          "attributes": [],
          "description": "If this authorization was made for a specific order number, that order will be referenced here"
        },
        {
          "name": "amount",
          "type": "decimal",
          "required": true,
          "attributes": [],
          "description": "The amount to authorize",
          "example": "120.38"
        },
        {
          "name": "currency",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The ISO 4217-3 code for the currency. Case insensitive. See https://api.flow.io/reference/currencies",
          "example": "CAD"
        },
        {
          "name": "paypal",
          "type": "payment_paypal_data",
          "required": true,
          "attributes": [],
          "description": "Specific data from paypal"
        }
      ],
      "attributes": [],
      "description": "Represents on line payment"
    },
    {
      "name": "payment_paypal_data",
      "plural": "payment_paypal_data",
      "fields": [
        {
          "name": "payment_id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The payment ID in paypal",
          "example": "PAY-lkj23lk4j23l42341123"
        }
      ],
      "attributes": [],
      "description": "Represents on line payment"
    },
    {
      "name": "payment_reference",
      "plural": "payment_references",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "payment_upserted",
      "plural": "payment_upserteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "payment",
          "type": "payment",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "payment_version",
      "plural": "payment_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "payment",
          "type": "payment",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "paypal_authorization_form",
      "plural": "paypal_authorization_forms",
      "fields": [
        {
          "name": "paypal_payment_id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The Paypal Payment Id"
        },
        {
          "name": "paypal_payer_id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The Paypal Id of the person who is paying"
        },
        {
          "name": "key",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Your unique identifier for this transaction, which if provided is used to implement idempotency. If not provided, we will assign."
        },
        {
          "name": "attributes",
          "type": "map[string]",
          "required": false,
          "attributes": [],
          "description": "A set of key/value pairs that you can attach to an authorization object"
        },
        {
          "name": "ip",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "The IP address of the consumer",
          "example": "96.242.151.245"
        }
      ],
      "attributes": [],
      "description": "Executes the Paypal payment"
    },
    {
      "name": "percent_margin",
      "plural": "percent_margins",
      "fields": [
        {
          "name": "percentage",
          "type": "double",
          "required": true,
          "attributes": [],
          "description": "Percentage of the cost to be added to actual cost to get quote amount to show to customer"
        }
      ],
      "attributes": [],
      "description": "Rule outcome where shipping surfaced in quote is actual cost plus a predefined margin percentage"
    },
    {
      "name": "phrase_hint",
      "plural": "phrase_hints",
      "fields": [
        {
          "name": "phrase",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "A short phrase describing a product in generic terms, intended to uniquely identify a code from a harmonization system.",
          "example": "Mens 100% Cotton Shorts"
        },
        {
          "name": "hs10_code",
          "type": "hs10_code",
          "required": true,
          "attributes": [],
          "description": "The actual HS-10 code for a destination country.",
          "example": "392620123"
        }
      ],
      "attributes": []
    },
    {
      "name": "phrase_hint_form",
      "plural": "phrase_hint_forms",
      "fields": [
        {
          "name": "phrase",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "A short phrase describing a product in generic terms, intended to uniquely identify a code from a harmonization system.",
          "example": "Mens 100% Cotton Shorts"
        },
        {
          "name": "destination",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The ISO 3166 3 character code for the destination country"
        }
      ],
      "attributes": []
    },
    {
      "name": "physical_delivery",
      "plural": "physical_deliveries",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "center",
          "type": "center_summary",
          "required": false,
          "attributes": [],
          "description": "Origin center for this delivery."
        },
        {
          "name": "items",
          "type": "[line_item_form]",
          "required": true,
          "attributes": []
        },
        {
          "name": "options",
          "type": "[delivery_option]",
          "required": true,
          "attributes": [],
          "minimum": 1
        }
      ],
      "attributes": [],
      "description": "Represents a collection of items, the available delivery option tier for that collection of items, and metadata about those options"
    },
    {
      "name": "price",
      "plural": "prices",
      "fields": [
        {
          "name": "amount",
          "type": "double",
          "required": true,
          "attributes": []
        },
        {
          "name": "currency",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "ISO 4217 3 currency code as defined in https://api.flow.io/reference/currencies",
          "example": "CAD"
        },
        {
          "name": "label",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Represents an amount-currency pair for a basic price"
    },
    {
      "name": "price_check",
      "plural": "price_checks",
      "fields": [
        {
          "name": "display",
          "type": "local_price_details",
          "required": true,
          "attributes": [],
          "description": "Contains the (estimated) price details that are displayed to the user. These details will never change."
        },
        {
          "name": "final",
          "type": "local_price_details",
          "required": true,
          "attributes": [],
          "description": "Contains the final price details, which are initially equal to the display details. At the order level (when shipping address is known), these details may be adjusted."
        }
      ],
      "attributes": []
    },
    {
      "name": "price_detail",
      "plural": "price_details",
      "fields": [
        {
          "name": "key",
          "type": "price_detail_key",
          "required": true,
          "attributes": [],
          "description": "The key indicating what this price detail represents."
        },
        {
          "name": "components",
          "type": "[price_detail_component]",
          "required": true,
          "attributes": []
        },
        {
          "name": "amount",
          "type": "decimal",
          "required": true,
          "attributes": []
        },
        {
          "name": "label",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The formatted label to display for this detail, e.g. '$123.45 CAD'."
        },
        {
          "name": "name",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "The display name for this price detail."
        }
      ],
      "attributes": [],
      "description": "Represents a top-level price detail, e.g. 'Subtotal' or 'VAT'."
    },
    {
      "name": "price_detail_component",
      "plural": "price_detail_components",
      "fields": [
        {
          "name": "key",
          "type": "price_detail_component_key",
          "required": true,
          "attributes": []
        },
        {
          "name": "amount",
          "type": "decimal",
          "required": true,
          "attributes": []
        },
        {
          "name": "label",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The formatted label to display for this component, e.g. '$123.45 CAD'."
        },
        {
          "name": "name",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "The display name for this price detail component."
        }
      ],
      "attributes": []
    },
    {
      "name": "price_details",
      "plural": "price_detailses",
      "fields": [
        {
          "name": "currency",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The currency in which these price details were calculated."
        },
        {
          "name": "item_price",
          "type": "price_detail",
          "required": true,
          "attributes": [],
          "description": "Details of the item's base price from the master catalog, including any applicable discounts."
        },
        {
          "name": "margins",
          "type": "price_detail",
          "required": true,
          "attributes": [],
          "description": "Contains the currency margin, percent item margin, and fixed item margin."
        },
        {
          "name": "vat",
          "type": "price_detail",
          "required": true,
          "attributes": [],
          "description": "The total amount of VAT applied. VAT is applied to the item price and optionally to the duty/shipping prices based on the destination country."
        },
        {
          "name": "duty",
          "type": "price_detail",
          "required": true,
          "attributes": [],
          "description": "The total amount of DUTY applied. Duty is applied to the item price and optionally to the shipping prices based on the destination country, and also will take into account de minimis (thus amount may be zero if de minimis applies)."
        },
        {
          "name": "rounding",
          "type": "price_detail",
          "required": true,
          "attributes": [],
          "description": "The amount required to meet the rounding requirements from the experience's settings. For example, if an item price is 121.50, and the rounding setting is up to the nearest '1.00', rounding would return .50 here."
        },
        {
          "name": "price",
          "type": "price",
          "required": true,
          "attributes": [],
          "description": "The rounded price of the item as seen by customers in price detail pages, which takes into account VAT and duty pricing settings of the experience."
        },
        {
          "name": "total",
          "type": "price",
          "required": true,
          "attributes": [],
          "description": "The total price of the item as seen by customers at checkout, which includes the base price, discount, margins, VAT, duty, and rounding."
        },
        {
          "name": "adjustment",
          "type": "price_detail",
          "required": false,
          "attributes": [],
          "description": "The total amount the total price was altered due to sales margins. A negative value indicates a discount."
        }
      ],
      "attributes": [],
      "description": "Detailed information for the pricing of a given item within an experience."
    },
    {
      "name": "price_equation",
      "plural": "price_equations",
      "fields": [
        {
          "name": "contracted_rate",
          "type": "decimal",
          "required": true,
          "attributes": [],
          "description": "The value of the contracted currency conversion rate between Flow and an organization."
        },
        {
          "name": "rate",
          "type": "decimal",
          "required": true,
          "attributes": [],
          "description": "The value of the currency conversion rate that includes an organization-specific margin if applicable."
        },
        {
          "name": "pricing",
          "type": "pricing",
          "required": true,
          "attributes": [],
          "description": "Contains pricing settings for VAT, duty, and rounding."
        },
        {
          "name": "base_price",
          "type": "decimal",
          "required": true,
          "attributes": [],
          "description": "The base price of the product."
        },
        {
          "name": "discount",
          "type": "decimal",
          "required": true,
          "attributes": [],
          "description": "The discount to apply to the base price of the product in the same currency as the base product."
        },
        {
          "name": "fixed_margin",
          "type": "decimal",
          "required": true,
          "attributes": [],
          "description": "A fixed amount to add, e.g 2.5 would add an absolute margin of 2.5 in the base currency of your item."
        },
        {
          "name": "percent_margin",
          "type": "decimal",
          "required": true,
          "attributes": [],
          "description": "A percent of the base cost to add, e.g. 1.2 would represent a 1.2% increase."
        },
        {
          "name": "insurance",
          "type": "decimal",
          "required": true,
          "attributes": [],
          "description": "The insurance information associated with the product."
        },
        {
          "name": "freight",
          "type": "decimal",
          "required": true,
          "attributes": [],
          "description": "The freight information associated with the product."
        },
        {
          "name": "duty",
          "type": "duty",
          "required": false,
          "attributes": [],
          "description": "The duty rate applicable to the product. A value of 15 indicates a duty rate of 15%.",
          "example": "15.25"
        },
        {
          "name": "tax",
          "type": "tax",
          "required": false,
          "attributes": [],
          "description": "The tax rate applicable to the product. A value of 17 indicates a tax rate of 17%.",
          "example": "17"
        },
        {
          "name": "percent_sales_margin",
          "type": "decimal",
          "required": true,
          "attributes": [],
          "description": "A percent sales margin to apply after the other margins, duties, taxes and margins. A value of 17 indicates an increase of 17%. A value of 5.5 indicates a discount of 5.5%",
          "default": "0"
        }
      ],
      "attributes": []
    },
    {
      "name": "price_form",
      "plural": "price_forms",
      "fields": [
        {
          "name": "amount",
          "type": "double",
          "required": true,
          "attributes": []
        },
        {
          "name": "currency",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "ISO 4217 3 currency code as defined in https://api.flow.io/reference/currencies",
          "example": "CAD"
        }
      ],
      "attributes": [],
      "description": "Amount-currency paid for a basic price to be used in model forms, before a price label is created. Label in the main price model is created by the implementing api."
    },
    {
      "name": "price_with_base",
      "plural": "price_with_bases",
      "fields": [
        {
          "name": "currency",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Iso 4217 3 currency code as defined in https://api.flow.io/reference/currencies",
          "example": "CAD"
        },
        {
          "name": "amount",
          "type": "double",
          "required": true,
          "attributes": []
        },
        {
          "name": "label",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The localized label of the amount and currency",
          "example": "$125.00 CAD"
        },
        {
          "name": "base",
          "type": "price",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "pricing",
      "plural": "pricings",
      "fields": [
        {
          "name": "vat",
          "type": "pricing_levy_setting",
          "required": true,
          "attributes": [],
          "description": "Determines how VAT is treated within this experience - whether it is included in the item price, displayed as a stand alone line item, or ignored - and only used in checkout (see the orders resource)"
        },
        {
          "name": "duty",
          "type": "pricing_levy_setting",
          "required": true,
          "attributes": [],
          "description": "Determines how Duty is treated within this experience - whether it is included in the item price, displayed as a stand alone line item, or ignored - and only used in checkout (see the orders resource)"
        },
        {
          "name": "rounding",
          "type": "rounding",
          "required": false,
          "attributes": [],
          "description": "If specified, we will round prices in this experience"
        }
      ],
      "attributes": [],
      "description": "Pricing determines how the item price is calculated when items are requests via the experience."
    },
    {
      "name": "pricing_deleted",
      "plural": "pricing_deleteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "experience_key",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "pricing_upserted",
      "plural": "pricing_upserteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "experience_key",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "vat",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "duty",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "rounding_type",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "rounding_method",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "rounding_value",
          "type": "decimal",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "promotion_trigger",
      "plural": "promotion_triggers",
      "fields": [
        {
          "name": "type",
          "type": "promotion_trigger_type",
          "required": true,
          "attributes": [],
          "example": "order_subtotal"
        },
        {
          "name": "min",
          "type": "price",
          "required": true,
          "attributes": [],
          "description": "Minimum amount to be eligible for the trigger"
        },
        {
          "name": "remaining",
          "type": "price",
          "required": true,
          "attributes": [],
          "description": "Remaining value necessary to apply the trigger"
        },
        {
          "name": "max",
          "type": "price",
          "required": false,
          "attributes": [],
          "description": "Maximum value covered by trigger"
        }
      ],
      "attributes": []
    },
    {
      "name": "promotions",
      "plural": "promotionses",
      "fields": [
        {
          "name": "applied",
          "type": "[promotion]",
          "required": true,
          "attributes": [],
          "description": "List of promotions that have been applied to this order. For example, free shipping promotion is applied to the shipping price."
        },
        {
          "name": "available",
          "type": "[promotion]",
          "required": true,
          "attributes": [],
          "description": "List of available promotions that are applicable for this order. If a promotion is here, the promo is not yet applied to the order, but the order can become eligible for it given some criteria."
        }
      ],
      "attributes": []
    },
    {
      "name": "province",
      "plural": "provinces",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier",
          "example": "AUS-NSW"
        },
        {
          "name": "iso_3166_2",
          "type": "string",
          "required": true,
          "attributes": [],
          "example": "NSW"
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": [],
          "example": "New South Wales"
        },
        {
          "name": "country",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "ISO 3166 3 code of the country for this subdivision",
          "example": "AUS"
        },
        {
          "name": "province_type",
          "type": "province_type",
          "required": true,
          "attributes": [],
          "example": "province"
        }
      ],
      "attributes": [],
      "description": "A subdivision/province/state within a country. These conform to the ISO 3166-2 standard for country subdivisions. See https://api.flow.io/reference/provinces"
    },
    {
      "name": "public_key",
      "plural": "public_keys",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "RSA Public Key, base 64 encoded"
        }
      ],
      "attributes": [],
      "description": "A public key is used to encrypt cards client side prior to submitting to the Flow vault."
    },
    {
      "name": "query",
      "plural": "queries",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "q",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "query_type",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Represents a typed query to indicate which items to include or exclude in a subcatalog"
    },
    {
      "name": "query_form",
      "plural": "query_forms",
      "fields": [
        {
          "name": "q",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Query string used to search for items"
        },
        {
          "name": "type",
          "type": "query_type",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Defines a query specifying items to be included or excluded in a subcatalog"
    },
    {
      "name": "query_validation",
      "plural": "query_validations",
      "fields": [
        {
          "name": "valid",
          "type": "[string]",
          "required": true,
          "attributes": []
        },
        {
          "name": "invalid",
          "type": "[string]",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Indicates valid and invalid queries"
    },
    {
      "name": "quote",
      "plural": "quotes",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "destination",
          "type": "shipping_address",
          "required": true,
          "attributes": []
        },
        {
          "name": "deliveries",
          "type": "[delivery]",
          "required": true,
          "attributes": []
        },
        {
          "name": "selections",
          "type": "[delivery_option_reference]",
          "required": true,
          "attributes": [],
          "description": "Selected options for the quote. This is used to prepare accurate fully-landed costs of an order and can also be used to pre-select a delivery option on a typical checkout page. By default, the option(s) shown here are part of the default tier of an experience. If no default tier has been designated for the tier group, the default selection would be the first option in the list."
        },
        {
          "name": "delivered_duty",
          "type": "delivered_duty",
          "required": true,
          "attributes": [],
          "description": "Desired delivered duty options to be returned as part of this quote. If not provided, default to paid.",
          "default": "paid"
        }
      ],
      "attributes": [],
      "description": "Represents a collection of deliveries and available options for fulfillment of that delivery"
    },
    {
      "name": "quote_error",
      "plural": "quote_errors",
      "fields": [
        {
          "name": "code",
          "type": "quote_error_code",
          "required": true,
          "attributes": []
        },
        {
          "name": "messages",
          "type": "[string]",
          "required": true,
          "attributes": [],
          "description": "A summary of the errors",
          "minimum": 1
        },
        {
          "name": "item_numbers",
          "type": "[string]",
          "required": false,
          "attributes": [],
          "description": "A list of of the item numbers that are not available in inventory"
        }
      ],
      "attributes": []
    },
    {
      "name": "quote_form",
      "plural": "quote_forms",
      "fields": [
        {
          "name": "destination",
          "type": "shipping_address",
          "required": true,
          "attributes": []
        },
        {
          "name": "experience",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Experience to use for the region of this quote"
        },
        {
          "name": "items",
          "type": "[line_item_form]",
          "required": true,
          "attributes": [],
          "minimum": 1
        },
        {
          "name": "delivered_duty",
          "type": "delivered_duty",
          "required": false,
          "attributes": [],
          "description": "Desired delivered duty options to be returned as part of this quote. If not provided, service will use all available rates."
        }
      ],
      "attributes": []
    },
    {
      "name": "quote_summary",
      "plural": "quote_summaries",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "destination",
          "type": "shipping_address",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "quote_version",
      "plural": "quote_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "quote",
          "type": "quote_summary",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "rate",
      "plural": "rates",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "base",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The base currency's ISO 4217 3-character code as defined in https://api.flow.io/reference/currencies"
        },
        {
          "name": "target",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The target currency's ISO 4217 3-character code as defined in https://api.flow.io/reference/currencies"
        },
        {
          "name": "effective_at",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": [],
          "description": "The time at which this rate is effective."
        },
        {
          "name": "value",
          "type": "decimal",
          "required": true,
          "attributes": [],
          "description": "The actual conversion rate from the base currency to target currency including any applicable margins."
        }
      ],
      "attributes": [],
      "description": "Represents an organization-specific currency conversion rate at a point in time."
    },
    {
      "name": "rate_deleted",
      "plural": "rate_deleteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "rate_id",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "rate_form",
      "plural": "rate_forms",
      "fields": [
        {
          "name": "base",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The base currency's ISO 4217 3-character code as defined in https://api.flow.io/reference/currencies"
        },
        {
          "name": "target",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The target currency's ISO 4217 3-character code as defined in https://api.flow.io/reference/currencies"
        },
        {
          "name": "effective_at",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": [],
          "description": "The time at which this rate is effective."
        }
      ],
      "attributes": [],
      "description": "Represents the parts of an organization rate that can be updated."
    },
    {
      "name": "rate_upserted",
      "plural": "rate_upserteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "rate_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "base",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "target",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "effective_at",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "value",
          "type": "decimal",
          "required": true,
          "attributes": [],
          "description": "The actual conversion rate after all margins have been applied."
        }
      ],
      "attributes": []
    },
    {
      "name": "rate_version",
      "plural": "rate_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "rate",
          "type": "rate",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "refund",
      "plural": "refunds",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "key",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "authorization",
          "type": "authorization_reference",
          "required": true,
          "attributes": []
        },
        {
          "name": "amount",
          "type": "decimal",
          "required": true,
          "attributes": [],
          "description": "The amount to refund in the currency of the associated capture",
          "example": "120.38"
        },
        {
          "name": "currency",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The ISO 4217-3 code for the currency. Case insensitive. See https://api.flow.io/reference/currencies",
          "example": "CAD"
        },
        {
          "name": "captures",
          "type": "[refund_capture]",
          "required": true,
          "attributes": [],
          "description": "The specific captures and the amounts refunded against each to match the total refund amount.",
          "minimum": 1
        },
        {
          "name": "created_at",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "attributes",
          "type": "map[string]",
          "required": false,
          "attributes": [],
          "description": "A set of key/value pairs that you can attach to a refund object"
        }
      ],
      "attributes": [],
      "description": "Refunds can be created against either a specific capture or an authorization (in which case we will select 1 or more specific captures against which to execute the refund)."
    },
    {
      "name": "refund_capture",
      "plural": "refund_captures",
      "fields": [
        {
          "name": "capture",
          "type": "capture",
          "required": true,
          "attributes": []
        },
        {
          "name": "amount",
          "type": "decimal",
          "required": true,
          "attributes": [],
          "description": "The amount refunded against this capture, in the currency of the refund",
          "example": "120.38"
        }
      ],
      "attributes": [],
      "description": "Refund captures provide the detailed information on the amount refunded against a specific capture"
    },
    {
      "name": "refund_form",
      "plural": "refund_forms",
      "fields": [
        {
          "name": "authorization_id",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "The Id of the authorization against which to issue the refund. If specified, we will look at all captures for this authorization, selecting 1 or more captures against which to issue the refund of the requested amount."
        },
        {
          "name": "capture_id",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "The Id of the capture against which to issue the refund. If specified, we will only consider this capture."
        },
        {
          "name": "order_number",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "The order number if specified during authorization. If specified, we will lookup all authorizations made against this order number, and then selecting 1 or more authorizations against which to issue the refund of the requested amount."
        },
        {
          "name": "key",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Your unique identifier for this transaction, which if provided is used to implement idempotency. If not provided, we will assign."
        },
        {
          "name": "amount",
          "type": "decimal",
          "required": false,
          "attributes": [],
          "description": "The amount to refund, in the currency of the associated capture. Defaults to the value of the capture minus any prior refunds.",
          "example": "120.38"
        },
        {
          "name": "currency",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "The ISO 4217-3 code for the currency. Required if amount is specified. Case insensitive. Note you will get an error if the currency does not match the related authrization's currency. See https://api.flow.io/reference/currencies",
          "example": "CAD"
        },
        {
          "name": "rma_key",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "The RMA key, if available. If specified, this will udpate the RMA status as refunded."
        },
        {
          "name": "attributes",
          "type": "map[string]",
          "required": false,
          "attributes": [],
          "description": "A set of key/value pairs that you can attach to a refund object"
        }
      ],
      "attributes": [],
      "description": "Refund actually transfers funds. You can refund as many times as you'd like up until the total amount of captured funds has been refunded. Note when creating a refund you can specify either an order authorization id, a capture id, or an order number (or all of them as long as they match)."
    },
    {
      "name": "refund_order_summary",
      "plural": "refund_order_summaries",
      "fields": [
        {
          "name": "order_number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Client order number"
        },
        {
          "name": "currency",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The ISO 4217-3 code for the currency. Case insensitive. See https://api.flow.io/reference/currencies",
          "example": "CAD"
        },
        {
          "name": "captured",
          "type": "decimal",
          "required": true,
          "attributes": [],
          "description": "The total amount of funds captured for this order. If there were multiple captures, this number will include the sum of the amounts captured.",
          "example": "120.38"
        },
        {
          "name": "refunded",
          "type": "decimal",
          "required": true,
          "attributes": [],
          "description": "The total amount of refunds issued for this order. If there were multiple refunds, this number will include the sum of the amounts refunded.",
          "example": "20.00"
        },
        {
          "name": "amounts",
          "type": "refund_order_summary_amounts",
          "required": true,
          "attributes": [],
          "description": "Suggested amounts to refund based on the most common use cases"
        }
      ],
      "attributes": [],
      "description": "For merchant of record authorizations, we provide a summary of refund information primarily to support customer service workflow."
    },
    {
      "name": "refund_order_summary_amounts",
      "plural": "refund_order_summary_amounts",
      "fields": [
        {
          "name": "balance",
          "type": "decimal",
          "required": true,
          "attributes": [],
          "description": "The total amount of funds available to refund (sum of all captures minus all prior refunds).",
          "example": "110.38"
        },
        {
          "name": "balance_excluding_shipping",
          "type": "decimal",
          "required": false,
          "attributes": [],
          "description": "The balance minus shipping costs. If there was either no shipping cost or the remaining balance is < shipping cost, this field will not be provided.",
          "example": "100.38"
        },
        {
          "name": "shipping",
          "type": "decimal",
          "required": false,
          "attributes": [],
          "description": "The total amount of shipping on the order, if there was a shipping fee. We highlight this value separately to simplify use cases where a full refund minus shipping is used.",
          "example": "9.95"
        }
      ],
      "attributes": [],
      "description": "Detailed examples of amount to refund following common ecommerce use cases."
    },
    {
      "name": "refund_upserted",
      "plural": "refund_upserteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "key",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "authorization_key",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "amount",
          "type": "decimal",
          "required": true,
          "attributes": []
        },
        {
          "name": "currency",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "captures",
          "type": "[object]",
          "required": true,
          "attributes": []
        },
        {
          "name": "created_at",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "order_number",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "rma_key",
          "type": "string",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "refund_upserted_v2",
      "plural": "refund_upserted_v2s",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "refund",
          "type": "refund",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "refund_version",
      "plural": "refund_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "refund",
          "type": "refund",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "region",
      "plural": "regions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": [],
          "example": "United States of America"
        },
        {
          "name": "countries",
          "type": "[string]",
          "required": true,
          "attributes": [],
          "description": "A list of the countries as ISO 3166 3 codes in this region",
          "minimum": 1
        },
        {
          "name": "currencies",
          "type": "[string]",
          "required": true,
          "attributes": [],
          "description": "A list of the currencies as ISO 4217 3 codes in this region",
          "minimum": 0
        },
        {
          "name": "languages",
          "type": "[string]",
          "required": true,
          "attributes": [],
          "description": "A list of the languages as ISO 639 2 codes spoken in this region",
          "minimum": 0
        },
        {
          "name": "measurement_systems",
          "type": "[string]",
          "required": true,
          "attributes": [],
          "description": "A list of the measurement systems in use in this region (metric or imperial)",
          "minimum": 0
        },
        {
          "name": "timezones",
          "type": "[string]",
          "required": true,
          "attributes": [],
          "description": "A list of canonical timezone IDs for the region. See http://joda-time.sourceforge.net/timezones.html",
          "example": "America/New_York"
        }
      ],
      "attributes": [],
      "description": "A region represents a geographic area of the world. Regions can be countries, continents or other political areas (like the Eurozone). See https://api.flow.io/reference/regions"
    },
    {
      "name": "region_reference",
      "plural": "region_references",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "return",
      "plural": "returns",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Human-readable string starting with F12."
        },
        {
          "name": "key",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "items",
          "type": "[return_line_item]",
          "required": true,
          "attributes": [],
          "minimum": 1
        },
        {
          "name": "labels",
          "type": "[shipping_label]",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "return_deleted",
      "plural": "return_deleteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "return_form",
      "plural": "return_forms",
      "fields": [
        {
          "name": "items",
          "type": "[return_line_item]",
          "required": true,
          "attributes": [],
          "minimum": 1
        },
        {
          "name": "service",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Service level to use for return package. If not specified, will default to FASTEST service level in reverse logistics tier of the order's experience."
        },
        {
          "name": "destination",
          "type": "shipping_address",
          "required": false,
          "attributes": [],
          "description": "Destination of the return. If not provided, will default to calculated destination based on original location of the product and carrier service level."
        },
        {
          "name": "key",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Organization's internal identifier for this return. If one is not available or provided, Flow will generate."
        },
        {
          "name": "origin",
          "type": "shipping_address",
          "required": false,
          "attributes": [],
          "description": "Origin address of the return. If not provided, will default to destination address of the original order."
        }
      ],
      "attributes": []
    },
    {
      "name": "return_item_reference",
      "plural": "return_item_references",
      "fields": [
        {
          "name": "number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Client's unique identifier for this object"
        }
      ],
      "attributes": []
    },
    {
      "name": "return_line_item",
      "plural": "return_line_items",
      "fields": [
        {
          "name": "item_number",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "order_number",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "quantity",
          "type": "long",
          "required": true,
          "attributes": [],
          "minimum": 1
        },
        {
          "name": "reason",
          "type": "return_reason",
          "required": false,
          "attributes": []
        },
        {
          "name": "notes",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Optional notes to provide explanation or context for the respective return reason."
        }
      ],
      "attributes": []
    },
    {
      "name": "return_order_reference",
      "plural": "return_order_references",
      "fields": [
        {
          "name": "number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Client's unique identifier for this object"
        }
      ],
      "attributes": []
    },
    {
      "name": "return_reason",
      "plural": "return_reasons",
      "fields": [
        {
          "name": "key",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "return_reason_form",
      "plural": "return_reason_forms",
      "fields": [
        {
          "name": "key",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "name",
          "type": "string",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "return_reason_put_form",
      "plural": "return_reason_put_forms",
      "fields": [
        {
          "name": "name",
          "type": "string",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "return_upserted",
      "plural": "return_upserteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "destination",
          "type": "object",
          "required": true,
          "attributes": []
        },
        {
          "name": "items",
          "type": "object",
          "required": true,
          "attributes": []
        },
        {
          "name": "key",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "labels",
          "type": "object",
          "required": true,
          "attributes": []
        },
        {
          "name": "service",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "origin",
          "type": "object",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "return_version",
      "plural": "return_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "return",
          "type": "return",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "rounding",
      "plural": "roundings",
      "fields": [
        {
          "name": "type",
          "type": "rounding_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "method",
          "type": "rounding_method",
          "required": true,
          "attributes": []
        },
        {
          "name": "value",
          "type": "decimal",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "schedule",
      "plural": "schedules",
      "fields": [
        {
          "name": "calendar",
          "type": "calendar",
          "required": false,
          "attributes": [],
          "description": "Operating calendar used by origin center for shipment, if available. If not provided, assume they are never open.",
          "example": "Weekdays, 7 days, etc."
        },
        {
          "name": "holiday",
          "type": "holiday_calendar",
          "required": true,
          "attributes": [],
          "description": "Standard holiday set to respect for this schedule",
          "example": "US bank holidays"
        },
        {
          "name": "exception",
          "type": "[exception]",
          "required": true,
          "attributes": [],
          "description": "Holiday calendar used by origin center for shipment, if available.",
          "example": "Memorial Day, Independence Day, etc."
        },
        {
          "name": "cutoff",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Daily cutoff time for shipment fulfillment at origin center, if available. 24-hour time",
          "example": "16:45"
        },
        {
          "name": "min_lead_time",
          "type": "long",
          "required": false,
          "attributes": [],
          "description": "Optional number of days a center takes to make a shipment"
        },
        {
          "name": "max_lead_time",
          "type": "long",
          "required": false,
          "attributes": [],
          "description": "Optional number of days a center takes to make a shipment"
        }
      ],
      "attributes": [],
      "description": "Represents operating calendar and holidays of a center"
    },
    {
      "name": "scheduled_export",
      "plural": "scheduled_exports",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "user",
          "type": "user_reference",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization_q",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Search query to select the organizations for which to export data",
          "example": "'*' or 'environment:production' or 'environment:production id:demo -id:demo2'"
        },
        {
          "name": "hour",
          "type": "integer",
          "required": true,
          "attributes": [],
          "minimum": 0,
          "maximum": 23,
          "example": "14"
        },
        {
          "name": "minute",
          "type": "integer",
          "required": true,
          "attributes": [],
          "minimum": 0,
          "maximum": 59,
          "example": "15"
        },
        {
          "name": "timezone",
          "type": "string",
          "required": true,
          "attributes": [],
          "example": "EST"
        },
        {
          "name": "types",
          "type": "[export_type]",
          "required": true,
          "attributes": [],
          "description": "All the export types included in this scheduled export"
        },
        {
          "name": "last_sent_at",
          "type": "date-time-iso8601",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Allows a user to create a scheduled export that will be delivered on a schedule (currently only support once / day at a set time)"
    },
    {
      "name": "scheduled_export_form",
      "plural": "scheduled_export_forms",
      "fields": [
        {
          "name": "user_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization_q",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Search query to select the organizations for which to export data",
          "example": "'*' or 'environment:production' or 'environment:production id:demo -id:demo2'"
        },
        {
          "name": "hour",
          "type": "integer",
          "required": true,
          "attributes": [],
          "minimum": 0,
          "maximum": 23,
          "example": "14"
        },
        {
          "name": "minute",
          "type": "integer",
          "required": true,
          "attributes": [],
          "minimum": 0,
          "maximum": 59,
          "example": "15"
        },
        {
          "name": "timezone",
          "type": "string",
          "required": true,
          "attributes": [],
          "example": "EST"
        },
        {
          "name": "types",
          "type": "[export_type]",
          "required": true,
          "attributes": [],
          "description": "All the export types included in this scheduled export"
        }
      ],
      "attributes": []
    },
    {
      "name": "scheduled_pickup",
      "plural": "scheduled_pickups",
      "fields": [
        {
          "name": "day_of_week",
          "type": "day_of_week",
          "required": true,
          "attributes": [],
          "description": "Day of week when a pickup might occur"
        },
        {
          "name": "hour_of_day",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Local time hour of the day in military format. Valid values: 00-23",
          "example": "18"
        },
        {
          "name": "minute_of_hour",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Minute within the hour. Valid values: 00-59",
          "example": "30"
        }
      ],
      "attributes": []
    },
    {
      "name": "service",
      "plural": "services",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "carrier",
          "type": "carrier",
          "required": true,
          "attributes": []
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Specific service rendered by the carrier (fedex ground saturday, ups overnight weekend, etc)"
    },
    {
      "name": "service_reference",
      "plural": "service_references",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "service_summary",
      "plural": "service_summaries",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "carrier",
          "type": "carrier_reference",
          "required": true,
          "attributes": []
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "session_authorization_form",
      "plural": "session_authorization_forms",
      "fields": [
        {
          "name": "session",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The session Id"
        }
      ],
      "attributes": [],
      "description": "Authorize a request using a session id"
    },
    {
      "name": "session_expiration_config",
      "plural": "session_expiration_configs",
      "fields": [
        {
          "name": "unit",
          "type": "unit_of_time",
          "required": true,
          "attributes": [],
          "default": "minute"
        },
        {
          "name": "value",
          "type": "long",
          "required": true,
          "attributes": [],
          "default": "30",
          "minimum": 0
        }
      ],
      "attributes": [],
      "description": "Configures session expiration time. We default to 30 minutes to follow Google Analytics"
    },
    {
      "name": "session_form",
      "plural": "session_forms",
      "fields": [
        {
          "name": "ip",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "If specified, we will geolocate the user by this IP address, and if successful, select the experience matching the country of the IP address."
        },
        {
          "name": "experience",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "If specified, we will render the items in the context of the experience with this key."
        },
        {
          "name": "country",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "The ISO 3166-3 country code. Case insensitive. See https://api.flow.io/reference/countries",
          "example": "CAN"
        },
        {
          "name": "currency",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Iso 4217 3 currency code as defined in https://api.flow.io/reference/currencies If specified, translate the pricing to this currency. Translation occurs using the current spot rate for this currency from the base currency in the experience."
        },
        {
          "name": "language",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "ISO 639 2 language code as defined in https://api.flow.io/reference/languages If specified, translate content to this language (where available)",
          "example": "en"
        },
        {
          "name": "locale",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Locale ID as defined in https://api.flow.io/reference/locales",
          "example": "en-US"
        },
        {
          "name": "attributes",
          "type": "map[string]",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "session_put_form",
      "plural": "session_put_forms",
      "fields": [
        {
          "name": "ip",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "If specified, we will geolocate the user by this IP address, and if successful, select the experience matching the country of the IP address."
        },
        {
          "name": "experience",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "If specified, we will render the items in the context of the experience with this key."
        },
        {
          "name": "country",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "The ISO 3166-3 country code. Case insensitive. See https://api.flow.io/reference/countries",
          "example": "CAN"
        },
        {
          "name": "currency",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Iso 4217 3 currency code as defined in https://api.flow.io/reference/currencies If specified, translate the pricing to this currency. Translation occurs using the current spot rate for this currency from the base currency in the experience."
        },
        {
          "name": "language",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "ISO 639 2 language code as defined in https://api.flow.io/reference/languages If specified, translate content to this language (where available)",
          "example": "en"
        },
        {
          "name": "locale",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Locale ID as defined in https://api.flow.io/reference/locales",
          "example": "en-US"
        },
        {
          "name": "attributes",
          "type": "map[string]",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "session_reset_form",
      "plural": "session_reset_forms",
      "fields": [
        {
          "name": "ip",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "If specified, we will geolocate the user by this IP address, and if successful, select the experience matching the country of the IP address."
        },
        {
          "name": "experience",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "If specified, we will render the items in the context of the experience with this key."
        },
        {
          "name": "country",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "The ISO 3166-3 country code. Case insensitive. See https://api.flow.io/reference/countries",
          "example": "CAN"
        },
        {
          "name": "currency",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Iso 4217 3 currency code as defined in https://api.flow.io/reference/currencies If specified, translate the pricing to this currency. Translation occurs using the current spot rate for this currency from the base currency in the experience."
        },
        {
          "name": "language",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "ISO 639 2 language code as defined in https://api.flow.io/reference/languages If specified, translate content to this language (where available)",
          "example": "en"
        },
        {
          "name": "locale",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Locale ID as defined in https://api.flow.io/reference/locales",
          "example": "en-US"
        }
      ],
      "attributes": []
    },
    {
      "name": "session_visit",
      "plural": "session_visits",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "expires_at",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": [],
          "description": "The date / time on which this visit expires. The default session duration may vary by organization."
        }
      ],
      "attributes": [],
      "description": "A session visit expires after a configurable period of inactivity (e.g. 30 minutes)."
    },
    {
      "name": "session_visitor",
      "plural": "session_visitors",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        }
      ],
      "attributes": [],
      "description": "A session visitor is a unique identifier for our best guess as to who the individual user is interacting with Flow."
    },
    {
      "name": "shipping_address",
      "plural": "shipping_addresses",
      "fields": [
        {
          "name": "contact",
          "type": "contact",
          "required": true,
          "attributes": [],
          "description": "Contact information of entity at the address"
        },
        {
          "name": "location",
          "type": "address",
          "required": true,
          "attributes": [],
          "description": "Attributes of the physical location"
        }
      ],
      "attributes": []
    },
    {
      "name": "shipping_label",
      "plural": "shipping_labels",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "direction",
          "type": "direction",
          "required": true,
          "attributes": [],
          "description": "Tells us whether the ratecard is for outbound or reverse logistics. This will determine information passed on to carriers to make sure the correct label and accounts are used."
        },
        {
          "name": "attributes",
          "type": "map[string]",
          "required": true,
          "attributes": [],
          "description": "Reference information included with the label, if carrier provides support for reference information.",
          "default": "{}"
        },
        {
          "name": "carrier_tracking_number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Carrier-issued or generated tracking number of the first carrier taking hold of the package"
        },
        {
          "name": "carrier_tracking_number_url",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "cost",
          "type": "price",
          "required": true,
          "attributes": [],
          "description": "Estimated shipping cost to be charged to the merchant based on available ratecard with fulfilling carrier"
        },
        {
          "name": "destination",
          "type": "shipping_address",
          "required": true,
          "attributes": [],
          "description": "Destination contact information and structured address"
        },
        {
          "name": "flow_tracking_number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Flow-generated tracking number. 13 digit tracking number that begins with F70."
        },
        {
          "name": "flow_tracking_number_url",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "origin",
          "type": "shipping_address",
          "required": true,
          "attributes": [],
          "description": "Origin contact information and structured address"
        },
        {
          "name": "service",
          "type": "service_summary",
          "required": true,
          "attributes": [],
          "description": "Carrier service level used for generation and shipment of this label",
          "example": "ups-ground, dhl-express-worldwide"
        },
        {
          "name": "window",
          "type": "datetime_range",
          "required": true,
          "attributes": [],
          "description": "Estimated date range until delivery"
        },
        {
          "name": "commercial_invoice",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Pre-signed URL containing generated PDF commercial invoice required for international shipments"
        },
        {
          "name": "zpl",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Base64 encoded ZPL2-formatted data of the shipping label"
        },
        {
          "name": "pdf",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Pre-signed URL containing PDF copy of the shipping label. This is generated asynchronously and may not be immediately available."
        },
        {
          "name": "png",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Pre-signed URL containing PNG copy of the shipping label. This is generated asynchronously and may not be immediately available."
        },
        {
          "name": "order",
          "type": "label_order_summary",
          "required": false,
          "attributes": [],
          "description": "Order number/key of the client organization. This will allow Flow to tie and track a label to a submitted order, if applicable."
        }
      ],
      "attributes": [],
      "description": "Represents information about a carrier-generated shipping label used by a shipper to transport a package from a given origin to destination"
    },
    {
      "name": "shipping_label_form",
      "plural": "shipping_label_forms",
      "fields": [
        {
          "name": "destination",
          "type": "shipping_address",
          "required": true,
          "attributes": [],
          "description": "Destination contact information and structured address"
        },
        {
          "name": "origin",
          "type": "shipping_address",
          "required": true,
          "attributes": [],
          "description": "Origin contact information and structured address"
        },
        {
          "name": "package",
          "type": "shipping_label_package",
          "required": true,
          "attributes": [],
          "description": "Package to be shipped, including dimensions and items included"
        },
        {
          "name": "attributes",
          "type": "map[string]",
          "required": false,
          "attributes": [],
          "description": "Reference information included with the label, if carrier provides support for reference information."
        },
        {
          "name": "delivered_duty",
          "type": "delivered_duty",
          "required": false,
          "attributes": [],
          "description": "Determines if a shipment should be DDP. If DDP, note that in some cases if a customer is shipping to a country where DDP is not available, information may still come back as DDU. If not provided, Flow will set a base default based on the country"
        },
        {
          "name": "direction",
          "type": "direction",
          "required": false,
          "attributes": [],
          "description": "Tells us whether the ratecard is for outbound or reverse logistics. This will determine information passed on to carriers to make sure the correct label and accounts are used. If not specified, defaults to outbound."
        },
        {
          "name": "order_number",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Order number/key of the client organization. This will allow Flow to tie and track a label to a submitted order, if applicable."
        },
        {
          "name": "service",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Desired carrier service level to use for this label. If not provided, this will default to the delivery option that Flow calculated for the order."
        }
      ],
      "attributes": []
    },
    {
      "name": "shipping_label_package",
      "plural": "shipping_label_packages",
      "fields": [
        {
          "name": "dimensions",
          "type": "dimension",
          "required": true,
          "attributes": [],
          "description": "Packaging dimensions for the shipment using the requested shipping label"
        },
        {
          "name": "items",
          "type": "[line_item_form]",
          "required": true,
          "attributes": [],
          "description": "List of items and quantities going into this shipment",
          "minimum": 1
        }
      ],
      "attributes": [],
      "description": "Describes a package to be shipped, including dimensions and items included"
    },
    {
      "name": "shipping_label_summary",
      "plural": "shipping_label_summaries",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "flow_tracking_number",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "carrier_tracking_number",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "shipping_label_version",
      "plural": "shipping_label_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "shipping_label",
          "type": "shipping_label",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "shipping_notification",
      "plural": "shipping_notifications",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "key",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "attributes",
          "type": "map[string]",
          "required": true,
          "attributes": [],
          "description": "Reference information included with the label, if carrier provides support for reference information.",
          "default": "{}"
        },
        {
          "name": "carrier_tracking_number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Carrier-issued or generated tracking number of the first carrier taking hold of the package"
        },
        {
          "name": "destination",
          "type": "shipping_address",
          "required": true,
          "attributes": [],
          "description": "Destination contact information and structured address"
        },
        {
          "name": "flow_tracking_number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Flow-generated tracking number. 13 digit tracking number that begins with F70."
        },
        {
          "name": "origin",
          "type": "shipping_address",
          "required": true,
          "attributes": [],
          "description": "Origin contact information and structured address"
        },
        {
          "name": "package",
          "type": "shipping_label_package",
          "required": true,
          "attributes": [],
          "description": "Package to be shipped, including dimensions and items included"
        },
        {
          "name": "service",
          "type": "service_summary",
          "required": true,
          "attributes": [],
          "description": "Carrier service level used for generation and shipment of this label",
          "example": "ups-ground, dhl-express-worldwide"
        },
        {
          "name": "window",
          "type": "datetime_range",
          "required": true,
          "attributes": [],
          "description": "Estimated date range until delivery, based on ratecard delivery window days"
        },
        {
          "name": "order",
          "type": "label_order_summary",
          "required": false,
          "attributes": [],
          "description": "Order number/key of the client organization. This will allow Flow to tie and track a label to a submitted order, if applicable."
        }
      ],
      "attributes": [],
      "description": "Represents information about a client-facilitated shipment where the shipping label and fulfillment was not handled by Flow. For merchant-of-record and tracking purposes, clients doing their own shipping will need to notify Flow of shipped packages."
    },
    {
      "name": "shipping_notification_form",
      "plural": "shipping_notification_forms",
      "fields": [
        {
          "name": "key",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Clinet provided key. Unique per organization. If not provided, a default one will be generated."
        },
        {
          "name": "attributes",
          "type": "map[string]",
          "required": false,
          "attributes": [],
          "description": "Reference information included with the label, if carrier provides support for reference information."
        },
        {
          "name": "carrier_tracking_number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Carrier-issued or generated tracking number of the first carrier taking hold of the package"
        },
        {
          "name": "destination",
          "type": "shipping_address",
          "required": true,
          "attributes": [],
          "description": "Destination contact information and structured address"
        },
        {
          "name": "order_number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Order number/key of the client organization. This will allow Flow to tie and track a label to a submitted order, if applicable."
        },
        {
          "name": "package",
          "type": "shipping_label_package",
          "required": true,
          "attributes": [],
          "description": "Package to be shipped, including dimensions and items included"
        },
        {
          "name": "service",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Carrier service level used for generation and shipment of this label",
          "example": "ups-ground, dhl-express-worldwide"
        },
        {
          "name": "origin",
          "type": "shipping_address",
          "required": false,
          "attributes": [],
          "description": "Origin contact information and structured address. If not provided, will default to center used for the selected delivery option in the order."
        }
      ],
      "attributes": [],
      "description": "Form for information about a client-facilitated shipment where the shipping label and fulfillment was not handled by Flow. For merchant-of-record and tracking purposes, clients doing their own shipping will need to notify Flow of shipped packages."
    },
    {
      "name": "shipping_notification_version",
      "plural": "shipping_notification_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "shipping_notification",
          "type": "shipping_notification",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "snapshot_deleted",
      "plural": "snapshot_deleteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "snapshot_id",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "snapshot_upserted",
      "plural": "snapshot_upserteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "snapshot_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "available",
          "type": "long",
          "required": true,
          "attributes": []
        },
        {
          "name": "center_key",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "item_number",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "quantity",
          "type": "long",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "solidus_product_export_type",
      "plural": "solidus_product_export_types",
      "fields": [
        {
          "name": "numbers",
          "type": "[string]",
          "required": false,
          "attributes": [],
          "description": "The specific list of item numbers to export"
        },
        {
          "name": "sort",
          "type": "string",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Exports product level data for import into solidus"
    },
    {
      "name": "solidus_variant_export_type",
      "plural": "solidus_variant_export_types",
      "fields": [
        {
          "name": "numbers",
          "type": "[string]",
          "required": false,
          "attributes": [],
          "description": "The specific list of item numbers to export"
        },
        {
          "name": "sort",
          "type": "string",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Exports variant level data for import into solidus"
    },
    {
      "name": "subcatalog",
      "plural": "subcatalogs",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "catalog",
          "type": "catalog",
          "required": true,
          "attributes": []
        },
        {
          "name": "settings",
          "type": "subcatalog_settings",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "A configuration with custom query to select a subset of master catalog items for a localized experience"
    },
    {
      "name": "subcatalog_deleted",
      "plural": "subcatalog_deleteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "catalog",
          "type": "string",
          "required": true,
          "attributes": [],
          "example": "master"
        },
        {
          "name": "subcatalog_id",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "subcatalog_form",
      "plural": "subcatalog_forms",
      "fields": [
        {
          "name": "settings",
          "type": "subcatalog_settings_form",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "subcatalog_function",
      "plural": "subcatalog_functions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "item_function",
          "type": "item_function",
          "required": true,
          "attributes": []
        },
        {
          "name": "q",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Apply this pricing function to the items that match this query"
        },
        {
          "name": "position",
          "type": "long",
          "required": true,
          "attributes": [],
          "description": "Functions are ordered. Lower position numbers indicate function that should be applied earlier.",
          "minimum": 0
        }
      ],
      "attributes": []
    },
    {
      "name": "subcatalog_function_form",
      "plural": "subcatalog_function_forms",
      "fields": [
        {
          "name": "item_function_id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The Id of the item function to associate with this subcatalog"
        },
        {
          "name": "q",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Optionally apply this pricing function only to the items that match this query. If not specified, the pricing function will apply to all items."
        },
        {
          "name": "position",
          "type": "long",
          "required": false,
          "attributes": [],
          "description": "Functions are ordered. Lower position numbers indicate function that should be applied earlier. Defaults to last in list.",
          "minimum": 0
        }
      ],
      "attributes": []
    },
    {
      "name": "subcatalog_function_version",
      "plural": "subcatalog_function_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "subcatalog_function",
          "type": "subcatalog_function",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "subcatalog_item",
      "plural": "subcatalog_items",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "item",
          "type": "item",
          "required": true,
          "attributes": []
        },
        {
          "name": "status",
          "type": "subcatalog_item_status",
          "required": true,
          "attributes": []
        },
        {
          "name": "item_function",
          "type": "expandable_item_function",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Represents information specific to an item in a given subcatalog"
    },
    {
      "name": "subcatalog_item_deleted",
      "plural": "subcatalog_item_deleteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Client's unique identifier for this object"
        },
        {
          "name": "catalog",
          "type": "string",
          "required": true,
          "attributes": [],
          "example": "master"
        },
        {
          "name": "subcatalog_id",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "subcatalog_item_upserted",
      "plural": "subcatalog_item_upserteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "number",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Client's unique identifier for this object"
        },
        {
          "name": "catalog",
          "type": "string",
          "required": true,
          "attributes": [],
          "example": "master"
        },
        {
          "name": "subcatalog_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "status",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "function_id",
          "type": "string",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "subcatalog_item_version",
      "plural": "subcatalog_item_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "subcatalog_item",
          "type": "subcatalog_item",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "subcatalog_reference",
      "plural": "subcatalog_references",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "subcatalog_settings",
      "plural": "subcatalog_settings",
      "fields": [
        {
          "name": "update_policy",
          "type": "update_policy",
          "required": true,
          "attributes": [],
          "default": "auto"
        }
      ],
      "attributes": []
    },
    {
      "name": "subcatalog_settings_form",
      "plural": "subcatalog_settings_forms",
      "fields": [
        {
          "name": "update_policy",
          "type": "update_policy",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "subcatalog_statistics",
      "plural": "subcatalog_statisticses",
      "fields": [
        {
          "name": "excluded",
          "type": "item_statistics",
          "required": true,
          "attributes": [],
          "description": "Number of items that are currently excluded in this subcatalog"
        },
        {
          "name": "included",
          "type": "item_statistics",
          "required": true,
          "attributes": [],
          "description": "Total number of catalog items available from master catalog"
        },
        {
          "name": "restricted",
          "type": "item_statistics",
          "required": true,
          "attributes": [],
          "description": "Number of items that are currently restricted in this subcatalog"
        },
        {
          "name": "queue",
          "type": "item_statistics",
          "required": true,
          "attributes": [],
          "description": "Number of items that are currently queued to be added or updated to this subcatalog"
        },
        {
          "name": "catalog",
          "type": "catalog_statistics",
          "required": true,
          "attributes": [],
          "description": "The parent catalog's statistics. Provided here to make summary data easy to compute (e.g. what % of items are in this subcatalog)"
        }
      ],
      "attributes": [],
      "description": "Statistics related to the items in this subcatalog, including item count, number of distinct categories, etc."
    },
    {
      "name": "subcatalog_upserted",
      "plural": "subcatalog_upserteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "catalog",
          "type": "string",
          "required": true,
          "attributes": [],
          "example": "master"
        },
        {
          "name": "subcatalog_id",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "subcatalog_version",
      "plural": "subcatalog_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "subcatalog",
          "type": "subcatalog",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "suggestion",
      "plural": "suggestions",
      "fields": [
        {
          "name": "label",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The suggestion to display to user"
        },
        {
          "name": "count",
          "type": "long",
          "required": true,
          "attributes": [],
          "description": "The number of results for the label"
        }
      ],
      "attributes": []
    },
    {
      "name": "targeting",
      "plural": "targetings",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "key",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Unique client-provided identifier indicating uniqueness of the targeting request. Follows the convention: [service]-[model]-[id]. For example: ratecard-dimension-estimate-dst-8eec70ab1f2740e0b46c7c8867cd8e07"
        },
        {
          "name": "queries",
          "type": "[targeting_query]",
          "required": true,
          "attributes": [],
          "description": "Tuples of valid queries on a catalog and their corresponding output object in the client service"
        },
        {
          "name": "catalog",
          "type": "catalog_reference",
          "required": true,
          "attributes": []
        },
        {
          "name": "subcatalog",
          "type": "subcatalog_reference",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "targeting_form",
      "plural": "targeting_forms",
      "fields": [
        {
          "name": "key",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Unique client-provided identifier indicating uniqueness of the targeting request. Follows the convention: [service]-[model]-[id]. For example: ratecard-dimension-estimate-dst-8eec70ab1f2740e0b46c7c8867cd8e07"
        },
        {
          "name": "queries",
          "type": "[targeting_query_form]",
          "required": true,
          "attributes": [],
          "description": "Tuples of valid queries on a catalog and their corresponding output object in the client service"
        },
        {
          "name": "subcatalog_id",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "If a targeting is only for a specific subcatalog, then this needs to be provided"
        }
      ],
      "attributes": []
    },
    {
      "name": "targeting_item",
      "plural": "targeting_items",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "targeting",
          "type": "targeting_summary",
          "required": true,
          "attributes": []
        },
        {
          "name": "item_number",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "query",
          "type": "targeting_query",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Represents catalog items where a targeteing query is applicable"
    },
    {
      "name": "targeting_item_deleted",
      "plural": "targeting_item_deleteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "targeting_item_upserted",
      "plural": "targeting_item_upserteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "targeting_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "item_number",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "q",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "outcome_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "catalog_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "key",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "subcatalog_id",
          "type": "string",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Indiciates that a given item has been targeted by the query q producing an outcome. The item number is unique within its targeting_id."
    },
    {
      "name": "targeting_query",
      "plural": "targeting_queries",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "q",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Valid query on the organization's catalog items"
        },
        {
          "name": "outcome_id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "ID of corresponding outcome object in client service (e.g. item margin, dimension estimate, etc)"
        },
        {
          "name": "position",
          "type": "long",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "targeting_query_form",
      "plural": "targeting_query_forms",
      "fields": [
        {
          "name": "q",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Valid query on the organization's catalog items"
        },
        {
          "name": "outcome_id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "ID of corresponding outcome object in client service (e.g. item margin, dimension estimate, etc)"
        }
      ],
      "attributes": []
    },
    {
      "name": "targeting_summary",
      "plural": "targeting_summaries",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "key",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "catalog",
          "type": "catalog_reference",
          "required": true,
          "attributes": []
        },
        {
          "name": "subcatalog",
          "type": "subcatalog_reference",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "targeting_version",
      "plural": "targeting_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "targeting",
          "type": "targeting",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "tax",
      "plural": "taxes",
      "fields": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The name of the taxes being applied",
          "example": "VAT, GST + PST, HST"
        },
        {
          "name": "rate",
          "type": "decimal",
          "required": true,
          "attributes": [],
          "description": "The combined tax rate. A value of 17 indicates a tax rate of 17%",
          "minimum": 0,
          "example": "17"
        },
        {
          "name": "components",
          "type": "[levy_component]",
          "required": true,
          "attributes": [],
          "description": "The components to which tax is applied.",
          "minimum": 1
        },
        {
          "name": "deminimis",
          "type": "deminimis",
          "required": false,
          "attributes": [],
          "description": "Describes the tax de minimis if there is one for this destination"
        }
      ],
      "attributes": [],
      "description": "Represents a simple model of taxes that apply to a given item / destination."
    },
    {
      "name": "tier",
      "plural": "tiers",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "direction",
          "type": "tier_direction",
          "required": true,
          "attributes": [],
          "default": "outbound"
        },
        {
          "name": "experience",
          "type": "fulfillment_experience_reference",
          "required": true,
          "attributes": []
        },
        {
          "name": "integration",
          "type": "shipment_integration_type",
          "required": true,
          "attributes": [],
          "description": "Type of shipping integration used for this tier."
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "rules",
          "type": "[tier_rule]",
          "required": true,
          "attributes": [],
          "description": "Ordered set of rules for this tier"
        },
        {
          "name": "services",
          "type": "[service]",
          "required": true,
          "attributes": [],
          "description": "Services assocaited with this tier"
        },
        {
          "name": "strategy",
          "type": "tier_strategy",
          "required": true,
          "attributes": [],
          "description": "If multiple available return outcomes for a single tier, strategy picks the top one based on cost or timing."
        },
        {
          "name": "visibility",
          "type": "visibility",
          "required": true,
          "attributes": [],
          "description": "Public or Private. Private ones appear as inactive/disabled to the public"
        },
        {
          "name": "description",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Description of the tier intended for internal description of return tiers or could be used for caption/tooltips on a checkout page."
        }
      ],
      "attributes": [],
      "description": "Service shipping tier available in this tier gorup. e.g. Standard tier, Express tier, Economy tier"
    },
    {
      "name": "tier_default",
      "plural": "tier_defaults",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "default_tier",
          "type": "tier_reference",
          "required": true,
          "attributes": [],
          "description": "Default tier used to populate default quote selections"
        },
        {
          "name": "experience",
          "type": "fulfillment_experience_reference",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Grouping of shipping tiers by experience to provide logical default functionality."
    },
    {
      "name": "tier_default_form",
      "plural": "tier_default_forms",
      "fields": [
        {
          "name": "default_tier",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Default tier ID used to populate default quote selections"
        },
        {
          "name": "currency",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "experience",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Form to set the defualt tier for a given experience"
    },
    {
      "name": "tier_default_version",
      "plural": "tier_default_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "tier_default",
          "type": "tier_default",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "tier_deleted",
      "plural": "tier_deleteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "tier_form",
      "plural": "tier_forms",
      "fields": [
        {
          "name": "currency",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Currency to use for the tier, should be coming from Experience API"
        },
        {
          "name": "experience",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Experience-related data from Experience API needed by shipping tiers"
        },
        {
          "name": "integration",
          "type": "shipment_integration_type",
          "required": true,
          "attributes": [],
          "description": "Type of shipping integration used for this tier."
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "rules",
          "type": "[tier_rule_form]",
          "required": true,
          "attributes": [],
          "description": "Ordered set of rules for this tier"
        },
        {
          "name": "services",
          "type": "[string]",
          "required": true,
          "attributes": [],
          "description": "Services associated with this tier"
        },
        {
          "name": "strategy",
          "type": "tier_strategy",
          "required": true,
          "attributes": [],
          "description": "If multiple available return outcomes for a single tier, strategy picks the top one based on cost or timing."
        },
        {
          "name": "visibility",
          "type": "visibility",
          "required": true,
          "attributes": [],
          "description": "Public or Private. Private ones appear as inactive/disabled to the public"
        },
        {
          "name": "description",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Description of the tier intended for internal description of return tiers or could be used for caption/tooltips on a checkout page."
        },
        {
          "name": "direction",
          "type": "tier_direction",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Service shipping tier available in this tier gorup. e.g. Standard tier, Express tier, Economy tier"
    },
    {
      "name": "tier_reference",
      "plural": "tier_references",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "tier_rule",
      "plural": "tier_rules",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "position",
          "type": "long",
          "required": true,
          "attributes": [],
          "description": "Execution position of this rule relative to other rules in the tier. Lower position numbers indicate rules that should be executed earlier.",
          "minimum": 0
        },
        {
          "name": "query",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Search API query",
          "example": "greater_than_or_equal:20USD less_than_or_equal:30USD"
        },
        {
          "name": "outcome",
          "type": "tier_rule_outcome",
          "required": true,
          "attributes": [],
          "description": "Resulting cost function applied if query is met. e.g. service cost, flat rate"
        }
      ],
      "attributes": [],
      "description": "System to filter incoming quote for a shipment request based on a query and output corresponding outcomes."
    },
    {
      "name": "tier_rule_form",
      "plural": "tier_rule_forms",
      "fields": [
        {
          "name": "position",
          "type": "long",
          "required": false,
          "attributes": [],
          "description": "Execution position of this rule relative to other rules in the tier. Lower position numbers indicate rules that should be executed earlier. If not specified, we automatically set the position to be last.",
          "minimum": 0
        },
        {
          "name": "query",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "outcome",
          "type": "tier_rule_outcome_form",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "tier_rule_version",
      "plural": "tier_rule_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "tier_rule",
          "type": "tier_rule",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "tier_summary",
      "plural": "tier_summaries",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "experience",
          "type": "fulfillment_experience_reference",
          "required": true,
          "attributes": []
        },
        {
          "name": "integration",
          "type": "shipment_integration_type",
          "required": true,
          "attributes": [],
          "description": "Type of shipping integration used for this tier."
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "services",
          "type": "[string]",
          "required": true,
          "attributes": [],
          "description": "Services assocaited with this tier"
        },
        {
          "name": "strategy",
          "type": "tier_strategy",
          "required": true,
          "attributes": [],
          "description": "If multiple available return outcomes for a single tier, strategy picks the top one based on cost or timing."
        },
        {
          "name": "visibility",
          "type": "visibility",
          "required": true,
          "attributes": [],
          "description": "Public or Private. Private ones appear as inactive/disabled to the public"
        }
      ],
      "attributes": []
    },
    {
      "name": "tier_upserted",
      "plural": "tier_upserteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "experience_key",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "integration",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "rules",
          "type": "[object]",
          "required": true,
          "attributes": []
        },
        {
          "name": "services",
          "type": "[object]",
          "required": true,
          "attributes": []
        },
        {
          "name": "strategy",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "visibility",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "description",
          "type": "string",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "tier_version",
      "plural": "tier_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "tier",
          "type": "tier_summary",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "timezone",
      "plural": "timezones",
      "fields": [
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": [],
          "example": "America/New_York"
        },
        {
          "name": "description",
          "type": "string",
          "required": true,
          "attributes": [],
          "example": "Coordinated Universal Time"
        },
        {
          "name": "offset",
          "type": "integer",
          "required": true,
          "attributes": [],
          "description": "Minutes offset from GMT",
          "example": "-180, 60"
        }
      ],
      "attributes": [],
      "description": "Time zone data is provided by the public IANA time zone database. See http://www.iana.org/time-zones"
    },
    {
      "name": "token_authentication_form",
      "plural": "token_authentication_forms",
      "fields": [
        {
          "name": "token",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The actual token with which to authenticate"
        }
      ],
      "attributes": [],
      "description": "Used to authenticate a given token."
    },
    {
      "name": "token_partner_reference",
      "plural": "token_partner_references",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "token_validation",
      "plural": "token_validations",
      "fields": [
        {
          "name": "status",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Textual description of whether or not token is valid"
        }
      ],
      "attributes": [],
      "description": "Model used to report whether or not a given token is valid"
    },
    {
      "name": "token_validation_form",
      "plural": "token_validation_forms",
      "fields": [
        {
          "name": "token",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The actual token that you are validating"
        }
      ],
      "attributes": [],
      "description": "Defines the payload of a request to validate a token, with primary goal of preventing the token from being included in an HTTP GET."
    },
    {
      "name": "tracking",
      "plural": "trackings",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "labels",
          "type": "[tracking_label]",
          "required": true,
          "attributes": []
        },
        {
          "name": "status",
          "type": "tracking_status",
          "required": true,
          "attributes": []
        },
        {
          "name": "attributes",
          "type": "map[string]",
          "required": true,
          "attributes": []
        },
        {
          "name": "window",
          "type": "datetime_range",
          "required": false,
          "attributes": [],
          "description": "Estimated date range until delivery"
        },
        {
          "name": "order_number",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Client organization order number, if available"
        }
      ],
      "attributes": [],
      "description": "Top level tracking information which contains labels. In cases where shipments are re-labeled, you will see multiple labels for each tracking allowing simple access to see where a shipment is - with which carrier and with the local tracking number"
    },
    {
      "name": "tracking_event",
      "plural": "tracking_events",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "address",
          "type": "address",
          "required": true,
          "attributes": []
        },
        {
          "name": "status",
          "type": "tracking_status",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "description",
          "type": "string",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "tracking_event_form",
      "plural": "tracking_event_forms",
      "fields": [
        {
          "name": "tracking_label_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "status",
          "type": "tracking_status",
          "required": true,
          "attributes": []
        },
        {
          "name": "description",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "address",
          "type": "string",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "tracking_event_summary",
      "plural": "tracking_event_summaries",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "status",
          "type": "tracking_status",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "tracking_event_version",
      "plural": "tracking_event_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "tracking_event",
          "type": "tracking_event_summary",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "tracking_form",
      "plural": "tracking_forms",
      "fields": [
        {
          "name": "status",
          "type": "tracking_status",
          "required": false,
          "attributes": []
        },
        {
          "name": "order_number",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Client organization order number, if available"
        },
        {
          "name": "attributes",
          "type": "map[string]",
          "required": false,
          "attributes": [],
          "description": "Additional reference attributes"
        },
        {
          "name": "window",
          "type": "datetime_range",
          "required": false,
          "attributes": [],
          "description": "Estimated date range until delivery"
        }
      ],
      "attributes": [],
      "description": "Top level tracking information which contains labels. In cases where shipments are re-labeled, you will see multiple labels for each tracking allowing simple access to see where a shipment is - with which carrier and with the local tracking number"
    },
    {
      "name": "tracking_label",
      "plural": "tracking_labels",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "carrier",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "carrier_tracking_number",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "events",
          "type": "[tracking_event]",
          "required": true,
          "attributes": []
        },
        {
          "name": "status",
          "type": "tracking_status",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "delivery_estimate",
          "type": "date-time-iso8601",
          "required": false,
          "attributes": []
        },
        {
          "name": "description",
          "type": "string",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Represents a specific label being tracked as part of the tracking bucket"
    },
    {
      "name": "tracking_label_event_upserted",
      "plural": "tracking_label_event_upserteds",
      "fields": [
        {
          "name": "event_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "organization",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Refers to your organization's account identifier"
        },
        {
          "name": "address",
          "type": "object",
          "required": true,
          "attributes": [],
          "description": "Location of the label tracking event"
        },
        {
          "name": "carrier",
          "type": "string",
          "required": true,
          "attributes": [],
          "example": "ups, dhl"
        },
        {
          "name": "carrier_timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": [],
          "description": "Actual carrier-reported timestamp for event"
        },
        {
          "name": "carrier_tracking_number",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "flow_tracking_number",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "status",
          "type": "string",
          "required": true,
          "attributes": [],
          "example": "pending, info_received"
        },
        {
          "name": "delivery_estimate",
          "type": "date-time-iso8601",
          "required": false,
          "attributes": [],
          "description": "Carrier-provided delivered estimate when available"
        },
        {
          "name": "description",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "order_number",
          "type": "string",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "tracking_label_form",
      "plural": "tracking_label_forms",
      "fields": [
        {
          "name": "tracking_id",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "status",
          "type": "tracking_status",
          "required": true,
          "attributes": [],
          "default": "pending"
        },
        {
          "name": "carrier",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "carrier_tracking_number",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "delivery_estimate",
          "type": "date-time-iso8601",
          "required": false,
          "attributes": []
        },
        {
          "name": "description",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": false,
          "attributes": [],
          "description": "Defaults to now() if not provided"
        },
        {
          "name": "parent_id",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Parent tracking label for this subordinate tracking label. A child label might represent the subcontracted line haul before reaching the main carrier. Goal is to be able to identify the main carrier responsible for fulfillment of a package."
        }
      ],
      "attributes": [],
      "description": "Represents a specific label being tracked as part of the tracking bucket"
    },
    {
      "name": "tracking_label_summary",
      "plural": "tracking_label_summaries",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "tracking",
          "type": "tracking_summary",
          "required": true,
          "attributes": []
        },
        {
          "name": "status",
          "type": "tracking_status",
          "required": true,
          "attributes": []
        },
        {
          "name": "carrier",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "tracking_number",
          "type": "string",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "tracking_label_version",
      "plural": "tracking_label_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "tracking_label",
          "type": "tracking_label_summary",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "tracking_summary",
      "plural": "tracking_summaries",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "status",
          "type": "tracking_status",
          "required": true,
          "attributes": []
        },
        {
          "name": "order_number",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Client organization order number, if available"
        }
      ],
      "attributes": []
    },
    {
      "name": "tracking_version",
      "plural": "tracking_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "tracking",
          "type": "tracking_summary",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "unharmonized_item_export_type",
      "plural": "unharmonized_item_export_types",
      "fields": [
        {
          "name": "origin",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "The specific origin to export"
        },
        {
          "name": "destination",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "The specific destination to export"
        },
        {
          "name": "numbers",
          "type": "[string]",
          "required": false,
          "attributes": [],
          "description": "The specific list of item numbers to export"
        },
        {
          "name": "has_codes",
          "type": "boolean",
          "required": false,
          "attributes": [],
          "description": "Indicates items with assigned or unassigned codes should be exported"
        },
        {
          "name": "has_origins",
          "type": "boolean",
          "required": false,
          "attributes": [],
          "description": "Indicates items with assigned or unassigned origins should be exported"
        },
        {
          "name": "sort",
          "type": "string",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": [],
      "description": "Combines HS10 export and catalog item export for items that require harmonization."
    },
    {
      "name": "upload",
      "plural": "uploads",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "name",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The filename uploaded"
        },
        {
          "name": "url",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "expiration",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": [],
          "description": "The datetime on which the URL expires"
        }
      ],
      "attributes": [],
      "description": "Provides the ability to upload a file to a URL (an expiring s3 url, usually valid for 1 week)"
    },
    {
      "name": "user",
      "plural": "users",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "email",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "If known, the user's primary email address. While in most common cases, we expect users to have email addresses, there are edge cases where it is useful to allow a user to NOT have an email address. For example, users interacting solely from mobile devices, guest user accounts, initial onboarding where email is not known, etc. We think by starting off with an optional primary email address we can support these use cases with very little implementation cost."
        },
        {
          "name": "name",
          "type": "name",
          "required": true,
          "attributes": [],
          "description": "The user's name."
        },
        {
          "name": "status",
          "type": "user_status",
          "required": true,
          "attributes": [],
          "description": "Only active users are authorized to login and interact with the Flow platform.",
          "default": "active"
        }
      ],
      "attributes": [],
      "description": "Represents a single user in the system"
    },
    {
      "name": "user_form",
      "plural": "user_forms",
      "fields": [
        {
          "name": "email",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "password",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "name",
          "type": "name_form",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "user_put_form",
      "plural": "user_put_forms",
      "fields": [
        {
          "name": "email",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "name",
          "type": "name_form",
          "required": false,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "user_reference",
      "plural": "user_references",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "user_version",
      "plural": "user_versions",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "timestamp",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "type",
          "type": "change_type",
          "required": true,
          "attributes": []
        },
        {
          "name": "user",
          "type": "user",
          "required": true,
          "attributes": []
        }
      ],
      "attributes": []
    },
    {
      "name": "webhook",
      "plural": "webhooks",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "url",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "events",
          "type": "[string]",
          "required": true,
          "attributes": [],
          "description": "List of events that will trigger data to be sent to the webhook url.",
          "minimum": 1
        }
      ],
      "attributes": []
    },
    {
      "name": "webhook_delivery",
      "plural": "webhook_deliveries",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "webhook",
          "type": "webhook_reference",
          "required": true,
          "attributes": []
        },
        {
          "name": "status",
          "type": "webhook_status",
          "required": true,
          "attributes": [],
          "description": "Represents status of this delivery. This is a finite state machine that starts in pending and moves to either failure or success"
        },
        {
          "name": "created_at",
          "type": "date-time-iso8601",
          "required": true,
          "attributes": []
        },
        {
          "name": "latest",
          "type": "webhook_request",
          "required": false,
          "attributes": []
        },
        {
          "name": "next_attempt_at",
          "type": "date-time-iso8601",
          "required": false,
          "attributes": [],
          "description": "If the last delivery attempt was not successful, we schedule a retry automatically subject to the webhook settings. If there is a retry scheduled in the future, this field contains the timestamp on which the retry will be initiated."
        }
      ],
      "attributes": [],
      "description": "A webhook delivery represents an event that matched a webhook's event types. Each delivery will be attempted one or more times subject to the settings of your webhook."
    },
    {
      "name": "webhook_form",
      "plural": "webhook_forms",
      "fields": [
        {
          "name": "url",
          "type": "string",
          "required": true,
          "attributes": []
        },
        {
          "name": "events",
          "type": "[string]",
          "required": true,
          "attributes": [],
          "description": "List of events that will trigger data to be sent to the webhook url. You can specify either '*' to select all events, or specific event types as listed in the type 'event_type' (with optional trailing wildcards).",
          "minimum": 1,
          "example": "'*', 'catalog_item_upserted', 'catalog*'"
        }
      ],
      "attributes": []
    },
    {
      "name": "webhook_reference",
      "plural": "webhook_references",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "webhook_request",
      "plural": "webhook_requests",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "headers",
          "type": "[header]",
          "required": true,
          "attributes": [],
          "description": "The headers sent to the webhook URL"
        },
        {
          "name": "method",
          "type": "method",
          "required": true,
          "attributes": [],
          "description": "The HTTP method, should always be POST"
        },
        {
          "name": "body",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The event data sent to the webhook URL"
        },
        {
          "name": "status",
          "type": "webhook_status",
          "required": true,
          "attributes": [],
          "description": "Represents status of request. This is a finite state machine that starts in pending and moves to either failure or success"
        },
        {
          "name": "started_at",
          "type": "date-time-iso8601",
          "required": false,
          "attributes": [],
          "description": "The timestamp at which we started processing this request"
        },
        {
          "name": "completed_at",
          "type": "date-time-iso8601",
          "required": false,
          "attributes": [],
          "description": "The timestamp at which we completed processing of this request"
        },
        {
          "name": "duration_ms",
          "type": "long",
          "required": false,
          "attributes": [],
          "description": "Duration of milleseconds of the request (completed_at - started_at). Will always be available if completed at is set"
        },
        {
          "name": "response",
          "type": "webhook_response",
          "required": false,
          "attributes": [],
          "description": "The response from the webhook URL"
        },
        {
          "name": "error",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "Any errors that may have occured while attempting to send the request. E.g, dns resolution or gateway timeouts"
        }
      ],
      "attributes": []
    },
    {
      "name": "webhook_request_reference",
      "plural": "webhook_request_references",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        }
      ],
      "attributes": []
    },
    {
      "name": "webhook_response",
      "plural": "webhook_responses",
      "fields": [
        {
          "name": "id",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "Globally unique identifier"
        },
        {
          "name": "request",
          "type": "webhook_request_reference",
          "required": true,
          "attributes": [],
          "description": "The id of the corresponding request"
        },
        {
          "name": "headers",
          "type": "[header]",
          "required": true,
          "attributes": [],
          "description": "The headers returned from the webhook URL"
        },
        {
          "name": "body",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The first 1k of the content returned from the webhook URL. This is ignored by Flow but retained for your information."
        },
        {
          "name": "body_url",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "If the returned body was > 1k, the full contents is stored at this URL."
        },
        {
          "name": "status",
          "type": "integer",
          "required": true,
          "attributes": [],
          "description": "The HTTP Status Code from the webhook URL"
        }
      ],
      "attributes": []
    },
    {
      "name": "webhook_settings",
      "plural": "webhook_settingses",
      "fields": [
        {
          "name": "secret",
          "type": "string",
          "required": false,
          "attributes": [],
          "description": "The string used to sign webhook requests"
        },
        {
          "name": "retry_max_attempts",
          "type": "long",
          "required": true,
          "attributes": [],
          "description": "The maxiumum number of times to attempt a delivery until a successful response",
          "default": "6",
          "minimum": 1
        },
        {
          "name": "retry_sleep_ms",
          "type": "long",
          "required": true,
          "attributes": [],
          "description": "The amount of time to wait in milliseconds between failed delivery attempts",
          "default": "60000",
          "minimum": 0
        },
        {
          "name": "sleep_ms",
          "type": "long",
          "required": true,
          "attributes": [],
          "description": "The amount of time to wait between successful delivery attempts. Note this is a global setting, and thus we recommend a low value such as 100ms",
          "default": "0",
          "minimum": 0
        }
      ],
      "attributes": [],
      "description": "Sets organization level settings to determine things like how many retries on delivery, how long we wait, etc. By default, we will attempt delivery up to 6 times, using exponential backoff with a see of 1 minute (60k ms) - which means that we will retry over the course of approximately an hour before giving up."
    },
    {
      "name": "zone",
      "plural": "zones",
      "fields": [
        {
          "name": "province",
          "type": "string",
          "required": false,
          "attributes": []
        },
        {
          "name": "country",
          "type": "string",
          "required": true,
          "attributes": [],
          "description": "The ISO 3166-3 country code. Case insensitive. See https://api.flow.io/reference/countries",
          "example": "CAN"
        }
      ],
      "attributes": []
    }
  ],
  "resources": [
    {
      "type": "allocation",
      "plural": "allocations",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/orders/allocations/:number",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "number",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "allocation",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "get",
                  "sort_parameter_default",
                  "versions"
                ]
              }
            }
          ],
          "description": "Order-level price details allocated using a strategy among individual order item units."
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "localization"
          }
        }
      ],
      "path": "/:organization/orders/allocations/:number"
    },
    {
      "type": "attribute",
      "plural": "attributes",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/attributes",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "key",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "key"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[attribute]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "key"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "sort_parameter_default"
                ]
              }
            }
          ],
          "description": "Search attributes. Always paginated."
        },
        {
          "method": "POST",
          "path": "/:organization/attributes",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "attribute",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Add attribute",
          "body": {
            "type": "attribute_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/attributes/:key",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "key",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "attribute",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Returns information about a specific attribute."
        },
        {
          "method": "PUT",
          "path": "/:organization/attributes/:key",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "key",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "attribute",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "attribute",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Create or update an attribute with the specified key.",
          "body": {
            "type": "attribute_form",
            "attributes": []
          }
        },
        {
          "method": "DELETE",
          "path": "/:organization/attributes/:key",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "key",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Delete an attribute with the specified key."
        },
        {
          "method": "GET",
          "path": "/:organization/attributes/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "key",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[attribute_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "key"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ],
          "description": "Provides visibility into recent changes of each object, including deletion"
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "localization"
          }
        }
      ],
      "path": "/:organization/attributes",
      "description": "An attribute can be configured to be used in different ways throughout Flow. A common example is to identify a meaningful attribute (e.g. brand) that can then be displayed throughout the Flow console."
    },
    {
      "type": "catalog",
      "plural": "catalogs",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/catalog",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "catalog",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Returns information about a specific catalog."
        },
        {
          "method": "GET",
          "path": "/:organization/catalog/restrictions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "number",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "name"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[item]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "name"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "get",
                  "versions"
                ]
              }
            }
          ],
          "description": "Search global restrictions. Always paginated."
        },
        {
          "method": "GET",
          "path": "/:organization/catalog/restrictions/:number",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "number",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "item",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Returns a spcifical globally restricted item."
        },
        {
          "method": "PUT",
          "path": "/:organization/catalog/restrictions/:number",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "number",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "item",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "item",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Upsert a global restriction"
        },
        {
          "method": "DELETE",
          "path": "/:organization/catalog/restrictions/:number",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "number",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Delete the global restriction for this catalog item number"
        },
        {
          "method": "GET",
          "path": "/:organization/catalog/statistics",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "catalog_statistics",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Get statistics for this organization's catalog."
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "localization"
          }
        }
      ],
      "path": "/:organization"
    },
    {
      "type": "credit_payment",
      "plural": "credit_payments",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/credit/payments",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "key",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "order_number",
              "type": "string",
              "location": "Query",
              "required": false
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            },
            {
              "name": "expand",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "minimum": 0,
              "maximum": 1,
              "example": "order"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[credit_payment]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "key"
                  },
                  {
                    "value": "order_number"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "POST",
          "path": "/:organization/credit/payments",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "expand",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "minimum": 0,
              "maximum": 1,
              "example": "order"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "credit_payment",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "credit_payment_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "credit_payment_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/credit/payments/:key",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "key",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "expand",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "minimum": 0,
              "maximum": 1,
              "example": "order"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "credit_payment",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "PUT",
          "path": "/:organization/credit/payments/:key",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "key",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "expand",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "minimum": 0,
              "maximum": 1,
              "example": "order"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "credit_payment",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "credit_payment",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "credit_payment_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "credit_payment_put_form",
            "attributes": []
          }
        },
        {
          "method": "DELETE",
          "path": "/:organization/credit/payments/:key",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "key",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/:organization/credit/payments/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "key",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[credit_payment_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "key"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "localization"
          }
        }
      ],
      "path": "/:organization/credit/payments",
      "description": "A Credit Payment records a 'non cash' payment against an order (e.g. a store credit, gift card, etc.), recording the amount of that credit and additional details to reconcile payments. The primary purpose of the credit payment is to record that a payment has been made against an order so the remaining balance can be correctly computed."
    },
    {
      "type": "experience",
      "plural": "experiences",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/experiences",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "key",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "name",
              "type": "string",
              "location": "Query",
              "required": false
            },
            {
              "name": "region",
              "type": "string",
              "location": "Query",
              "required": false
            },
            {
              "name": "currency",
              "type": "string",
              "location": "Query",
              "required": false
            },
            {
              "name": "subcatalog",
              "type": "string",
              "location": "Query",
              "required": false
            },
            {
              "name": "ip",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "If specified, we will geolocate the user by this IP address, and if successful, select the experience matching the country of the IP address."
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "name"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[experience]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "key"
                  },
                  {
                    "value": "name"
                  },
                  {
                    "value": "position"
                  }
                ]
              }
            }
          ],
          "description": "Search experiences. Always paginated."
        },
        {
          "method": "POST",
          "path": "/:organization/experiences",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "experience",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Add experience",
          "body": {
            "type": "experience_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/experiences/:experience_key/margins",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "experience_key",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "name"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[item_margin]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "name"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "POST",
          "path": "/:organization/experiences/:experience_key/margins",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "experience_key",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "item_margin",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "item_margin_post_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/experiences/:experience_key/margins/:key",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "experience_key",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "key",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "item_margin",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": []
        },
        {
          "method": "PUT",
          "path": "/:organization/experiences/:experience_key/margins/:key",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "experience_key",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "key",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "item_margin",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "item_margin_put_form",
            "attributes": []
          }
        },
        {
          "method": "DELETE",
          "path": "/:organization/experiences/:experience_key/margins/:key",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "experience_key",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "key",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/:organization/experiences/:experience_key/margins/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "experience_key",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[item_margin_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "GET",
          "path": "/:organization/experiences/:experience_key/payment-method-rules",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "experience_key",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "payment_method_type",
              "type": "[payment_method_type]",
              "location": "Query",
              "required": false,
              "minimum": 1,
              "maximum": 5
            },
            {
              "name": "tags",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "display_position"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[payment_method_rule]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "display_position"
                  },
                  {
                    "value": "payment_method"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "get",
                  "versions",
                  "sort_parameter_default"
                ]
              }
            }
          ]
        },
        {
          "method": "PUT",
          "path": "/:organization/experiences/:experience_key/payment-method-rules",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "experience_key",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[payment_method_rule]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Change the ordering or payment tags for an experience. Every post must include one entry for each payment method offered by Flow.",
          "body": {
            "type": "[experience_payment_method_rule_form]",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/experiences/:experience_key/payment-method-types",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "experience_key",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[payment_method_type]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "get",
                  "versions"
                ]
              }
            }
          ]
        },
        {
          "method": "GET",
          "path": "/:organization/experiences/:key",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "key",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "experience",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Returns information about a specific experience."
        },
        {
          "method": "PUT",
          "path": "/:organization/experiences/:key",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "key",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "experience",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "experience",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Update experience with the specified key, creating if it does not exist.",
          "body": {
            "type": "experience_form",
            "attributes": []
          }
        },
        {
          "method": "DELETE",
          "path": "/:organization/experiences/:key",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "key",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Delete the experience with this key"
        },
        {
          "method": "GET",
          "path": "/:organization/experiences/:key/items/:number/price",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "key",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "number",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "price_check",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Returns detailed information on the pricing of this item within this experience"
        },
        {
          "method": "GET",
          "path": "/:organization/experiences/:key/pricing",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "key",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "pricing",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Get the pricing settings for this experience"
        },
        {
          "method": "PUT",
          "path": "/:organization/experiences/:key/pricing",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "key",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "pricing",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Update the pricing settings for this experience",
          "body": {
            "type": "pricing",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/experiences/:key/promotions/available",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "key",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[promotion]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "get",
                  "sort_parameter_default",
                  "versions"
                ]
              }
            }
          ],
          "description": "Get available promotions for the experience"
        },
        {
          "method": "GET",
          "path": "/:organization/experiences/conversions/:base/:amount",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "base",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "The currency of the provided amount, which will be converted to the experience currency, unless a value is specified for the `currency` parameter."
            },
            {
              "name": "amount",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "The amount in the base currency to be converted."
            },
            {
              "name": "experience",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "If specified, we will render the items in the context of the experience with this key."
            },
            {
              "name": "country",
              "type": "string",
              "location": "Query",
              "required": false
            },
            {
              "name": "ip",
              "type": "string",
              "location": "Query",
              "required": false
            },
            {
              "name": "currency",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "If specified, the provided base amount will be converted to and formatted in this currency."
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "price_with_base",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Formats the requested amount using the formatting settings for the experience."
        },
        {
          "method": "GET",
          "path": "/:organization/experiences/items",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "number",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "status",
              "type": "[subcatalog_item_status]",
              "location": "Query",
              "required": false,
              "description": "Filter to items based on their status within this subcatalog",
              "maximum": 3,
              "example": "included"
            },
            {
              "name": "experience",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "If specified, we will render the items in the context of the experience with this key."
            },
            {
              "name": "country",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "If specified, we will select the experience matching this country. ISO 3166 3 currency code as defined in https://api.flow.io/reference/countries",
              "example": "CAN"
            },
            {
              "name": "ip",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "If specified, we will geolocate the user by this IP address, and if successful, select the experience matching the country of the IP address."
            },
            {
              "name": "currency",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Iso 4217 3 currency code as defined in https://api.flow.io/reference/currencies If specified, translate the pricing to this currency. Translation occurs using the current spot rate for this currency from the base currency in the experience."
            },
            {
              "name": "language",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "ISO 639 2 language code as defined in https://api.flow.io/reference/languages If specified, translate content to this language (where available)",
              "example": "en"
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[item]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "number"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            },
            {
              "name": "non-crud",
              "value": {}
            }
          ],
          "description": "Returns localized information about 1 or more items. The items will be localized based on the experience selected by the query parameters in the order of experience, then country, then ip address."
        },
        {
          "method": "GET",
          "path": "/:organization/experiences/items/:number",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "number",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "experience",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "If specified, we will render the items in the context of the experience with this key."
            },
            {
              "name": "country",
              "type": "string",
              "location": "Query",
              "required": false
            },
            {
              "name": "ip",
              "type": "string",
              "location": "Query",
              "required": false
            },
            {
              "name": "currency",
              "type": "string",
              "location": "Query",
              "required": false
            },
            {
              "name": "language",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "ISO 639 2 language code as defined in https://api.flow.io/reference/languages",
              "example": "en"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "item",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Returns information about this item localized based on the query parameters"
        },
        {
          "method": "GET",
          "path": "/:organization/experiences/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "key",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[experience_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "key"
                  },
                  {
                    "value": "name"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ],
          "description": "Provides visibility into recent changes of each object, including deletion"
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "localization"
          }
        }
      ],
      "path": "/:organization/experiences",
      "description": "Experiences define a local experience for a given geographic region"
    },
    {
      "type": "experience_defaults",
      "plural": "experience_defaults",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/experience/defaults",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "region_id",
              "type": "string",
              "location": "Query",
              "required": false
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "experience_defaults",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Returns recommended default settings when creating a new experience"
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "localization"
          }
        }
      ],
      "path": "/:organization/experience/defaults",
      "description": "Defines a set of defaults for a given organization and region"
    },
    {
      "type": "item",
      "plural": "items",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/catalog/items",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "number",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Find items with this number. Case insensitive. Exact match",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "name"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[item]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "name"
                  },
                  {
                    "value": "number"
                  }
                ]
              }
            }
          ],
          "description": "Search items. Always paginated."
        },
        {
          "method": "POST",
          "path": "/:organization/catalog/items",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "item",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Add catalog item(s)",
          "body": {
            "type": "item_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/catalog/items/:number",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "number",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "item",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Returns information about a specific item."
        },
        {
          "method": "PUT",
          "path": "/:organization/catalog/items/:number",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "number",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "item",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "item",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Update item with the specified number, creating if it does not exist.",
          "body": {
            "type": "item_form",
            "attributes": []
          }
        },
        {
          "method": "DELETE",
          "path": "/:organization/catalog/items/:number",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "number",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Delete the item with this number"
        },
        {
          "method": "GET",
          "path": "/:organization/catalog/items/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "number",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter to items with any one of these numbers.",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[item_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "number"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ],
          "description": "Provides visibility into recent changes of each object, including deletion"
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "localization"
          }
        }
      ],
      "path": "/:organization/catalog/items",
      "description": "The Flow item defines a specific item that can be purchased by a consumer. For many clients, this will map to a Sku."
    },
    {
      "type": "order",
      "plural": "orders",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/orders",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "number",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "identifier",
              "type": "string",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            },
            {
              "name": "expand",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "minimum": 0,
              "maximum": 1,
              "example": "experience"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[order]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "number"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            }
          ],
          "description": "Search orders. Always paginated."
        },
        {
          "method": "POST",
          "path": "/:organization/orders",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "experience",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "If specified, we will render the items in the context of the experience with this key."
            },
            {
              "name": "country",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "If specified, we will select the experience matching this country. ISO 3166 3 currency code as defined in https://api.flow.io/reference/countries",
              "example": "CAN"
            },
            {
              "name": "ip",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "If specified, we will geolocate the user by this IP address, and if successful, select the experience matching the country of the IP address."
            },
            {
              "name": "currency",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Iso 4217 3 currency code as defined in https://api.flow.io/reference/currencies If specified, translate the pricing to this currency. Translation occurs using the current spot rate for this currency from the base currency in the experience."
            },
            {
              "name": "language",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "ISO 639 2 language code as defined in https://api.flow.io/reference/languages If specified, translate content to this language (where available)",
              "example": "en"
            },
            {
              "name": "expand",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "minimum": 0,
              "maximum": 1,
              "example": "experience"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "order",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "order_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Create an order, using the localized information from the experience selected by the query parameters. Note the order must be submitted before its expiration",
          "body": {
            "type": "order_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/orders/:number",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "number",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "expand",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "minimum": 0,
              "maximum": 1,
              "example": "experience"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "order",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Returns information about a specific order."
        },
        {
          "method": "PUT",
          "path": "/:organization/orders/:number",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "number",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "experience",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "If specified, we will render the items in the context of the experience with this key."
            },
            {
              "name": "country",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "If specified, we will select the experience matching this country. ISO 3166 3 currency code as defined in https://api.flow.io/reference/countries",
              "example": "CAN"
            },
            {
              "name": "ip",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "If specified, we will geolocate the user by this IP address, and if successful, select the experience matching the country of the IP address."
            },
            {
              "name": "currency",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Iso 4217 3 currency code as defined in https://api.flow.io/reference/currencies If specified, translate the pricing to this currency. Translation occurs using the current spot rate for this currency from the base currency in the experience."
            },
            {
              "name": "language",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "ISO 639 2 language code as defined in https://api.flow.io/reference/languages If specified, translate content to this language (where available)",
              "example": "en"
            },
            {
              "name": "expand",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "minimum": 0,
              "maximum": 1,
              "example": "experience"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "order",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "order",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "order_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Upserts an order. using the localized information from the experience selected by the query parameters. Note the order must be submitted before its expiration",
          "body": {
            "type": "order_put_form",
            "attributes": []
          }
        },
        {
          "method": "DELETE",
          "path": "/:organization/orders/:number",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "number",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Delete an order. Note that production orders that have already been submitted cannot be deleted (you will see a 422 response in these cases)."
        },
        {
          "method": "PUT",
          "path": "/:organization/orders/:number/submissions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "number",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "expand",
              "type": "[string]",
              "location": "Form",
              "required": false,
              "minimum": 0,
              "maximum": 1,
              "example": "experience"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "order",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "order",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Submits an order. You will get a validation error if the order has already expired (and a new quote could not be automatically recreated for a lower or same price). This method is idempotent - submitting an order a second time has no effect."
        },
        {
          "method": "GET",
          "path": "/:organization/orders/identifier/:identifier_number",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "identifier_number",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "expand",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "minimum": 0,
              "maximum": 1,
              "example": "experience"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "order",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Returns information about a specific order using an identifier number"
        },
        {
          "method": "GET",
          "path": "/:organization/orders/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "number",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[order_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "number"
                  },
                  {
                    "value": "name"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ],
          "description": "Provides visibility into recent changes of each order, including deletion"
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "localization"
          }
        }
      ],
      "path": "/:organization/orders",
      "description": "An order represents all of the information about a particular line item, including pricing, currency rates, delivery options, etc. All information in an order is guaranteed by Flow - if an order is submitted before its expiration. The intended use case is to create an order as a consumer enters checkout, then to submit that order as part of the user submitting their order. Note that Flow will automatically mark an order submitted if we see a payment authorization for an order."
    },
    {
      "type": "order_estimate",
      "plural": "order_estimates",
      "operations": [
        {
          "method": "POST",
          "path": "/:organization/order-estimates",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "experience",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "If specified, we will render the items in the context of the experience with this key."
            },
            {
              "name": "country",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "If specified, we will select the experience matching this country. ISO 3166 3 currency code as defined in https://api.flow.io/reference/countries",
              "example": "CAN"
            },
            {
              "name": "ip",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "If specified, we will geolocate the user by this IP address, and if successful, select the experience matching the country of the IP address."
            },
            {
              "name": "currency",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Iso 4217 3 currency code as defined in https://api.flow.io/reference/currencies If specified, translate the pricing to this currency. Translation occurs using the current spot rate for this currency from the base currency in the experience."
            },
            {
              "name": "language",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "ISO 639 2 language code as defined in https://api.flow.io/reference/languages If specified, translate content to this language (where available)",
              "example": "en"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "order_estimate",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "order_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Create an order estimate, using the localized information from the experience selected by the query parameters. This is similar to the POST orders endpoint, except this just returns an estimate and cannot be submitted.",
          "body": {
            "type": "order_estimate_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/order-estimates/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "experience",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "PUT",
          "path": "/:organization/order-estimates/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            },
            {
              "name": "experience",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "If specified, we will render the items in the context of the experience with this key."
            },
            {
              "name": "country",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "If specified, we will select the experience matching this country. ISO 3166 3 currency code as defined in https://api.flow.io/reference/countries",
              "example": "CAN"
            },
            {
              "name": "ip",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "If specified, we will geolocate the user by this IP address, and if successful, select the experience matching the country of the IP address."
            },
            {
              "name": "currency",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Iso 4217 3 currency code as defined in https://api.flow.io/reference/currencies If specified, translate the pricing to this currency. Translation occurs using the current spot rate for this currency from the base currency in the experience."
            },
            {
              "name": "language",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "ISO 639 2 language code as defined in https://api.flow.io/reference/languages If specified, translate content to this language (where available)",
              "example": "en"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "order_estimate",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "order_estimate",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "order_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "order_estimate_form",
            "attributes": []
          }
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "localization"
          }
        }
      ],
      "path": "/:organization/order-estimates",
      "description": "Lightweight estimate for a group of items without any customer-related information. This will contain available estimates on shipping, taxes, and duties."
    },
    {
      "type": "order_identifier",
      "plural": "order_identifiers",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/order-identifiers",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "number",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "order_number",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[order_identifier]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "number"
                  },
                  {
                    "value": "order_number"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "POST",
          "path": "/:organization/order-identifiers",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "order_identifier",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "order_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "order_identifier_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/order-identifiers/:number",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "number",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "order_identifier",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "PUT",
          "path": "/:organization/order-identifiers/:number",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "number",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "order_identifier",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "order_identifier",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "order_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "order_identifier_put_form",
            "attributes": []
          }
        },
        {
          "method": "DELETE",
          "path": "/:organization/order-identifiers/:number",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "number",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/:organization/order-identifiers/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "number",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "order_number",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[order_identifier_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "number"
                  },
                  {
                    "value": "order_number"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "localization"
          }
        }
      ],
      "path": "/:organization/order-identifiers",
      "description": "Represents alternate numbers with which to identify an order."
    },
    {
      "type": "organization",
      "plural": "organizations",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/countries",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "ip",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "If specified, we lookup the country associated with this IP address, and if found and there is an experience that is targeted to this country, we guarantee that this country is in the returned list of countries"
            },
            {
              "name": "country",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "If specified, we will guarantee that this country is included in the response. We recommend including the current country when querying for the list of countries to disable, thereby ensuring the current user's selection will display (even if they are localized using the world experience). Value is a ISO 3166 3 currency code as defined in https://api.flow.io/reference/countries",
              "example": "CAN"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[country]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "get",
                  "sort_parameter_default",
                  "versions"
                ]
              }
            }
          ],
          "description": "The countries resources provides a unique list of all of the countries for which an experience exists. We generate this list of countries by iterating through all of the experience regions, and collecting all of the countries."
        },
        {
          "method": "GET",
          "path": "/:organization/countries/destinations",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[country]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "get",
                  "sort_parameter_default",
                  "versions"
                ]
              }
            }
          ],
          "description": "List of all destination countries available for this organization, including countries within a world experience."
        },
        {
          "method": "GET",
          "path": "/organizations",
          "parameters": [
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "name",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Find organizations with this name. Case insensitive. Exact match."
            },
            {
              "name": "environment",
              "type": "environment",
              "location": "Query",
              "required": false,
              "description": "Find organizations with this environment"
            },
            {
              "name": "parent",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Find organizations that belong to this specified parent organization id. Case insensitive. Exact match."
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "name"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[organization]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "name"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            }
          ],
          "description": "Search organizations. Always paginated."
        },
        {
          "method": "POST",
          "path": "/organizations",
          "parameters": [],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "organization",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Create a new organization.",
          "body": {
            "type": "organization_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/organizations/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "organization",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Returns information about a specific organization."
        },
        {
          "method": "PUT",
          "path": "/organizations/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "organization",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "organization",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Update or create an organization with the specified id.",
          "body": {
            "type": "organization_put_form",
            "attributes": []
          }
        },
        {
          "method": "DELETE",
          "path": "/organizations/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Delete the organization with this id"
        },
        {
          "method": "GET",
          "path": "/organizations/:organization_id/settings/currencies",
          "parameters": [
            {
              "name": "organization_id",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[currency]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "get",
                  "versions"
                ]
              }
            }
          ],
          "description": "Returns currencies for a specific organization."
        },
        {
          "method": "GET",
          "path": "/organizations/versions",
          "parameters": [
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "organization",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter to organizations with any one of these ids.",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[organization_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "organization"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ],
          "description": "Provides visibility into recent changes of each object, including deletion"
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "localization"
          }
        }
      ],
      "path": "/organizations"
    },
    {
      "type": "query",
      "plural": "queries",
      "operations": [
        {
          "method": "POST",
          "path": "/:organization/query/validations",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "query_validation",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "[string]",
            "attributes": []
          }
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "localization"
          }
        }
      ],
      "path": "/:organization/query",
      "description": "Represents a typed query to indicate which items to include or exclude in a subcatalog"
    },
    {
      "type": "subcatalog",
      "plural": "subcatalogs",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/catalog/subcatalogs",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[subcatalog]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            }
          ],
          "description": "Search subcatalogs. Always paginated."
        },
        {
          "method": "POST",
          "path": "/:organization/catalog/subcatalogs",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "subcatalog",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Add subcatalog",
          "body": {
            "type": "subcatalog_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/catalog/subcatalogs/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "subcatalog",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Returns information about a specific subcatalog."
        },
        {
          "method": "PUT",
          "path": "/:organization/catalog/subcatalogs/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "subcatalog",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "subcatalog",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Update subcatalog with the specified id, creating if it does not exist.",
          "body": {
            "type": "subcatalog_form",
            "attributes": []
          }
        },
        {
          "method": "DELETE",
          "path": "/:organization/catalog/subcatalogs/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Delete the subcatalog with this id"
        },
        {
          "method": "GET",
          "path": "/:organization/catalog/subcatalogs/:id/settings",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "subcatalog_settings",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Returns information about a specific subcatalog's settings."
        },
        {
          "method": "PUT",
          "path": "/:organization/catalog/subcatalogs/:id/settings",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "subcatalog_settings",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Update subcatalog settings for the specified subcatalog.",
          "body": {
            "type": "subcatalog_settings_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/catalog/subcatalogs/:subcatalog_id/exclusions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "subcatalog_id",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "number",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "name"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[item]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "number"
                  }
                ]
              }
            },
            {
              "name": "non-crud",
              "value": {}
            }
          ],
          "description": "Search exclusions. Always paginated."
        },
        {
          "method": "GET",
          "path": "/:organization/catalog/subcatalogs/:subcatalog_id/exclusions/:number",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "subcatalog_id",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "number",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "item",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Returns information about a specific exclusion by catalog item number."
        },
        {
          "method": "PUT",
          "path": "/:organization/catalog/subcatalogs/:subcatalog_id/exclusions/:number",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "subcatalog_id",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "number",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "item",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Add exclusion"
        },
        {
          "method": "DELETE",
          "path": "/:organization/catalog/subcatalogs/:subcatalog_id/exclusions/:number",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "subcatalog_id",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "number",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Delete an exclusion with this catalog item number"
        },
        {
          "method": "GET",
          "path": "/:organization/catalog/subcatalogs/:subcatalog_id/functions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "subcatalog_id",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[subcatalog_function]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            }
          ],
          "description": "Gets the ordered list of item functions for this subcatalog"
        },
        {
          "method": "POST",
          "path": "/:organization/catalog/subcatalogs/:subcatalog_id/functions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "subcatalog_id",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "subcatalog_function",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Associates a function with this subcatalog",
          "body": {
            "type": "subcatalog_function_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/catalog/subcatalogs/:subcatalog_id/functions/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "subcatalog_id",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "subcatalog_function",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": []
        },
        {
          "method": "DELETE",
          "path": "/:organization/catalog/subcatalogs/:subcatalog_id/functions/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "subcatalog_id",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Deletes the subcatalog item function - note that this removes the association between the function and subcatalog / does not actually delete the function itself."
        },
        {
          "method": "GET",
          "path": "/:organization/catalog/subcatalogs/:subcatalog_id/functions/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "subcatalog_id",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[subcatalog_function_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ],
          "description": "Provides visibility into recent changes of each object, including deletion"
        },
        {
          "method": "GET",
          "path": "/:organization/catalog/subcatalogs/:subcatalog_id/inclusions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "subcatalog_id",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "number",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "name"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[item]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "number"
                  }
                ]
              }
            },
            {
              "name": "non-crud",
              "value": {}
            }
          ],
          "description": "Search inclusions. Always paginated."
        },
        {
          "method": "GET",
          "path": "/:organization/catalog/subcatalogs/:subcatalog_id/inclusions/:number",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "subcatalog_id",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "number",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "item",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Returns information about a specific inclusion by catalog item number."
        },
        {
          "method": "PUT",
          "path": "/:organization/catalog/subcatalogs/:subcatalog_id/inclusions/:number",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "subcatalog_id",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "number",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "item",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Add inclusion"
        },
        {
          "method": "DELETE",
          "path": "/:organization/catalog/subcatalogs/:subcatalog_id/inclusions/:number",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "subcatalog_id",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "number",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Delete an inclusion with this catalog item number"
        },
        {
          "method": "GET",
          "path": "/:organization/catalog/subcatalogs/:subcatalog_id/queries",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "subcatalog_id",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "type",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[query]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "type"
                  }
                ]
              }
            },
            {
              "name": "non-crud",
              "value": {}
            }
          ],
          "description": "Search queries. Always paginated."
        },
        {
          "method": "POST",
          "path": "/:organization/catalog/subcatalogs/:subcatalog_id/queries",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "subcatalog_id",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "query",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Add query",
          "body": {
            "type": "query_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/catalog/subcatalogs/:subcatalog_id/queries/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "subcatalog_id",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "query",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Returns information about a specific query."
        },
        {
          "method": "DELETE",
          "path": "/:organization/catalog/subcatalogs/:subcatalog_id/queries/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "subcatalog_id",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Delete a query with this id"
        },
        {
          "method": "GET",
          "path": "/:organization/catalog/subcatalogs/:subcatalog_id/statistics",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "subcatalog_id",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "subcatalog_statistics",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Get statistics for the specified subcatalog"
        },
        {
          "method": "GET",
          "path": "/:organization/catalog/subcatalogs/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[subcatalog_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "key"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ],
          "description": "Provides visibility into recent changes of each object, including deletion"
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "localization"
          }
        }
      ],
      "path": "/:organization/catalog/subcatalogs",
      "description": "A configuration with custom query to select a subset of master catalog items for a localized experience"
    },
    {
      "type": "subcatalog_item",
      "plural": "subcatalog_items",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/catalog/subcatalogs/:subcatalog_id/items",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "subcatalog_id",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "number",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "status",
              "type": "[subcatalog_item_status]",
              "location": "Query",
              "required": false,
              "description": "Filter to items with a status as defined in https://docs.flow.io/types.html#type-subcatalog-item-status",
              "maximum": 3,
              "example": "included"
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            },
            {
              "name": "expand",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "minimum": 0,
              "maximum": 1,
              "example": "item_function"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[subcatalog_item]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "number"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ],
          "description": "Search subcatalog items. Always paginated."
        },
        {
          "method": "GET",
          "path": "/:organization/catalog/subcatalogs/:subcatalog_id/items/:number",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "subcatalog_id",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "number",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "subcatalog_item",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Returns information about specific subcatalog items."
        },
        {
          "method": "GET",
          "path": "/:organization/catalog/subcatalogs/:subcatalog_id/items/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "subcatalog_id",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "number",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter to items with any one of these numbers.",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[subcatalog_item_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "number"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ],
          "description": "Provides visibility into recent changes of each object, including deletion"
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "localization"
          }
        }
      ],
      "path": "/:organization/catalog/subcatalogs/:subcatalog_id/items",
      "description": "Represents information specific to an item in a given subcatalog"
    },
    {
      "type": "targeting",
      "plural": "targetings",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/catalog/targetings",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "key",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[targeting]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "key"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "POST",
          "path": "/:organization/catalog/targetings",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "targeting",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "targeting_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/catalog/targetings/:key",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "key",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "targeting",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "PUT",
          "path": "/:organization/catalog/targetings/:key",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "key",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "targeting",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "targeting",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "targeting_form",
            "attributes": []
          }
        },
        {
          "method": "DELETE",
          "path": "/:organization/catalog/targetings/:key",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "key",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/:organization/catalog/targetings/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "key",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[targeting_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "key"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "localization"
          }
        }
      ],
      "path": "/:organization/catalog/targetings"
    },
    {
      "type": "targeting_item",
      "plural": "targeting_items",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/catalog/targeting-items",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "key",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Key of the targeting",
              "maximum": 100
            },
            {
              "name": "item_number",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Number of the item",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[targeting_item]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "key"
                  },
                  {
                    "value": "number"
                  }
                ]
              }
            },
            {
              "name": "non-crud",
              "value": {}
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "localization"
          }
        }
      ],
      "path": "/:organization/catalog/targeting-items",
      "description": "Represents catalog items where a targeteing query is applicable"
    },
    {
      "type": "item_function",
      "plural": "item_functions",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/item-functions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "key",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[item_function]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "key"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            }
          ],
          "description": "Search item functions. Always paginated."
        },
        {
          "method": "POST",
          "path": "/:organization/item-functions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "item_function",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Create item function",
          "body": {
            "type": "item_function_post_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/item-functions/:key",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "key",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "item_function",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Returns information about a specific item function."
        },
        {
          "method": "PUT",
          "path": "/:organization/item-functions/:key",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "key",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "item_function",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "item_function",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Upsert item function",
          "body": {
            "type": "item_function_put_form",
            "attributes": []
          }
        },
        {
          "method": "DELETE",
          "path": "/:organization/item-functions/:key",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "key",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Delete the item function with this key"
        },
        {
          "method": "GET",
          "path": "/:organization/item-functions/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[item_function_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ],
          "description": "Provides visibility into recent changes of each object, including deletion"
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "pricing"
          }
        }
      ],
      "path": "/:organization/item-functions",
      "description": "Item Functions are javascript code used to calculate the localized price of an additional item. Each function can be associated with an optional query identifying the products to which the function applies. Flow selects the first function matching an item, then uses that function to calculate local prices whenever any data relevant to the item changes (e.g. on update in master catalog, on change in relevant exchange rate, etc.). Item functions are immutable once created."
    },
    {
      "type": "organization_currency_setting",
      "plural": "organization_currency_settings",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/currency/settings",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "base",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Filter by the (case-insensitive) base currency's ISO 4217 3-character code as defined in https://api.flow.io/reference/currencies"
            },
            {
              "name": "target",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Filter by the (case-insensitive) target currency's ISO 4217 3-character code as defined in https://api.flow.io/reference/currencies"
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[organization_currency_setting]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "base"
                  },
                  {
                    "value": "target"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            }
          ],
          "description": "Search organization currency settings. Always paginated."
        },
        {
          "method": "POST",
          "path": "/:organization/currency/settings",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "organization_currency_setting",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Create organization currency settings.",
          "body": {
            "type": "organization_currency_setting_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/currency/settings/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "organization_currency_setting",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "PUT",
          "path": "/:organization/currency/settings/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "organization_currency_setting",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Update an existing organization currency setting by id.",
          "body": {
            "type": "organization_currency_setting_form",
            "attributes": []
          }
        },
        {
          "method": "DELETE",
          "path": "/:organization/currency/settings/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Delete the organization currency setting with this id."
        },
        {
          "method": "GET",
          "path": "/:organization/currency/settings/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[organization_currency_setting_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "base"
                  },
                  {
                    "value": "target"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ],
          "description": "Provides visibility into recent changes of each object, including deletion."
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "pricing"
          }
        }
      ],
      "path": "/:organization/currency/settings",
      "description": "Represents organization-specific currency conversion adjustments."
    },
    {
      "type": "rate",
      "plural": "rates",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/currency/rates",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "base",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more (case-insensitive) base currency ISO 4217 3-character codes, as defined in https://api.flow.io/reference/currencies",
              "maximum": 100
            },
            {
              "name": "target",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Filter by the (case-insensitive) target currency's ISO 4217 3-character code as defined in https://api.flow.io/reference/currencies"
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[rate]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "base"
                  },
                  {
                    "value": "target"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            }
          ],
          "description": "Search organization currency conversion rates. Always paginated."
        },
        {
          "method": "GET",
          "path": "/:organization/currency/rates/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "base",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Filter by the (case-insensitive) base currency's ISO 4217 3-character code as defined in https://api.flow.io/reference/currencies"
            },
            {
              "name": "target",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Filter by the (case-insensitive) target currency's ISO 4217 3-character code as defined in https://api.flow.io/reference/currencies"
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[rate_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "base"
                  },
                  {
                    "value": "target"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ],
          "description": "Provides visibility into recent changes of each object, including deletion."
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "pricing"
          }
        }
      ],
      "path": "/:organization/currency/rates",
      "description": "Represents an organization-specific currency conversion rate at a point in time."
    },
    {
      "type": "harmonization_settings",
      "plural": "harmonization_settings",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/harmonization/settings",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "harmonization_settings",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": []
        },
        {
          "method": "PUT",
          "path": "/:organization/harmonization/settings",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "harmonization_settings",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "harmonization_settings_form",
            "attributes": []
          }
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "landed cost"
          }
        }
      ],
      "path": "/:organization/harmonization/settings",
      "description": "Organization level settings."
    },
    {
      "type": "harmonized_category",
      "plural": "harmonized_categories",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/harmonization/categories",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "parent_id",
              "type": "string",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[harmonized_category]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "sort",
                  "versions"
                ]
              }
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "landed cost"
          }
        }
      ],
      "path": "/:organization/harmonization/categories",
      "description": "Categories optimized for harmonization"
    },
    {
      "type": "harmonized_item",
      "plural": "harmonized_items",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/harmonization/items",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "number",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "name"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[harmonized_item]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "number"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "POST",
          "path": "/:organization/harmonization/items",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "harmonized_item",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "harmonized_item_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/harmonization/items/:number",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "number",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "harmonized_item",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "PUT",
          "path": "/:organization/harmonization/items/:number",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "number",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "harmonized_item",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "harmonized_item",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Create or update an item to harmonize",
          "body": {
            "type": "harmonized_item_put_form",
            "attributes": []
          }
        },
        {
          "method": "DELETE",
          "path": "/:organization/harmonization/items/:number",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "number",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/:organization/harmonization/items/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "item_id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter to items with any one of these ids.",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[harmonized_item_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "item_id"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ],
          "description": "Provides visibility into recent changes of each object, including deletion"
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "landed cost"
          }
        }
      ],
      "path": "/:organization/harmonization/items",
      "description": "A harmonized item stores explicit information about this item for the purposes of harmonization / classification. The harmonization process begins by creating a harmonized item; this kicks off the internal processes. Once assigned, codes will be available via the hs6 and hs10 resources"
    },
    {
      "type": "harmonized_item_duty",
      "plural": "harmonized_item_duties",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/harmonization/item-duties",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "number",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "origin",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "The ISO 3166 3 character country code of the country of origin"
            },
            {
              "name": "destination",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "The ISO 3166 3 character country code of the destination country"
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[harmonized_item_duty]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "number"
                  },
                  {
                    "value": "origin"
                  },
                  {
                    "value": "destination"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "POST",
          "path": "/:organization/harmonization/item-duties",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "harmonized_item_duty",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "harmonized_item_duty_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/harmonization/item-duties/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "harmonized_item_duty",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "DELETE",
          "path": "/:organization/harmonization/item-duties/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/:organization/harmonization/item-duties/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "harmonized_item_duty_id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter to item duties with any one of these ids.",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[harmonized_item_duty_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "harmonized_item_duty_id"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ],
          "description": "Provides visibility into recent changes of each object, including deletion"
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "landed cost"
          }
        }
      ],
      "path": "/:organization/harmonization/item-duties",
      "description": "Used to specifically set an item's duty rate for a given trade lane."
    },
    {
      "type": "harmonized_landed_cost",
      "plural": "harmonized_landed_costs",
      "operations": [
        {
          "method": "POST",
          "path": "/:organization/harmonization/landed-costs",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "harmonized_landed_cost",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Single operation that provides harmonization landed costs (i.e. duties and taxes) for 1 or more items. This method is designed to enable a single call from applications that need it (like checkout) to get all data for a collection of items",
          "body": {
            "type": "harmonized_landed_cost_form",
            "attributes": []
          }
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "landed cost"
          }
        }
      ],
      "path": "/:organization/harmonization/landed-costs",
      "description": "Summary of landed cost data (taxes and duties) for 1 or more items going to a single destination country. Records are unique based on (item.number, country of origin)."
    },
    {
      "type": "hs10",
      "plural": "hs10",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/harmonization/hs10",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "item_number",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "origin",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "The ISO 3166 3 character country code of the destination country"
            },
            {
              "name": "destination",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "The ISO 3166 3 character country code of the destination country"
            },
            {
              "name": "code",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Filter to records matching this HS-10 code"
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[hs10]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "item_number"
                  },
                  {
                    "value": "origin"
                  },
                  {
                    "value": "destination"
                  },
                  {
                    "value": "code"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "GET",
          "path": "/:organization/harmonization/hs10/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "hs10_id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter to HS-10s with any one of these ids.",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[hs10_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "hs10_id"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ],
          "description": "Provides visibility into recent changes of each object, including deletion"
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "landed cost"
          }
        }
      ],
      "path": "/:organization/harmonization/hs10",
      "description": "API to fetch HS-10 codes assigned to your items. Note that if your item has been classified multiple times or its classification has changed, this API will provide you with the most recent harmonization code for that item. That is, each code is unique across your item number, country of origin and destination."
    },
    {
      "type": "hs6",
      "plural": "hs6",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/harmonization/hs6",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "item_number",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "code",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Filter to records matching this HS-6 code"
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[hs6]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "item_number"
                  },
                  {
                    "value": "code"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "GET",
          "path": "/:organization/harmonization/hs6/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "hs6_id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter to HS-6s with any one of these ids.",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[hs6_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "hs6_id"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ],
          "description": "Provides visibility into recent changes of each object, including deletion"
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "landed cost"
          }
        }
      ],
      "path": "/:organization/harmonization/hs6",
      "description": "API to fetch HS-6 codes assigned to your items. Note that if your item has been classified multiple times or its classification has changed, this API will provide you with the most recent harmonization code for that item."
    },
    {
      "type": "hs_code",
      "plural": "hs_codes",
      "operations": [
        {
          "method": "GET",
          "path": "/harmonization/codes",
          "parameters": [
            {
              "name": "code",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Find these specific harmonization codes. Case insensitive.",
              "maximum": 100
            },
            {
              "name": "parent",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Find records with this parent harmonization code. Case insensitive."
            },
            {
              "name": "has_parent",
              "type": "boolean",
              "location": "Query",
              "required": false,
              "description": "Find records with or without a parent code."
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "code"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[hs_code]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 400
                }
              },
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "code"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "get",
                  "versions",
                  "sort_parameter_default"
                ]
              }
            }
          ],
          "description": "Search harmonization codes. Always paginated."
        },
        {
          "method": "GET",
          "path": "/harmonization/codes/:code",
          "parameters": [
            {
              "name": "code",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "hs_code",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 400
                }
              },
              "type": "unit"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Returns information about a specific harmonization code."
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "landed cost"
          }
        }
      ],
      "path": "/harmonization/codes",
      "description": "API to fetch current HS-6 codes."
    },
    {
      "type": "authorization",
      "plural": "authorizations",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/authorizations",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "key",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "order_number",
              "type": "string",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            },
            {
              "name": "expand",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "minimum": 0,
              "maximum": 2,
              "example": "card, payment"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[authorization]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "key"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "POST",
          "path": "/:organization/authorizations",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "expand",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "minimum": 0,
              "maximum": 2,
              "example": "card, payment"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "authorization",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Create a new authorization.",
          "body": {
            "type": "authorization_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/authorizations/:key",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "key",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "expand",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "minimum": 0,
              "maximum": 2,
              "example": "card, payment"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "authorization",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Returns information about a specific authorization."
        },
        {
          "method": "DELETE",
          "path": "/:organization/authorizations/:key",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "key",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "authorization_delete_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Deletes a given authorization. This method will return a 422 if funds have already been captured."
        },
        {
          "method": "GET",
          "path": "/:organization/authorizations/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[long]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "authorization_id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter to authorizations with any one of these ids.",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[authorization_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "authorization_id"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ],
          "description": "Provides visibility into recent changes of each object, including deletion"
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "payment"
          }
        }
      ],
      "path": "/:organization/authorizations"
    },
    {
      "type": "capture",
      "plural": "captures",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/captures",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "key",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "authorization_id",
              "type": "string",
              "location": "Query",
              "required": false
            },
            {
              "name": "authorization_key",
              "type": "string",
              "location": "Query",
              "required": false
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[capture]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "key"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "POST",
          "path": "/:organization/captures",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "capture",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Create a new capture.",
          "body": {
            "type": "capture_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/captures/:key",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "key",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "capture",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Returns information about a specific capture."
        },
        {
          "method": "GET",
          "path": "/:organization/captures/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[long]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "capture_id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter to captures with any one of these ids.",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[capture_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "capture_id"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ],
          "description": "Provides visibility into recent changes of each object, including deletion"
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "payment"
          }
        }
      ],
      "path": "/:organization/captures",
      "description": "Capture actually transfers funds. You can capture as many times as you'd like up until the total amount of the authorization has been captured or the authorization otherwise becomes unavailable (e.g. expires)."
    },
    {
      "type": "card",
      "plural": "cards",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/cards",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "token",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[card]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "sort_parameter_default"
                ]
              }
            }
          ]
        },
        {
          "method": "POST",
          "path": "/:organization/cards",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "card",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "card_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Create a new card. Note that when using JSONP to submit a card, you do not need to authenticate.",
          "body": {
            "type": "card_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/cards/:token",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "token",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "card",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Returns information about a specific card."
        },
        {
          "method": "DELETE",
          "path": "/:organization/cards/:token",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "token",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Deletes the specified card"
        },
        {
          "method": "POST",
          "path": "/:organization/cards/nonces",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "card",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Creates a card from a one time nonce. Each nonce can be used at most once and you will receive a validation error if the nonce has already been exchanged.",
          "body": {
            "type": "card_nonce_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/cards/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[long]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "card_id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter to cards with any one of these ids.",
              "maximum": 100
            },
            {
              "name": "card_token",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[card_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "card_id"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ],
          "description": "Provides visibility into recent changes of each object, including deletion"
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "payment"
          }
        }
      ],
      "path": "/:organization/cards",
      "description": "Card represents the metadata about a secure, tokenized card. The card 'token' is a unique, cryptographically secure token by which this card can be identified in the future. The card token itself will either be a permanent card token (denoted by a prefix of F96) or a one time nonce (denoted by a prefix of F17). Nonces represent cards that were encrypted from public channels (like the user's browser via JavaScript) and can be used once only. If you have a nonce you can exchange it for a permanent card token via the operation POST /:organization/cards/nonces"
    },
    {
      "type": "payment",
      "plural": "payments",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/payments",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "payment_method",
              "type": "string",
              "location": "Query",
              "required": false,
              "example": "paypal"
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[payment]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "POST",
          "path": "/:organization/payments",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "payment",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "payment_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Create a new payment. Note that when using JSONP to submit a payment, you do not need to authenticate.",
          "body": {
            "type": "payment_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/payments/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "payment",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Returns information about a specific payment."
        },
        {
          "method": "DELETE",
          "path": "/:organization/payments/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "Payments can be deleted until they are associated with an authorization"
            }
          ],
          "attributes": [],
          "description": "Deletes the specified payment"
        },
        {
          "method": "GET",
          "path": "/:organization/payments/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[long]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "payment_id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter to payments with any one of these ids.",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[payment_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "payment_id"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ],
          "description": "Provides visibility into recent changes of each object, including deletion"
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "payment"
          }
        }
      ],
      "path": "/:organization/payments",
      "description": "Represents data for a specific online payment method"
    },
    {
      "type": "public_key",
      "plural": "public_keys",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/encryption/keys",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[public_key]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "created_at"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "versions"
                ]
              }
            }
          ],
          "description": "Returns your public keys"
        },
        {
          "method": "GET",
          "path": "/:organization/encryption/keys/latest",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "public_key",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "response_codes"
                ]
              }
            }
          ],
          "description": "Return the latest public key for an organization"
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "payment"
          }
        }
      ],
      "path": "/:organization/encryption/keys",
      "description": "A public key is used to encrypt cards client side prior to submitting to the Flow vault."
    },
    {
      "type": "refund",
      "plural": "refunds",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/refunds",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "key",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "authorization_id",
              "type": "string",
              "location": "Query",
              "required": false
            },
            {
              "name": "authorization_key",
              "type": "string",
              "location": "Query",
              "required": false
            },
            {
              "name": "capture_id",
              "type": "string",
              "location": "Query",
              "required": false
            },
            {
              "name": "capture_key",
              "type": "string",
              "location": "Query",
              "required": false
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[refund]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "key"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "POST",
          "path": "/:organization/refunds",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "refund",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Create a new refund.",
          "body": {
            "type": "refund_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/refunds/:key",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "key",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "refund",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Returns information about a specific refund."
        },
        {
          "method": "GET",
          "path": "/:organization/refunds/summary/:order_number",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "order_number",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "refund_order_summary",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Returns a refund order summary for the specified order."
        },
        {
          "method": "GET",
          "path": "/:organization/refunds/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[long]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "refund_id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter to refunds with any one of these ids.",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[refund_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "refund_id"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ],
          "description": "Provides visibility into recent changes of each object, including deletion"
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "payment"
          }
        }
      ],
      "path": "/:organization/refunds",
      "description": "Refunds can be created against either a specific capture or an authorization (in which case we will select 1 or more specific captures against which to execute the refund)."
    },
    {
      "type": "center",
      "plural": "centers",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/centers",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "key",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "name"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[center]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "key"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "POST",
          "path": "/:organization/centers",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "center",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "center_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/centers/:key",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "key",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "center",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "PUT",
          "path": "/:organization/centers/:key",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "key",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "center",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "center",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "center_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/centers/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "key",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[center_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "key"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "path": "/:organization/centers",
      "description": "Represents a facility capable of fulfilling a shipment"
    },
    {
      "type": "delivery_window",
      "plural": "delivery_windows",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/delivery-windows/summary",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier",
              "example": "some-org-key"
            },
            {
              "name": "strategy",
              "type": "strategy",
              "location": "Query",
              "required": true,
              "default": "range",
              "example": "range,from,to"
            },
            {
              "name": "center",
              "type": "string",
              "location": "Query",
              "required": false,
              "example": "ctr-20150101-101"
            },
            {
              "name": "origin",
              "type": "string",
              "location": "Query",
              "required": false,
              "example": "22 Hudson Pl, Hoboken NJ 07030 USA"
            },
            {
              "name": "destination",
              "type": "string",
              "location": "Query",
              "required": false,
              "example": "22 Hudson Pl, Hoboken NJ 07030 USA"
            },
            {
              "name": "ip",
              "type": "string",
              "location": "Query",
              "required": false,
              "example": "68.192.179.190"
            },
            {
              "name": "latitude",
              "type": "string",
              "location": "Query",
              "required": false,
              "example": "40.76955"
            },
            {
              "name": "longitude",
              "type": "string",
              "location": "Query",
              "required": false,
              "example": "-74.02042"
            },
            {
              "name": "service",
              "type": "string",
              "location": "Query",
              "required": false,
              "example": "ups-ground, dhl-express-worldwide"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "delivery_window",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "Unable to resolve delivery window based on parameter entries"
            }
          ],
          "attributes": [],
          "description": "Endpoint to request a delivery window. Requires some knowledge of origin (based on organization, center, or specified address string) and destination (based on ip, lat/long, or address string). Other attributes allow us to narrow down delivery windows even more such as service level to be used and timestamp of expected shipment date."
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "path": "/:organization/delivery-windows"
    },
    {
      "type": "inventory_rule",
      "plural": "inventory_rules",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/inventory_rules",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[inventory_rule]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "POST",
          "path": "/:organization/inventory_rules",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "inventory_rule",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "inventory_rule_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/inventory_rules/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[inventory_rule_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "path": "/:organization/inventory_rules",
      "description": "Ordered list of rules to apply, from first to last, to get available quantity. This is unique per organization"
    },
    {
      "type": "inventory_snapshot",
      "plural": "inventory_snapshots",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/inventory_snapshots",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "center",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "item_number",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[inventory_snapshot]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "center"
                  },
                  {
                    "value": "item_number"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "GET",
          "path": "/:organization/inventory_snapshots/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "inventory_snapshot",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/:organization/inventory_snapshots/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "inventory_snapshot",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[inventory_snapshot_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "inventory_snapshot"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "path": "/:organization/inventory_snapshots",
      "description": "Inventory snapshot reflects the current quantity and available number of units for a given center / item"
    },
    {
      "type": "inventory_update",
      "plural": "inventory_updates",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/inventory_updates",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "center",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "item_number",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[inventory_update]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "center"
                  },
                  {
                    "value": "item_number"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "POST",
          "path": "/:organization/inventory_updates",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "inventory_update",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "inventory_update_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/inventory_updates/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "inventory_update",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/:organization/inventory_updates/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "inventory_update",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[inventory_update_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "inventory_update"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "path": "/:organization/inventory_updates",
      "description": "Represents a single update on inventory quantity"
    },
    {
      "type": "manifest",
      "plural": "manifests",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/manifests",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "carrier_tracking_number",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "flow_tracking_number",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "service",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[manifest]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "created_at"
                  },
                  {
                    "value": "carrier_tracking_number"
                  },
                  {
                    "value": "flow_tracking_number"
                  },
                  {
                    "value": "service"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "versions"
                ]
              }
            }
          ]
        },
        {
          "method": "GET",
          "path": "/:organization/manifests/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "manifest",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/:organization/manifests/type/all",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "service",
              "type": "string",
              "location": "Query",
              "required": true,
              "example": "dhl-express-worldwide"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 302
                }
              },
              "type": "string"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "response_codes"
                ]
              }
            }
          ],
          "description": "Generates a new manifest with all outstanding labels and redirects to a downloadable PDF of carrier-generated manifest or bill of lading (BOL). If no outstanding labels, this will generate a 422 error."
        },
        {
          "method": "POST",
          "path": "/:organization/manifests/type/list",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "manifest",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Generate a new manifest/carrier BOL with specific tracking numbers",
          "body": {
            "type": "manifest_form",
            "attributes": []
          }
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "path": "/:organization/manifests",
      "description": "Represents closeout of a group of labels that have been transfered to the carrier for shipping"
    },
    {
      "type": "quote",
      "plural": "quotes",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/quotes",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[quote]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  }
                ]
              }
            }
          ],
          "description": "Search quotes. Always paginated."
        },
        {
          "method": "POST",
          "path": "/:organization/quotes",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "quote",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "quote_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "quote_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/quotes/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "quote",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/:organization/quotes/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "quote",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[quote_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "quote"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "path": "/:organization/quotes",
      "description": "Represents a collection of deliveries and available options for fulfillment of that delivery"
    },
    {
      "type": "return",
      "plural": "returns",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/returns",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "key",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "order_number",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "flow_tracking_number",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "carrier_tracking_number",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "service",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[return]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "created_at"
                  },
                  {
                    "value": "key"
                  },
                  {
                    "value": "order_number"
                  },
                  {
                    "value": "flow_tracking_number"
                  },
                  {
                    "value": "carrier_tracking_number"
                  },
                  {
                    "value": "service"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "POST",
          "path": "/:organization/returns",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "return",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "return_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/returns/:key",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "key",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "return",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "PUT",
          "path": "/:organization/returns/:key",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "key",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "return",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "return",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "return_form",
            "attributes": []
          }
        },
        {
          "method": "DELETE",
          "path": "/:organization/returns/:key",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "key",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/:organization/returns/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "key",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[return_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "key"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "path": "/:organization/returns"
    },
    {
      "type": "shipping_label",
      "plural": "shipping_labels",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/shipping_labels",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "carrier_tracking_number",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "flow_tracking_number",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "order_number",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "service",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[shipping_label]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "carrier_tracking_number"
                  },
                  {
                    "value": "flow_tracking_number"
                  },
                  {
                    "value": "order_number"
                  },
                  {
                    "value": "service"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "POST",
          "path": "/:organization/shipping_labels",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "shipping_label",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "shipping_label_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/shipping_labels/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "shipping_label",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/:organization/shipping_labels/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "label",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[shipping_label_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "label"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "path": "/:organization/shipping_labels",
      "description": "Represents information about a carrier-generated shipping label used by a shipper to transport a package from a given origin to destination"
    },
    {
      "type": "shipping_notification",
      "plural": "shipping_notifications",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/shipping-notifications",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "key",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "carrier_tracking_number",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "flow_tracking_number",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "order_number",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "service",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[shipping_notification]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "key"
                  },
                  {
                    "value": "carrier_tracking_number"
                  },
                  {
                    "value": "flow_tracking_number"
                  },
                  {
                    "value": "order_number"
                  },
                  {
                    "value": "service"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "POST",
          "path": "/:organization/shipping-notifications",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "shipping_notification",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "shipping_notification_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/shipping-notifications/:key",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "key",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "shipping_notification",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "PUT",
          "path": "/:organization/shipping-notifications/:key",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "key",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "shipping_notification",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "shipping_notification",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "shipping_notification_form",
            "attributes": []
          }
        },
        {
          "method": "DELETE",
          "path": "/:organization/shipping-notifications/:key",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "key",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/:organization/shipping-notifications/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "key",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[shipping_notification_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "key"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "path": "/:organization/shipping-notifications",
      "description": "Represents information about a client-facilitated shipment where the shipping label and fulfillment was not handled by Flow. For merchant-of-record and tracking purposes, clients doing their own shipping will need to notify Flow of shipped packages."
    },
    {
      "type": "tier",
      "plural": "tiers",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/tiers",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "tier_direction",
              "type": "tier_direction",
              "location": "Query",
              "required": false,
              "example": "outbound"
            },
            {
              "name": "experience",
              "type": "string",
              "location": "Query",
              "required": false
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "name"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[tier]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "POST",
          "path": "/:organization/tiers",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "tier",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "tier_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/tiers/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "tier",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "PUT",
          "path": "/:organization/tiers/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "tier",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "tier",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "tier_form",
            "attributes": []
          }
        },
        {
          "method": "DELETE",
          "path": "/:organization/tiers/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/:organization/tiers/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "tier",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[tier_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "tier"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "path": "/:organization/tiers",
      "description": "Service shipping tier available in this tier gorup. e.g. Standard tier, Express tier, Economy tier"
    },
    {
      "type": "tier_default",
      "plural": "tier_defaults",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/tier_defaults",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "experience",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[tier_default]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "experience"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "POST",
          "path": "/:organization/tier_defaults",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "tier_default",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "tier_default_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/tier_defaults/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "tier_default",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/:organization/tier_defaults/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "tier_default",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[tier_default_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "tier_default"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "path": "/:organization/tier_defaults",
      "description": "Grouping of shipping tiers by experience to provide logical default functionality."
    },
    {
      "type": "tier_rule",
      "plural": "tier_rules",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/tiers/:tier_id/rules",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "tier_id",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[tier_rule]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "POST",
          "path": "/:organization/tiers/:tier_id/rules",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "tier_id",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "tier_rule",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "tier_rule_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/tiers/:tier_id/rules/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "tier_id",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "tier_rule",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "PUT",
          "path": "/:organization/tiers/:tier_id/rules/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "tier_id",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "tier_rule",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "tier_rule",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "tier_rule_form",
            "attributes": []
          }
        },
        {
          "method": "DELETE",
          "path": "/:organization/tiers/:tier_id/rules/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "tier_id",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/:organization/tiers/:tier_id/rules/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "tier_id",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "tier_rule",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[tier_rule_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "tier_rule"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "path": "/:organization/tiers/:tier_id/rules",
      "description": "System to filter incoming quote for a shipment request based on a query and output corresponding outcomes."
    },
    {
      "type": "tracking",
      "plural": "trackings",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/trackings",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[tracking]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "POST",
          "path": "/:organization/trackings",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "tracking",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "tracking_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/trackings/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "tracking_id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[tracking_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "tracking_id"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "GET",
          "path": "/trackings/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "tracking",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Public endpoint to get all relevant information about a tracking, label(s) under it, and event(s) under those label(s)"
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "path": "",
      "description": "Top level tracking information which contains labels. In cases where shipments are re-labeled, you will see multiple labels for each tracking allowing simple access to see where a shipment is - with which carrier and with the local tracking number"
    },
    {
      "type": "tracking_event",
      "plural": "tracking_events",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/tracking-events",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "tracking_id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "tracking_label_id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[tracking_event]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "tracking_id"
                  },
                  {
                    "value": "tracking_label_id"
                  },
                  {
                    "value": "timestamp"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "GET",
          "path": "/:organization/tracking-events/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "tracking_event",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/:organization/tracking-events/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "tracking_event_id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[tracking_event_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "tracking_event_id"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "path": "/:organization/tracking-events"
    },
    {
      "type": "tracking_label",
      "plural": "tracking_labels",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/tracking-labels",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "tracking_id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[tracking_label]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "tracking_id"
                  }
                ]
              }
            }
          ]
        },
        {
          "method": "POST",
          "path": "/:organization/tracking-labels",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "tracking_label",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "tracking_label_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/tracking-labels/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "tracking_label",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/:organization/tracking-labels/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "tracking_label_id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[tracking_label_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "tracking_label_id"
                  }
                ]
              }
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "logistics"
          }
        }
      ],
      "path": "/:organization/tracking-labels",
      "description": "Represents a specific label being tracked as part of the tracking bucket"
    },
    {
      "type": "webhook",
      "plural": "webhooks",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/webhooks",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[webhook]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  }
                ]
              }
            },
            {
              "name": "non-crud",
              "value": {}
            }
          ],
          "description": "Returns webhooks for an organization"
        },
        {
          "method": "POST",
          "path": "/:organization/webhooks",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "webhook",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Create a new webhook",
          "body": {
            "type": "webhook_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/webhooks/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "webhook",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Returns information about a specific webhook"
        },
        {
          "method": "PUT",
          "path": "/:organization/webhooks/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "webhook",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Update an existing webhook",
          "body": {
            "type": "webhook_form",
            "attributes": []
          }
        },
        {
          "method": "DELETE",
          "path": "/:organization/webhooks/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Delete a webhook with the specified id"
        },
        {
          "method": "GET",
          "path": "/:organization/webhooks/settings",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "webhook_settings",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "non-crud",
              "value": {}
            }
          ],
          "description": "Returns the webhook settings for an organization"
        },
        {
          "method": "PUT",
          "path": "/:organization/webhooks/settings",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "webhook_settings",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "webhook_settings",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Updates the webhook settings for an organization",
          "body": {
            "type": "webhook_settings",
            "attributes": []
          }
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "webhook"
          }
        }
      ],
      "path": "/:organization/webhooks"
    },
    {
      "type": "webhook_delivery",
      "plural": "webhook_deliveries",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/webhook/deliveries",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "webhook_id",
              "type": "string",
              "location": "Query",
              "required": false
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[webhook_delivery]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "webhook_id"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            },
            {
              "name": "non-crud",
              "value": {}
            }
          ],
          "description": "Returns deliveries for an organization's webhook"
        },
        {
          "method": "GET",
          "path": "/:organization/webhook/deliveries/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "webhook_delivery",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Returns information about a specific webhook delivery"
        },
        {
          "method": "POST",
          "path": "/:organization/webhook/deliveries/:id/requests",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "webhook_request",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Redeliver a webhook request. This created a new webhook request to requeue delivery"
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "webhook"
          }
        }
      ],
      "path": "/:organization/webhook/deliveries",
      "description": "A webhook delivery represents an event that matched a webhook's event types. Each delivery will be attempted one or more times subject to the settings of your webhook."
    },
    {
      "type": "address",
      "plural": "addresses",
      "operations": [
        {
          "method": "GET",
          "path": "/addresses",
          "parameters": [
            {
              "name": "address",
              "type": "string",
              "location": "Query",
              "required": false,
              "example": "22 Hudson Pl, Hoboken NJ 07030 USA"
            },
            {
              "name": "ip",
              "type": "string",
              "location": "Query",
              "required": false,
              "example": "96.242.151.245"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[address]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "get",
                  "versions"
                ]
              }
            }
          ],
          "description": "Geolocates the request based on the provided parameters, returning a list of potential matching addresses."
        },
        {
          "method": "POST",
          "path": "/addresses/verifications",
          "parameters": [],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "address_verification",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "address",
            "attributes": []
          }
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "geolocation"
          }
        }
      ],
      "path": "/addresses"
    },
    {
      "type": "country_defaults",
      "plural": "country_defaults",
      "operations": [
        {
          "method": "GET",
          "path": "/geolocation/defaults",
          "parameters": [
            {
              "name": "country",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "The ISO 3166 2 or 3 character code for the country. Case insensitive. See https://api.flow.io/reference/countries",
              "example": "CAN"
            },
            {
              "name": "address",
              "type": "string",
              "location": "Query",
              "required": false,
              "example": "22 Hudson Pl, Hoboken NJ 07030 USA"
            },
            {
              "name": "ip",
              "type": "string",
              "location": "Query",
              "required": false,
              "example": "96.242.151.245"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[country_defaults]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "get",
                  "versions"
                ]
              }
            }
          ]
        },
        {
          "method": "GET",
          "path": "/geolocation/defaults/:country",
          "parameters": [
            {
              "name": "country",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "The ISO 3166 2 or 3 character code for the country. Case insensitive. See https://api.flow.io/reference/countries",
              "example": "CAN"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "country_defaults",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "get",
                  "versions"
                ]
              }
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "geolocation"
          }
        }
      ],
      "path": "/geolocation/defaults",
      "description": "Provides country level defaults, incl language and currency. This resource allows you to provide geo info (e.g. IP, address, country) and will geolocate the request, returning the matching country level defaults. For example, if a user lands on your website and you do not have any stored preferences, you can use this API to retrieve the best default preferences based on the location of the user by providing their IP Address."
    },
    {
      "type": "timezone",
      "plural": "timezones",
      "operations": [
        {
          "method": "GET",
          "path": "/geolocation/timezones",
          "parameters": [
            {
              "name": "address",
              "type": "string",
              "location": "Query",
              "required": false,
              "example": "22 Hudson Pl, Hoboken NJ 07030 USA"
            },
            {
              "name": "ip",
              "type": "string",
              "location": "Query",
              "required": false,
              "example": "96.242.151.245"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[timezone]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "get",
                  "versions"
                ]
              }
            }
          ],
          "description": "Provides timezone based on address or geolocated IP."
        },
        {
          "method": "GET",
          "path": "/reference/timezones",
          "parameters": [
            {
              "name": "q",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Free text search on name for a single matching timezone. Case insensitive"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[timezone]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "get",
                  "versions"
                ]
              }
            }
          ],
          "description": "Returns a list of timezones."
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "geolocation"
          }
        }
      ],
      "path": "/",
      "description": "Time zone data is provided by the public IANA time zone database. See http://www.iana.org/time-zones"
    },
    {
      "type": "country",
      "plural": "countries",
      "operations": [
        {
          "method": "GET",
          "path": "/reference/countries",
          "parameters": [
            {
              "name": "q",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Free text search for a single matching country. Can be the 2 or 3 character code or the name of the country. Case insensitive"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[country]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "get",
                  "versions"
                ]
              }
            }
          ],
          "description": "Returns a list of countries."
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "reference"
          }
        }
      ],
      "path": "/reference/countries",
      "description": "ISO 3166 country codes. Note Flow APIs will accept either the 2 or 3 character country code, but internally we normalize data and store as the 3 character, upper case ISO code. See https://api.flow.io/reference/countries"
    },
    {
      "type": "currency",
      "plural": "currencies",
      "operations": [
        {
          "method": "GET",
          "path": "/reference/currencies",
          "parameters": [
            {
              "name": "q",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Free text search for a single matching currency. Can be the code or the name of the currency. Case insensitive"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[currency]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "get",
                  "versions"
                ]
              }
            }
          ],
          "description": "Returns a list of currencies."
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "reference"
          }
        }
      ],
      "path": "/reference/currencies",
      "description": "ISO 4217 3-character currency code. See https://api.flow.io/reference/currencies"
    },
    {
      "type": "language",
      "plural": "languages",
      "operations": [
        {
          "method": "GET",
          "path": "/reference/languages",
          "parameters": [
            {
              "name": "q",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Free text search for a single matching language. Can be the code or the name of the language. Case insensitive"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[language]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "get",
                  "versions"
                ]
              }
            }
          ],
          "description": "Returns a list of languages."
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "reference"
          }
        }
      ],
      "path": "/reference/languages",
      "description": "ISO 639 2-character language code. See https://api.flow.io/reference/languages"
    },
    {
      "type": "locale",
      "plural": "locales",
      "operations": [
        {
          "method": "GET",
          "path": "/reference/locales",
          "parameters": [
            {
              "name": "q",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Free text search on name for a single matching locale. Case insensitive"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[locale]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "get",
                  "versions"
                ]
              }
            }
          ],
          "description": "Returns a list of locales."
        },
        {
          "method": "GET",
          "path": "/reference/locales/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "locale",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Returns the locale with the specifed id."
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "reference"
          }
        }
      ],
      "path": "/reference/locales",
      "description": "Locales defines standard conventions for presentation of content. See https://api.flow.io/reference/locales"
    },
    {
      "type": "payment_method",
      "plural": "payment_methods",
      "operations": [
        {
          "method": "GET",
          "path": "/reference/payment-methods",
          "parameters": [
            {
              "name": "q",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Free text search on name for a single matching payment method. Case insensitive"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[payment_method]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "get",
                  "versions"
                ]
              }
            }
          ],
          "description": "Returns a list of payment methods supported by Flow."
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "reference"
          }
        }
      ],
      "path": "/reference/payment-methods",
      "description": "Represents a single payment method - e.g VISA or Paypal - and any associated metadata required for processing"
    },
    {
      "type": "province",
      "plural": "provinces",
      "operations": [
        {
          "method": "GET",
          "path": "/reference/provinces",
          "parameters": [
            {
              "name": "q",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Free text search on name for a single matching region. Case insensitive"
            },
            {
              "name": "countries",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "ISO 3166 3-character country code. See https://api.flow.io/reference/countries",
              "maximum": 100
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[province]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "get",
                  "versions"
                ]
              }
            }
          ],
          "description": "Returns a list of provinces."
        },
        {
          "method": "GET",
          "path": "/reference/provinces/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "province",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Returns the province with the specifed id."
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "reference"
          }
        }
      ],
      "path": "/reference/provinces",
      "description": "A subdivision/province/state within a country. These conform to the ISO 3166-2 standard for country subdivisions. See https://api.flow.io/reference/provinces"
    },
    {
      "type": "region",
      "plural": "regions",
      "operations": [
        {
          "method": "GET",
          "path": "/reference/regions",
          "parameters": [
            {
              "name": "q",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Free text search on name for a single matching region. Case insensitive"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[region]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "get",
                  "versions"
                ]
              }
            }
          ],
          "description": "Returns a list of regions."
        },
        {
          "method": "GET",
          "path": "/reference/regions/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "region",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Returns the region with the specifed id."
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "reference"
          }
        }
      ],
      "path": "/reference/regions",
      "description": "A region represents a geographic area of the world. Regions can be countries, continents or other political areas (like the Eurozone). See https://api.flow.io/reference/regions"
    },
    {
      "type": "document",
      "plural": "documents",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/search/catalog",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "q",
              "type": "string",
              "location": "Query",
              "required": false,
              "example": "gucci category:handbag price:10"
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "name"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[catalog_item_document]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "name",
                    "default": true
                  },
                  {
                    "value": "categories"
                  },
                  {
                    "value": "experience"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "versions"
                ]
              }
            }
          ],
          "description": "Returns items based on search criteria"
        },
        {
          "method": "GET",
          "path": "/:organization/search/harmonization",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "q",
              "type": "string",
              "location": "Query",
              "required": false,
              "example": "gucci category:handbag price:10"
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[harmonization_document]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "code"
                  },
                  {
                    "value": "categories"
                  },
                  {
                    "value": "origin"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "versions"
                ]
              }
            }
          ],
          "description": "Returns harmonization information based on search criteria"
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/:organization/search"
    },
    {
      "type": "email_verification",
      "plural": "email_verifications",
      "operations": [
        {
          "method": "POST",
          "path": "/users/emails/verifications/:token",
          "parameters": [
            {
              "name": "token",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "The unique token sent to the user to verify their email address"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "email_verification",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": []
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/users/emails/verifications",
      "description": "Represents the successful response of an email verification token. We return the email address in this case to allow the UI to display which email address was verified."
    },
    {
      "type": "export",
      "plural": "exports",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/exports",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "created_by_user_id",
              "type": "string",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "discriminator",
              "type": "string",
              "location": "Query",
              "required": false
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[export]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "created_at"
                  },
                  {
                    "value": "discriminator"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "versions"
                ]
              }
            }
          ],
          "description": "Search exports. Always paginated."
        },
        {
          "method": "POST",
          "path": "/:organization/exports",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "export",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Create an export.",
          "body": {
            "type": "export_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/exports/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "export",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Get a single export."
        },
        {
          "method": "DELETE",
          "path": "/:organization/exports/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/:organization/exports/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "export_id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[export_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "type"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ],
          "description": "Provides visibility into recent changes of each export, including deletion."
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/:organization/exports"
    },
    {
      "type": "feed",
      "plural": "feeds",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/feeds",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[feed]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "created_at"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "get",
                  "versions"
                ]
              }
            }
          ]
        },
        {
          "method": "DELETE",
          "path": "/:organization/feeds/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "POST",
          "path": "/:organization/feeds/catalog",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "catalog_feed",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "catalog_feed_form_post",
            "attributes": []
          }
        },
        {
          "method": "PUT",
          "path": "/:organization/feeds/catalog/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "catalog_feed",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "catalog_feed_form_put",
            "attributes": []
          }
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/:organization/feeds",
      "description": "Describes types of feeds that may be produced by Flow."
    },
    {
      "type": "healthcheck",
      "plural": "healthchecks",
      "operations": [
        {
          "method": "GET",
          "path": "/_internal_/healthcheck",
          "parameters": [],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "healthcheck",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": []
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/_internal_"
    },
    {
      "type": "import",
      "plural": "imports",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/imports",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "created_by_user_id",
              "type": "string",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "type",
              "type": "string",
              "location": "Query",
              "required": false
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[import]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "created_at"
                  },
                  {
                    "value": "type"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "versions"
                ]
              }
            }
          ],
          "description": "Search imports. Always paginated."
        },
        {
          "method": "POST",
          "path": "/:organization/imports",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "import",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Create an import.",
          "body": {
            "type": "import_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/:organization/imports/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "import",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Get a single import."
        },
        {
          "method": "DELETE",
          "path": "/:organization/imports/:id",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/:organization/imports/versions",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "import_id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[import_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "type"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ],
          "description": "Provides visibility into recent changes of each import, including deletion."
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/:organization/imports"
    },
    {
      "type": "invitation",
      "plural": "invitations",
      "operations": [
        {
          "method": "GET",
          "path": "/invitations",
          "parameters": [
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "organization",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Find invitations for this organization"
            },
            {
              "name": "email",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Find invitations for this email"
            },
            {
              "name": "token",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Find invitation for this token"
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            },
            {
              "name": "expand",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "minimum": 0,
              "maximum": 1,
              "example": "organization"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[invitation]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "organization"
                  },
                  {
                    "value": "email"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            }
          ],
          "description": "Search invitations. Always paginated."
        },
        {
          "method": "POST",
          "path": "/invitations",
          "parameters": [],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "invitation",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Create a new invitation.",
          "body": {
            "type": "invitation_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/invitations/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            },
            {
              "name": "expand",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "minimum": 0,
              "maximum": 1,
              "example": "organization"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "invitation",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Returns information about a specific invitation."
        },
        {
          "method": "DELETE",
          "path": "/invitations/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/invitations/tokens/:token",
          "parameters": [
            {
              "name": "token",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "expand",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "minimum": 0,
              "maximum": 1,
              "example": "organization"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "invitation",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Lookup an invitation by its token."
        },
        {
          "method": "PUT",
          "path": "/invitations/tokens/:token",
          "parameters": [
            {
              "name": "token",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "membership",
              "description": "Indicates user was previously a member of the organization"
            },
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "membership",
              "description": "The new membership record for this user/organization"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "invitation_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Accepts the invitation w/ the specified token and the authenticated user. Creating a membership record for this user within this organization. Invitations are one time use only - you will get a validation error if the invitation has previously been accepted or if the user's email addresses do not match the email on the invite."
        },
        {
          "method": "GET",
          "path": "/invitations/versions",
          "parameters": [
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "invitation",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter to versions for invitations with any one of these ids.",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[invitation_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "invitation"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/invitations",
      "description": "An invitation via email to a user to join this organization. The user will then walk through a user login/registration process and will immediately become a member of the organization."
    },
    {
      "type": "link",
      "plural": "links",
      "operations": [
        {
          "method": "GET",
          "path": "/carrier/:carrier/data/:organization/:order_number",
          "parameters": [
            {
              "name": "carrier",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "order_number",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 302
                }
              },
              "type": "string"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "response_codes"
                ]
              }
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/carrier/:carrier/data/:organization/:order_number"
    },
    {
      "type": "membership",
      "plural": "memberships",
      "operations": [
        {
          "method": "GET",
          "path": "/memberships",
          "parameters": [
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "user",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Find memberships for this user id",
              "maximum": 100
            },
            {
              "name": "organization",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Find memberships for this organization id",
              "maximum": 100
            },
            {
              "name": "role",
              "type": "[role]",
              "location": "Query",
              "required": false,
              "description": "Find memberships with these roles",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            },
            {
              "name": "expand",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "minimum": 0,
              "maximum": 2,
              "example": "organization, user"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[membership]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "user"
                  },
                  {
                    "value": "organization"
                  },
                  {
                    "value": "role"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            }
          ],
          "description": "Search memberships. Always paginated."
        },
        {
          "method": "POST",
          "path": "/memberships",
          "parameters": [],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "membership",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Create a new membership.",
          "body": {
            "type": "membership_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/memberships/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            },
            {
              "name": "expand",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "minimum": 0,
              "maximum": 1,
              "example": "organization"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "membership",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Returns information about a specific membership."
        },
        {
          "method": "PUT",
          "path": "/memberships/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "membership",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Change the role for a specific membership record. If the user already has the specified role within the organization, does nothing.",
          "body": {
            "type": "membership_put_form",
            "attributes": []
          }
        },
        {
          "method": "DELETE",
          "path": "/memberships/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/memberships/versions",
          "parameters": [
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "membership",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter membership changes with any one of these ids.",
              "maximum": 100
            },
            {
              "name": "user",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Filter membership changes for this user id",
              "maximum": 100
            },
            {
              "name": "organization",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Filter membership changes for this organization id",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[membership_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "membership"
                  },
                  {
                    "value": "user"
                  },
                  {
                    "value": "organization"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ]
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/memberships",
      "description": "Represents the users that are part of this organization. Primary purpose is to manage which users have access to the organization's data and to provide a simple user interface to assign roles and permissions to each member of the organization"
    },
    {
      "type": "organization_authorization",
      "plural": "organization_authorizations",
      "operations": [
        {
          "method": "POST",
          "path": "/organization-authorizations",
          "parameters": [],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "organization_authorization",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "For the authorized user, if the specified organization exists, and the user is an active member of this organization, returns the authorization data used throughout APIs at Flow, including the user's role in that organization and the organization environment. Otherwise, returns 401 - this indicates either the org does not exist or the user does not have access to the org.",
          "body": {
            "type": "organization_authorization_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/organization-authorizations/:organization",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "organization_authorization",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "For the authorized user and specific organization, if the user is an active member of this organization, returns the authorization data used throughout APIs at Flow, including the user's role in that organization and the organization environment."
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/organization-authorizations",
      "description": "Defines the data used for broad authorization of user access to org level data"
    },
    {
      "type": "organization_token",
      "plural": "organization_tokens",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/tokens",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "mine",
              "type": "boolean",
              "location": "Query",
              "required": false,
              "description": "Filter to tokens created by the requesting user"
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[organization_token]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "description"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "versions"
                ]
              }
            }
          ],
          "description": "Get all tokens for the specifed organization"
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/:organization/tokens",
      "description": "All of the metadata associated with a given token."
    },
    {
      "type": "partner_token",
      "plural": "partner_tokens",
      "operations": [
        {
          "method": "GET",
          "path": "/partners/:partner/tokens",
          "parameters": [
            {
              "name": "partner",
              "type": "string",
              "location": "Path",
              "required": true
            },
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "mine",
              "type": "boolean",
              "location": "Query",
              "required": false,
              "description": "Filter to tokens created by the requesting user"
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[partner_token]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "description"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "versions"
                ]
              }
            }
          ],
          "description": "Get all tokens for the specifed partner"
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/partners/:partner/tokens",
      "description": "All of the metadata associated with a given token."
    },
    {
      "type": "password_reset_form",
      "plural": "password_reset_forms",
      "operations": [
        {
          "method": "POST",
          "path": "/users/passwords",
          "parameters": [
            {
              "name": "expand",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "minimum": 0,
              "maximum": 1,
              "example": "user"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "expandable_user",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "password_reset_form",
            "attributes": []
          }
        },
        {
          "method": "POST",
          "path": "/users/passwords/resets",
          "parameters": [],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "password_reset_request_form",
            "attributes": []
          }
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/users/passwords"
    },
    {
      "type": "scheduled_export",
      "plural": "scheduled_exports",
      "operations": [
        {
          "method": "GET",
          "path": "/users/scheduled/exports",
          "parameters": [
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[scheduled_export]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "versions"
                ]
              }
            }
          ],
          "description": "Search scheduled exports. Always paginated."
        },
        {
          "method": "POST",
          "path": "/users/scheduled/exports",
          "parameters": [],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "scheduled_export",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Create a scheduled export.",
          "body": {
            "type": "scheduled_export_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/users/scheduled/exports/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "scheduled_export",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Get a single excheduled export."
        },
        {
          "method": "PUT",
          "path": "/users/scheduled/exports/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "scheduled_export",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Update a scheduled export.",
          "body": {
            "type": "scheduled_export_form",
            "attributes": []
          }
        },
        {
          "method": "DELETE",
          "path": "/users/scheduled/exports/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/users/scheduled/exports"
    },
    {
      "type": "session",
      "plural": "sessions",
      "operations": [
        {
          "method": "GET",
          "path": "/sessions/:session",
          "parameters": [
            {
              "name": "session",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "session",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "response_codes"
                ]
              },
              "description": "401 not a required response since operation is anonymously authenticated."
            }
          ]
        },
        {
          "method": "PUT",
          "path": "/sessions/:session",
          "parameters": [
            {
              "name": "session",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "session",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "response_codes"
                ]
              },
              "description": "401 not a required response since operation is anonymously authenticated."
            }
          ],
          "body": {
            "type": "session_put_form",
            "attributes": []
          }
        },
        {
          "method": "DELETE",
          "path": "/sessions/:session",
          "parameters": [
            {
              "name": "session",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "PUT",
          "path": "/sessions/:session/reset",
          "parameters": [
            {
              "name": "session",
              "type": "string",
              "location": "Path",
              "required": true
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "session",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "response_codes"
                ]
              },
              "description": "401 not a required response since operation is anonymously authenticated."
            }
          ],
          "description": "Resets the session based on the provided geo parameters.",
          "body": {
            "type": "session_reset_form",
            "attributes": []
          }
        },
        {
          "method": "POST",
          "path": "/sessions/organizations/:organization",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "organization_session",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "response_codes"
                ]
              },
              "description": "401 not a required response since operation is anonymously authenticated."
            }
          ],
          "body": {
            "type": "session_form",
            "attributes": []
          }
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/sessions"
    },
    {
      "type": "session_authorization",
      "plural": "session_authorizations",
      "operations": [
        {
          "method": "POST",
          "path": "/authorizations/sessions",
          "parameters": [],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "session_authorization",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "session_authorization_form",
            "attributes": []
          }
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/authorizations/sessions"
    },
    {
      "type": "suggestion",
      "plural": "suggestions",
      "operations": [
        {
          "method": "GET",
          "path": "/:organization/suggestion/catalog",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "q",
              "type": "string",
              "location": "Query",
              "required": false,
              "example": "gucci category:handbag price:10"
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-count"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[suggestion]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "count"
                  },
                  {
                    "value": "label"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "versions",
                  "sort_parameter_default"
                ]
              }
            }
          ],
          "description": "Returns search suggestions for catalog items"
        },
        {
          "method": "GET",
          "path": "/:organization/suggestion/harmonization",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "q",
              "type": "string",
              "location": "Query",
              "required": false,
              "example": "gucci category:handbag price:10"
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[suggestion]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "count"
                  },
                  {
                    "value": "label"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "versions",
                  "sort_parameter_default"
                ]
              }
            }
          ],
          "description": "Returns search suggestions for harmonization data"
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/:organization/suggestion"
    },
    {
      "type": "token",
      "plural": "tokens",
      "operations": [
        {
          "method": "GET",
          "path": "/tokens",
          "parameters": [
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "organization",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Filter to tokens created for this organization"
            },
            {
              "name": "partner",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Filter to tokens created for this partner"
            },
            {
              "name": "mine",
              "type": "boolean",
              "location": "Query",
              "required": false,
              "description": "Filter to tokens created by the requesting user"
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[token]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "description"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            },
            {
              "name": "linter",
              "value": {
                "ignore": [
                  "versions"
                ]
              }
            }
          ],
          "description": "Get all tokens that you are authorized to view. Note that the cleartext token value is never sent. To view the API token itself, see the resource path /tokens/:id/cleartext"
        },
        {
          "method": "POST",
          "path": "/tokens",
          "parameters": [],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "token",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Create a new token for the requesting user",
          "body": {
            "type": "token_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/tokens/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "token",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Get metadata for the token with this ID"
        },
        {
          "method": "DELETE",
          "path": "/tokens/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": []
        },
        {
          "method": "GET",
          "path": "/tokens/:id/cleartext",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "cleartext",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Retrieves the token with the actual string token in cleartext"
        },
        {
          "method": "POST",
          "path": "/tokens/authentications",
          "parameters": [],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "token_reference",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Preferred method to validate a token, obtaining specific information if the token is valid (or a 404 if the token does not exist). We use an HTTP POST with a form body to enusre that the token itself is not logged in the request logs.",
          "body": {
            "type": "token_authentication_form",
            "attributes": []
          }
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/tokens"
    },
    {
      "type": "token_validation",
      "plural": "token_validations",
      "operations": [
        {
          "method": "POST",
          "path": "/token-validations",
          "parameters": [],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "token_validation",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "body": {
            "type": "token_validation_form",
            "attributes": []
          }
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/token-validations",
      "description": "Validations test whether or not a given API token is valid"
    },
    {
      "type": "upload",
      "plural": "uploads",
      "operations": [
        {
          "method": "POST",
          "path": "/:organization/uploads/:name",
          "parameters": [
            {
              "name": "organization",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Refers to your organization's account identifier"
            },
            {
              "name": "name",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "The name of the file you are uploading. Note that the name will be part of the generated URL - but the URL itself will contain a unique randomized string.",
              "example": "import.csv"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "upload",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": []
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/:organization/uploads",
      "description": "Provides the ability to upload a file to a URL (an expiring s3 url, usually valid for 1 week)"
    },
    {
      "type": "user",
      "plural": "users",
      "operations": [
        {
          "method": "GET",
          "path": "/users",
          "parameters": [
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "email",
              "type": "string",
              "location": "Query",
              "required": false,
              "description": "Find users with this email address. Case insensitive. Exact match"
            },
            {
              "name": "status",
              "type": "user_status",
              "location": "Query",
              "required": false,
              "description": "Find users with this status"
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "-created_at"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[user]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "email"
                  },
                  {
                    "value": "created_at"
                  }
                ]
              }
            }
          ],
          "description": "Search users. Always paginated."
        },
        {
          "method": "POST",
          "path": "/users",
          "parameters": [],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 201
                }
              },
              "type": "user",
              "description": "Operation succeeded and the resource was created"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Create a new user. Note that new users will be created with a status of pending and will not be able to authenticate until approved by a member of the Flow team.",
          "body": {
            "type": "user_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/users/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "user",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            }
          ],
          "attributes": [],
          "description": "Returns information about a specific user."
        },
        {
          "method": "PUT",
          "path": "/users/:id",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "user",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Update a user.",
          "body": {
            "type": "user_put_form",
            "attributes": []
          }
        },
        {
          "method": "PATCH",
          "path": "/users/:id/passwords",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Update the password for a user.",
          "body": {
            "type": "password_change_form",
            "attributes": []
          }
        },
        {
          "method": "DELETE",
          "path": "/users/:id/passwords",
          "parameters": [
            {
              "name": "id",
              "type": "string",
              "location": "Path",
              "required": true,
              "description": "Filter by one or more IDs of this resource"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 204
                }
              },
              "type": "unit",
              "description": "Operation succeeded. No content is returned"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Deletes a password for the given user."
        },
        {
          "method": "POST",
          "path": "/users/authenticate",
          "parameters": [],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "user",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            },
            {
              "code": {
                "integer": {
                  "value": 404
                }
              },
              "type": "unit",
              "description": "Resource was not found"
            },
            {
              "code": {
                "integer": {
                  "value": 422
                }
              },
              "type": "generic_error",
              "description": "One or more errors were found with the data sent in the request. The body of the response contains specific details on what data failed validation."
            }
          ],
          "attributes": [],
          "description": "Authenticates a user by email / password. Note only users that have a status of active will be authorized.",
          "body": {
            "type": "authentication_form",
            "attributes": []
          }
        },
        {
          "method": "GET",
          "path": "/users/versions",
          "parameters": [
            {
              "name": "id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter by one or more IDs of this resource",
              "maximum": 100
            },
            {
              "name": "user_id",
              "type": "[string]",
              "location": "Query",
              "required": false,
              "description": "Filter to users with any one of these ids.",
              "maximum": 100
            },
            {
              "name": "limit",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The maximum number of results to return",
              "default": "25",
              "minimum": 1,
              "maximum": 100
            },
            {
              "name": "offset",
              "type": "long",
              "location": "Query",
              "required": true,
              "description": "The number of results to skip before returning results",
              "default": "0",
              "minimum": 0
            },
            {
              "name": "sort",
              "type": "string",
              "location": "Query",
              "required": true,
              "default": "journal_timestamp"
            }
          ],
          "responses": [
            {
              "code": {
                "integer": {
                  "value": 200
                }
              },
              "type": "[user_version]",
              "description": "Successful response"
            },
            {
              "code": {
                "integer": {
                  "value": 401
                }
              },
              "type": "unit",
              "description": "Authorization failed"
            }
          ],
          "attributes": [
            {
              "name": "sort",
              "value": {
                "values": [
                  {
                    "value": "id"
                  },
                  {
                    "value": "user_id"
                  },
                  {
                    "value": "journal_timestamp"
                  }
                ]
              }
            }
          ],
          "description": "Provides visibility into recent changes of each object, including deletion"
        }
      ],
      "attributes": [
        {
          "name": "docs",
          "value": {
            "module": "general"
          }
        }
      ],
      "path": "/users"
    }
  ],
  "attributes": [],
  "base_url": "https://api.flow.io",
  "description": "The Flow Commerce REST API provides full access to the global ecommerce platform."
}
